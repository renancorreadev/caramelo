{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getScriptWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert()":"285b366a","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","getScriptWallets()":"7c49aa1f","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScriptWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getScriptWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x51d822417db259b59eec2dfb7859285cef983a26b5d4fba20e1addabccc8734e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0e3b5abe0173ee6e479e4248eb4ee3a4374f7e08fb2848d93f5c2cf5e95214f1\",\"dweb:/ipfs/QmbUBD4NLFCuR6WHVx5unXH2uWHEhtADLcFrUwyev8iLrD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getScriptWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getScriptWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x51d822417db259b59eec2dfb7859285cef983a26b5d4fba20e1addabccc8734e","urls":["bzz-raw://0e3b5abe0173ee6e479e4248eb4ee3a4374f7e08fb2848d93f5c2cf5e95214f1","dweb:/ipfs/QmbUBD4NLFCuR6WHVx5unXH2uWHEhtADLcFrUwyev8iLrD"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":19534,"exportedSymbols":{"Vm":[19533],"VmSafe":[18690]},"nodeType":"SourceUnit","src":"117:107959:16","nodes":[{"id":15096,"nodeType":"PragmaDirective","src":"117:31:16","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":15097,"nodeType":"PragmaDirective","src":"149:33:16","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":18690,"nodeType":"ContractDefinition","src":"409:86712:16","nodes":[{"id":15105,"nodeType":"EnumDefinition","src":"529:533:16","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":15099,"nodeType":"StructuredDocumentation","src":"432:92:16","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":15100,"name":"None","nameLocation":"610:4:16","nodeType":"EnumValue","src":"610:4:16"},{"id":15101,"name":"Broadcast","nameLocation":"714:9:16","nodeType":"EnumValue","src":"714:9:16"},{"id":15102,"name":"RecurrentBroadcast","nameLocation":"829:18:16","nodeType":"EnumValue","src":"829:18:16"},{"id":15103,"name":"Prank","nameLocation":"939:5:16","nodeType":"EnumValue","src":"939:5:16"},{"id":15104,"name":"RecurrentPrank","nameLocation":"1042:14:16","nodeType":"EnumValue","src":"1042:14:16"}],"name":"CallerMode","nameLocation":"534:10:16"},{"id":15118,"nodeType":"EnumDefinition","src":"1118:791:16","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":15106,"nodeType":"StructuredDocumentation","src":"1068:45:16","text":"The kind of account access that occurred."},"members":[{"id":15107,"name":"Call","nameLocation":"1186:4:16","nodeType":"EnumValue","src":"1186:4:16"},{"id":15108,"name":"DelegateCall","nameLocation":"1252:12:16","nodeType":"EnumValue","src":"1252:12:16"},{"id":15109,"name":"CallCode","nameLocation":"1322:8:16","nodeType":"EnumValue","src":"1322:8:16"},{"id":15110,"name":"StaticCall","nameLocation":"1390:10:16","nodeType":"EnumValue","src":"1390:10:16"},{"id":15111,"name":"Create","nameLocation":"1446:6:16","nodeType":"EnumValue","src":"1446:6:16"},{"id":15112,"name":"SelfDestruct","nameLocation":"1505:12:16","nodeType":"EnumValue","src":"1505:12:16"},{"id":15113,"name":"Resume","nameLocation":"1644:6:16","nodeType":"EnumValue","src":"1644:6:16"},{"id":15114,"name":"Balance","nameLocation":"1703:7:16","nodeType":"EnumValue","src":"1703:7:16"},{"id":15115,"name":"Extcodesize","nameLocation":"1764:11:16","nodeType":"EnumValue","src":"1764:11:16"},{"id":15116,"name":"Extcodehash","nameLocation":"1829:11:16","nodeType":"EnumValue","src":"1829:11:16"},{"id":15117,"name":"Extcodecopy","nameLocation":"1892:11:16","nodeType":"EnumValue","src":"1892:11:16"}],"name":"AccountAccessKind","nameLocation":"1123:17:16"},{"id":15129,"nodeType":"EnumDefinition","src":"1949:683:16","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":15119,"nodeType":"StructuredDocumentation","src":"1915:29:16","text":"Forge execution contexts."},"members":[{"id":15120,"name":"TestGroup","nameLocation":"2047:9:16","nodeType":"EnumValue","src":"2047:9:16"},{"id":15121,"name":"Test","nameLocation":"2109:4:16","nodeType":"EnumValue","src":"2109:4:16"},{"id":15122,"name":"Coverage","nameLocation":"2170:8:16","nodeType":"EnumValue","src":"2170:8:16"},{"id":15123,"name":"Snapshot","nameLocation":"2235:8:16","nodeType":"EnumValue","src":"2235:8:16"},{"id":15124,"name":"ScriptGroup","nameLocation":"2327:11:16","nodeType":"EnumValue","src":"2327:11:16"},{"id":15125,"name":"ScriptDryRun","nameLocation":"2393:12:16","nodeType":"EnumValue","src":"2393:12:16"},{"id":15126,"name":"ScriptBroadcast","nameLocation":"2472:15:16","nodeType":"EnumValue","src":"2472:15:16"},{"id":15127,"name":"ScriptResume","nameLocation":"2551:12:16","nodeType":"EnumValue","src":"2551:12:16"},{"id":15128,"name":"Unknown","nameLocation":"2619:7:16","nodeType":"EnumValue","src":"2619:7:16"}],"name":"ForgeContext","nameLocation":"1954:12:16"},{"id":15138,"nodeType":"StructDefinition","src":"2694:237:16","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":15130,"nodeType":"StructuredDocumentation","src":"2638:51:16","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":15133,"mutability":"mutable","name":"topics","nameLocation":"2792:6:16","nodeType":"VariableDeclaration","scope":15138,"src":"2782:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15132,"nodeType":"ArrayTypeName","src":"2782:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15135,"mutability":"mutable","name":"data","nameLocation":"2850:4:16","nodeType":"VariableDeclaration","scope":15138,"src":"2844:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15134,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15137,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:16","nodeType":"VariableDeclaration","scope":15138,"src":"2909:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15136,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:16","scope":18690,"visibility":"public"},{"id":15144,"nodeType":"StructDefinition","src":"3000:119:16","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":15139,"nodeType":"StructuredDocumentation","src":"2937:58:16","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":15141,"mutability":"mutable","name":"key","nameLocation":"3065:3:16","nodeType":"VariableDeclaration","scope":15144,"src":"3058:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15140,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15143,"mutability":"mutable","name":"url","nameLocation":"3109:3:16","nodeType":"VariableDeclaration","scope":15144,"src":"3102:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15142,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:16","scope":18690,"visibility":"public"},{"id":15165,"nodeType":"StructDefinition","src":"3179:615:16","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":15145,"nodeType":"StructuredDocumentation","src":"3125:49:16","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":15147,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:16","nodeType":"VariableDeclaration","scope":15165,"src":"3252:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15146,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15150,"mutability":"mutable","name":"topics","nameLocation":"3354:6:16","nodeType":"VariableDeclaration","scope":15165,"src":"3344:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15149,"nodeType":"ArrayTypeName","src":"3344:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15152,"mutability":"mutable","name":"data","nameLocation":"3412:4:16","nodeType":"VariableDeclaration","scope":15165,"src":"3406:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15151,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15154,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:16","nodeType":"VariableDeclaration","scope":15165,"src":"3453:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15156,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:16","nodeType":"VariableDeclaration","scope":15165,"src":"3509:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15155,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15158,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:16","nodeType":"VariableDeclaration","scope":15165,"src":"3570:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15160,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:16","nodeType":"VariableDeclaration","scope":15165,"src":"3650:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15159,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15162,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:16","nodeType":"VariableDeclaration","scope":15165,"src":"3709:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15164,"mutability":"mutable","name":"removed","nameLocation":"3780:7:16","nodeType":"VariableDeclaration","scope":15165,"src":"3775:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15163,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:16","scope":18690,"visibility":"public"},{"id":15177,"nodeType":"StructDefinition","src":"3870:334:16","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":15166,"nodeType":"StructuredDocumentation","src":"3800:65:16","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":15168,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:16","nodeType":"VariableDeclaration","scope":15177,"src":"3934:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15167,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15170,"mutability":"mutable","name":"path","nameLocation":"4004:4:16","nodeType":"VariableDeclaration","scope":15177,"src":"3997:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15169,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15172,"mutability":"mutable","name":"depth","nameLocation":"4060:5:16","nodeType":"VariableDeclaration","scope":15177,"src":"4053:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15171,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15174,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:16","nodeType":"VariableDeclaration","scope":15177,"src":"4120:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15173,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15176,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:16","nodeType":"VariableDeclaration","scope":15177,"src":"4183:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15175,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:16","scope":18690,"visibility":"public"},{"id":15193,"nodeType":"StructDefinition","src":"4434:599:16","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":15178,"nodeType":"StructuredDocumentation","src":"4210:219:16","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":15180,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:16","nodeType":"VariableDeclaration","scope":15193,"src":"4515:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15179,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15182,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:16","nodeType":"VariableDeclaration","scope":15193,"src":"4586:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15181,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15184,"mutability":"mutable","name":"length","nameLocation":"4683:6:16","nodeType":"VariableDeclaration","scope":15193,"src":"4675:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15186,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:16","nodeType":"VariableDeclaration","scope":15193,"src":"4769:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15185,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15188,"mutability":"mutable","name":"modified","nameLocation":"4863:8:16","nodeType":"VariableDeclaration","scope":15193,"src":"4855:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15187,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15190,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:16","nodeType":"VariableDeclaration","scope":15193,"src":"4931:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15189,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15192,"mutability":"mutable","name":"created","nameLocation":"5019:7:16","nodeType":"VariableDeclaration","scope":15193,"src":"5011:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:16","scope":18690,"visibility":"public"},{"id":15203,"nodeType":"StructDefinition","src":"5087:277:16","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":15194,"nodeType":"StructuredDocumentation","src":"5039:43:16","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":15196,"mutability":"mutable","name":"addr","nameLocation":"5152:4:16","nodeType":"VariableDeclaration","scope":15203,"src":"5144:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15195,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15198,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:16","nodeType":"VariableDeclaration","scope":15203,"src":"5206:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15197,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15200,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:16","nodeType":"VariableDeclaration","scope":15203,"src":"5274:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15202,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:16","nodeType":"VariableDeclaration","scope":15203,"src":"5339:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:16","scope":18690,"visibility":"public"},{"id":15211,"nodeType":"StructDefinition","src":"5409:213:16","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":15204,"nodeType":"StructuredDocumentation","src":"5370:34:16","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":15206,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:16","nodeType":"VariableDeclaration","scope":15211,"src":"5474:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":15205,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":15208,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:16","nodeType":"VariableDeclaration","scope":15211,"src":"5551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15207,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15210,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:16","nodeType":"VariableDeclaration","scope":15211,"src":"5603:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15209,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:16","scope":18690,"visibility":"public"},{"id":15217,"nodeType":"StructDefinition","src":"5671:184:16","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":15212,"nodeType":"StructuredDocumentation","src":"5628:38:16","text":"Information on the chain and fork."},"members":[{"constant":false,"id":15214,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:16","nodeType":"VariableDeclaration","scope":15217,"src":"5764:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15216,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:16","nodeType":"VariableDeclaration","scope":15217,"src":"5833:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:16","scope":18690,"visibility":"public"},{"id":15249,"nodeType":"StructDefinition","src":"5916:1837:16","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":15218,"nodeType":"StructuredDocumentation","src":"5861:50:16","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":15221,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:16","nodeType":"VariableDeclaration","scope":15249,"src":"5998:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$15217_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":15220,"nodeType":"UserDefinedTypeName","pathNode":{"id":15219,"name":"ChainInfo","nameLocations":["5998:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":15217,"src":"5998:9:16"},"referencedDeclaration":15217,"src":"5998:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$15217_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":15224,"mutability":"mutable","name":"kind","nameLocation":"6471:4:16","nodeType":"VariableDeclaration","scope":15249,"src":"6453:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15118","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":15223,"nodeType":"UserDefinedTypeName","pathNode":{"id":15222,"name":"AccountAccessKind","nameLocations":["6453:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":15118,"src":"6453:17:16"},"referencedDeclaration":15118,"src":"6453:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15118","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":15226,"mutability":"mutable","name":"account","nameLocation":"6648:7:16","nodeType":"VariableDeclaration","scope":15249,"src":"6640:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15225,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15228,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:16","nodeType":"VariableDeclaration","scope":15249,"src":"6703:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15227,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15230,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:16","nodeType":"VariableDeclaration","scope":15249,"src":"6917:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15229,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15232,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:16","nodeType":"VariableDeclaration","scope":15249,"src":"7000:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15231,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15234,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:16","nodeType":"VariableDeclaration","scope":15249,"src":"7175:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15233,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15236,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:16","nodeType":"VariableDeclaration","scope":15249,"src":"7254:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15235,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15238,"mutability":"mutable","name":"value","nameLocation":"7344:5:16","nodeType":"VariableDeclaration","scope":15249,"src":"7336:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15237,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15240,"mutability":"mutable","name":"data","nameLocation":"7418:4:16","nodeType":"VariableDeclaration","scope":15249,"src":"7412:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15239,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15242,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:16","nodeType":"VariableDeclaration","scope":15249,"src":"7508:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15241,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15246,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:16","nodeType":"VariableDeclaration","scope":15249,"src":"7619:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$15263_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":15244,"nodeType":"UserDefinedTypeName","pathNode":{"id":15243,"name":"StorageAccess","nameLocations":["7619:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":15263,"src":"7619:13:16"},"referencedDeclaration":15263,"src":"7619:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$15263_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":15245,"nodeType":"ArrayTypeName","src":"7619:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$15263_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":15248,"mutability":"mutable","name":"depth","nameLocation":"7741:5:16","nodeType":"VariableDeclaration","scope":15249,"src":"7734:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15247,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:16","scope":18690,"visibility":"public"},{"id":15263,"nodeType":"StructDefinition","src":"7815:425:16","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":15250,"nodeType":"StructuredDocumentation","src":"7759:51:16","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":15252,"mutability":"mutable","name":"account","nameLocation":"7905:7:16","nodeType":"VariableDeclaration","scope":15263,"src":"7897:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15251,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15254,"mutability":"mutable","name":"slot","nameLocation":"7969:4:16","nodeType":"VariableDeclaration","scope":15263,"src":"7961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15256,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:16","nodeType":"VariableDeclaration","scope":15263,"src":"8021:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15255,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15258,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:16","nodeType":"VariableDeclaration","scope":15263,"src":"8086:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15260,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:16","nodeType":"VariableDeclaration","scope":15263,"src":"8155:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15262,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:16","nodeType":"VariableDeclaration","scope":15263,"src":"8220:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15261,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:16","scope":18690,"visibility":"public"},{"id":15275,"nodeType":"StructDefinition","src":"8291:458:16","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":15264,"nodeType":"StructuredDocumentation","src":"8246:40:16","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":15266,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:16","nodeType":"VariableDeclaration","scope":15275,"src":"8350:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15265,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15268,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:16","nodeType":"VariableDeclaration","scope":15275,"src":"8406:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15267,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15270,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:16","nodeType":"VariableDeclaration","scope":15275,"src":"8587:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15269,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15272,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:16","nodeType":"VariableDeclaration","scope":15275,"src":"8656:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":15271,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":15274,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:16","nodeType":"VariableDeclaration","scope":15275,"src":"8723:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15273,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:16","scope":18690,"visibility":"public"},{"id":15290,"nodeType":"StructDefinition","src":"8812:848:16","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":15276,"nodeType":"StructuredDocumentation","src":"8755:52:16","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":15279,"mutability":"mutable","name":"stack","nameLocation":"9041:5:16","nodeType":"VariableDeclaration","scope":15290,"src":"9031:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15277,"name":"uint256","nodeType":"ElementaryTypeName","src":"9031:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15278,"nodeType":"ArrayTypeName","src":"9031:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15281,"mutability":"mutable","name":"memoryInput","nameLocation":"9345:11:16","nodeType":"VariableDeclaration","scope":15290,"src":"9339:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15280,"name":"bytes","nodeType":"ElementaryTypeName","src":"9339:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15283,"mutability":"mutable","name":"opcode","nameLocation":"9413:6:16","nodeType":"VariableDeclaration","scope":15290,"src":"9407:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15282,"name":"uint8","nodeType":"ElementaryTypeName","src":"9407:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15285,"mutability":"mutable","name":"depth","nameLocation":"9475:5:16","nodeType":"VariableDeclaration","scope":15290,"src":"9468:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15284,"name":"uint64","nodeType":"ElementaryTypeName","src":"9468:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15287,"mutability":"mutable","name":"isOutOfGas","nameLocation":"9553:10:16","nodeType":"VariableDeclaration","scope":15290,"src":"9548:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15286,"name":"bool","nodeType":"ElementaryTypeName","src":"9548:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15289,"mutability":"mutable","name":"contractAddr","nameLocation":"9641:12:16","nodeType":"VariableDeclaration","scope":15290,"src":"9633:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15288,"name":"address","nodeType":"ElementaryTypeName","src":"9633:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"8819:9:16","scope":18690,"visibility":"public"},{"id":15299,"nodeType":"FunctionDefinition","src":"9803:91:16","nodes":[],"documentation":{"id":15291,"nodeType":"StructuredDocumentation","src":"9699:99:16","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9812:12:16","parameters":{"id":15294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15293,"mutability":"mutable","name":"walletLabel","nameLocation":"9841:11:16","nodeType":"VariableDeclaration","scope":15299,"src":"9825:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15292,"name":"string","nodeType":"ElementaryTypeName","src":"9825:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9824:29:16"},"returnParameters":{"id":15298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15297,"mutability":"mutable","name":"wallet","nameLocation":"9886:6:16","nodeType":"VariableDeclaration","scope":15299,"src":"9872:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15296,"nodeType":"UserDefinedTypeName","pathNode":{"id":15295,"name":"Wallet","nameLocations":["9872:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15203,"src":"9872:6:16"},"referencedDeclaration":15203,"src":"9872:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9871:22:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15308,"nodeType":"FunctionDefinition","src":"9972:82:16","nodes":[],"documentation":{"id":15300,"nodeType":"StructuredDocumentation","src":"9900:67:16","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9981:12:16","parameters":{"id":15303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15302,"mutability":"mutable","name":"privateKey","nameLocation":"10002:10:16","nodeType":"VariableDeclaration","scope":15308,"src":"9994:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15301,"name":"uint256","nodeType":"ElementaryTypeName","src":"9994:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9993:20:16"},"returnParameters":{"id":15307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15306,"mutability":"mutable","name":"wallet","nameLocation":"10046:6:16","nodeType":"VariableDeclaration","scope":15308,"src":"10032:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15305,"nodeType":"UserDefinedTypeName","pathNode":{"id":15304,"name":"Wallet","nameLocations":["10032:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15203,"src":"10032:6:16"},"referencedDeclaration":15203,"src":"10032:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"10031:22:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15319,"nodeType":"FunctionDefinition","src":"10168:111:16","nodes":[],"documentation":{"id":15309,"nodeType":"StructuredDocumentation","src":"10060:103:16","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"10177:12:16","parameters":{"id":15314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15311,"mutability":"mutable","name":"privateKey","nameLocation":"10198:10:16","nodeType":"VariableDeclaration","scope":15319,"src":"10190:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15310,"name":"uint256","nodeType":"ElementaryTypeName","src":"10190:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15313,"mutability":"mutable","name":"walletLabel","nameLocation":"10226:11:16","nodeType":"VariableDeclaration","scope":15319,"src":"10210:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15312,"name":"string","nodeType":"ElementaryTypeName","src":"10210:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10189:49:16"},"returnParameters":{"id":15318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15317,"mutability":"mutable","name":"wallet","nameLocation":"10271:6:16","nodeType":"VariableDeclaration","scope":15319,"src":"10257:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15316,"nodeType":"UserDefinedTypeName","pathNode":{"id":15315,"name":"Wallet","nameLocations":["10257:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15203,"src":"10257:6:16"},"referencedDeclaration":15203,"src":"10257:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"10256:22:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15329,"nodeType":"FunctionDefinition","src":"10427:102:16","nodes":[],"documentation":{"id":15320,"nodeType":"StructuredDocumentation","src":"10285:137:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10436:9:16","parameters":{"id":15325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15322,"mutability":"mutable","name":"mnemonic","nameLocation":"10462:8:16","nodeType":"VariableDeclaration","scope":15329,"src":"10446:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15321,"name":"string","nodeType":"ElementaryTypeName","src":"10446:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15324,"mutability":"mutable","name":"index","nameLocation":"10479:5:16","nodeType":"VariableDeclaration","scope":15329,"src":"10472:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15323,"name":"uint32","nodeType":"ElementaryTypeName","src":"10472:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10445:40:16"},"returnParameters":{"id":15328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15327,"mutability":"mutable","name":"privateKey","nameLocation":"10517:10:16","nodeType":"VariableDeclaration","scope":15329,"src":"10509:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15326,"name":"uint256","nodeType":"ElementaryTypeName","src":"10509:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10508:20:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15341,"nodeType":"FunctionDefinition","src":"10658:158:16","nodes":[],"documentation":{"id":15330,"nodeType":"StructuredDocumentation","src":"10535:118:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10667:9:16","parameters":{"id":15337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15332,"mutability":"mutable","name":"mnemonic","nameLocation":"10693:8:16","nodeType":"VariableDeclaration","scope":15341,"src":"10677:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15331,"name":"string","nodeType":"ElementaryTypeName","src":"10677:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15334,"mutability":"mutable","name":"derivationPath","nameLocation":"10719:14:16","nodeType":"VariableDeclaration","scope":15341,"src":"10703:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15333,"name":"string","nodeType":"ElementaryTypeName","src":"10703:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15336,"mutability":"mutable","name":"index","nameLocation":"10742:5:16","nodeType":"VariableDeclaration","scope":15341,"src":"10735:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15335,"name":"uint32","nodeType":"ElementaryTypeName","src":"10735:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10676:72:16"},"returnParameters":{"id":15340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15339,"mutability":"mutable","name":"privateKey","nameLocation":"10804:10:16","nodeType":"VariableDeclaration","scope":15341,"src":"10796:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15338,"name":"uint256","nodeType":"ElementaryTypeName","src":"10796:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10795:20:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15353,"nodeType":"FunctionDefinition","src":"10990:152:16","nodes":[],"documentation":{"id":15342,"nodeType":"StructuredDocumentation","src":"10822:163:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10999:9:16","parameters":{"id":15349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15344,"mutability":"mutable","name":"mnemonic","nameLocation":"11025:8:16","nodeType":"VariableDeclaration","scope":15353,"src":"11009:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15343,"name":"string","nodeType":"ElementaryTypeName","src":"11009:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15346,"mutability":"mutable","name":"index","nameLocation":"11042:5:16","nodeType":"VariableDeclaration","scope":15353,"src":"11035:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15345,"name":"uint32","nodeType":"ElementaryTypeName","src":"11035:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15348,"mutability":"mutable","name":"language","nameLocation":"11065:8:16","nodeType":"VariableDeclaration","scope":15353,"src":"11049:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15347,"name":"string","nodeType":"ElementaryTypeName","src":"11049:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11008:66:16"},"returnParameters":{"id":15352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15351,"mutability":"mutable","name":"privateKey","nameLocation":"11130:10:16","nodeType":"VariableDeclaration","scope":15353,"src":"11122:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15350,"name":"uint256","nodeType":"ElementaryTypeName","src":"11122:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11121:20:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15367,"nodeType":"FunctionDefinition","src":"11297:184:16","nodes":[],"documentation":{"id":15354,"nodeType":"StructuredDocumentation","src":"11148:144:16","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"11306:9:16","parameters":{"id":15363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15356,"mutability":"mutable","name":"mnemonic","nameLocation":"11332:8:16","nodeType":"VariableDeclaration","scope":15367,"src":"11316:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15355,"name":"string","nodeType":"ElementaryTypeName","src":"11316:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15358,"mutability":"mutable","name":"derivationPath","nameLocation":"11358:14:16","nodeType":"VariableDeclaration","scope":15367,"src":"11342:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15357,"name":"string","nodeType":"ElementaryTypeName","src":"11342:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15360,"mutability":"mutable","name":"index","nameLocation":"11381:5:16","nodeType":"VariableDeclaration","scope":15367,"src":"11374:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15359,"name":"uint32","nodeType":"ElementaryTypeName","src":"11374:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15362,"mutability":"mutable","name":"language","nameLocation":"11404:8:16","nodeType":"VariableDeclaration","scope":15367,"src":"11388:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15361,"name":"string","nodeType":"ElementaryTypeName","src":"11388:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11315:98:16"},"returnParameters":{"id":15366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15365,"mutability":"mutable","name":"privateKey","nameLocation":"11469:10:16","nodeType":"VariableDeclaration","scope":15367,"src":"11461:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15364,"name":"uint256","nodeType":"ElementaryTypeName","src":"11461:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11460:20:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15377,"nodeType":"FunctionDefinition","src":"11556:106:16","nodes":[],"documentation":{"id":15368,"nodeType":"StructuredDocumentation","src":"11487:64:16","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"11565:13:16","parameters":{"id":15371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15370,"mutability":"mutable","name":"privateKey","nameLocation":"11587:10:16","nodeType":"VariableDeclaration","scope":15377,"src":"11579:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15369,"name":"uint256","nodeType":"ElementaryTypeName","src":"11579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11578:20:16"},"returnParameters":{"id":15376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15373,"mutability":"mutable","name":"publicKeyX","nameLocation":"11630:10:16","nodeType":"VariableDeclaration","scope":15377,"src":"11622:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15372,"name":"uint256","nodeType":"ElementaryTypeName","src":"11622:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15375,"mutability":"mutable","name":"publicKeyY","nameLocation":"11650:10:16","nodeType":"VariableDeclaration","scope":15377,"src":"11642:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15374,"name":"uint256","nodeType":"ElementaryTypeName","src":"11642:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11621:40:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15385,"nodeType":"FunctionDefinition","src":"11746:76:16","nodes":[],"documentation":{"id":15378,"nodeType":"StructuredDocumentation","src":"11668:73:16","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"11755:11:16","parameters":{"id":15381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15380,"mutability":"mutable","name":"privateKey","nameLocation":"11775:10:16","nodeType":"VariableDeclaration","scope":15385,"src":"11767:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15379,"name":"uint256","nodeType":"ElementaryTypeName","src":"11767:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11766:20:16"},"returnParameters":{"id":15384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15383,"mutability":"mutable","name":"keyAddr","nameLocation":"11813:7:16","nodeType":"VariableDeclaration","scope":15385,"src":"11805:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15382,"name":"address","nodeType":"ElementaryTypeName","src":"11805:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11804:17:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15398,"nodeType":"FunctionDefinition","src":"12063:155:16","nodes":[],"documentation":{"id":15386,"nodeType":"StructuredDocumentation","src":"11828:230:16","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"12072:12:16","parameters":{"id":15393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15388,"mutability":"mutable","name":"mnemonic","nameLocation":"12101:8:16","nodeType":"VariableDeclaration","scope":15398,"src":"12085:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15387,"name":"string","nodeType":"ElementaryTypeName","src":"12085:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15390,"mutability":"mutable","name":"derivationPath","nameLocation":"12127:14:16","nodeType":"VariableDeclaration","scope":15398,"src":"12111:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15389,"name":"string","nodeType":"ElementaryTypeName","src":"12111:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15392,"mutability":"mutable","name":"count","nameLocation":"12150:5:16","nodeType":"VariableDeclaration","scope":15398,"src":"12143:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15391,"name":"uint32","nodeType":"ElementaryTypeName","src":"12143:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12084:72:16"},"returnParameters":{"id":15397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15396,"mutability":"mutable","name":"keyAddrs","nameLocation":"12208:8:16","nodeType":"VariableDeclaration","scope":15398,"src":"12191:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15394,"name":"address","nodeType":"ElementaryTypeName","src":"12191:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15395,"nodeType":"ArrayTypeName","src":"12191:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12190:27:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15413,"nodeType":"FunctionDefinition","src":"12485:203:16","nodes":[],"documentation":{"id":15399,"nodeType":"StructuredDocumentation","src":"12224:256:16","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"12494:12:16","parameters":{"id":15408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15401,"mutability":"mutable","name":"mnemonic","nameLocation":"12532:8:16","nodeType":"VariableDeclaration","scope":15413,"src":"12516:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15400,"name":"string","nodeType":"ElementaryTypeName","src":"12516:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15403,"mutability":"mutable","name":"derivationPath","nameLocation":"12566:14:16","nodeType":"VariableDeclaration","scope":15413,"src":"12550:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15402,"name":"string","nodeType":"ElementaryTypeName","src":"12550:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15405,"mutability":"mutable","name":"language","nameLocation":"12606:8:16","nodeType":"VariableDeclaration","scope":15413,"src":"12590:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15404,"name":"string","nodeType":"ElementaryTypeName","src":"12590:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15407,"mutability":"mutable","name":"count","nameLocation":"12631:5:16","nodeType":"VariableDeclaration","scope":15413,"src":"12624:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15406,"name":"uint32","nodeType":"ElementaryTypeName","src":"12624:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12506:136:16"},"returnParameters":{"id":15412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15411,"mutability":"mutable","name":"keyAddrs","nameLocation":"12678:8:16","nodeType":"VariableDeclaration","scope":15413,"src":"12661:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15409,"name":"address","nodeType":"ElementaryTypeName","src":"12661:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15410,"nodeType":"ArrayTypeName","src":"12661:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12660:27:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15426,"nodeType":"FunctionDefinition","src":"12967:102:16","nodes":[],"documentation":{"id":15414,"nodeType":"StructuredDocumentation","src":"12694:268:16","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12976:11:16","parameters":{"id":15420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15417,"mutability":"mutable","name":"wallet","nameLocation":"13004:6:16","nodeType":"VariableDeclaration","scope":15426,"src":"12988:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15416,"nodeType":"UserDefinedTypeName","pathNode":{"id":15415,"name":"Wallet","nameLocations":["12988:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15203,"src":"12988:6:16"},"referencedDeclaration":15203,"src":"12988:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15419,"mutability":"mutable","name":"digest","nameLocation":"13020:6:16","nodeType":"VariableDeclaration","scope":15426,"src":"13012:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13012:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12987:40:16"},"returnParameters":{"id":15425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15422,"mutability":"mutable","name":"r","nameLocation":"13054:1:16","nodeType":"VariableDeclaration","scope":15426,"src":"13046:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13046:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15424,"mutability":"mutable","name":"vs","nameLocation":"13065:2:16","nodeType":"VariableDeclaration","scope":15426,"src":"13057:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13057:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13045:23:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15438,"nodeType":"FunctionDefinition","src":"13380:103:16","nodes":[],"documentation":{"id":15427,"nodeType":"StructuredDocumentation","src":"13075:300:16","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"13389:11:16","parameters":{"id":15432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15429,"mutability":"mutable","name":"privateKey","nameLocation":"13409:10:16","nodeType":"VariableDeclaration","scope":15438,"src":"13401:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15428,"name":"uint256","nodeType":"ElementaryTypeName","src":"13401:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15431,"mutability":"mutable","name":"digest","nameLocation":"13429:6:16","nodeType":"VariableDeclaration","scope":15438,"src":"13421:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13421:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13400:36:16"},"returnParameters":{"id":15437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15434,"mutability":"mutable","name":"r","nameLocation":"13468:1:16","nodeType":"VariableDeclaration","scope":15438,"src":"13460:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13460:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15436,"mutability":"mutable","name":"vs","nameLocation":"13479:2:16","nodeType":"VariableDeclaration","scope":15438,"src":"13471:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13471:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13459:23:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15448,"nodeType":"FunctionDefinition","src":"14159:83:16","nodes":[],"documentation":{"id":15439,"nodeType":"StructuredDocumentation","src":"13489:665:16","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"14168:11:16","parameters":{"id":15442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15441,"mutability":"mutable","name":"digest","nameLocation":"14188:6:16","nodeType":"VariableDeclaration","scope":15448,"src":"14180:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14180:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14179:16:16"},"returnParameters":{"id":15447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15444,"mutability":"mutable","name":"r","nameLocation":"14227:1:16","nodeType":"VariableDeclaration","scope":15448,"src":"14219:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14219:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15446,"mutability":"mutable","name":"vs","nameLocation":"14238:2:16","nodeType":"VariableDeclaration","scope":15448,"src":"14230:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14230:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14218:23:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15460,"nodeType":"FunctionDefinition","src":"14656:99:16","nodes":[],"documentation":{"id":15449,"nodeType":"StructuredDocumentation","src":"14248:403:16","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"14665:11:16","parameters":{"id":15454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15451,"mutability":"mutable","name":"signer","nameLocation":"14685:6:16","nodeType":"VariableDeclaration","scope":15460,"src":"14677:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15450,"name":"address","nodeType":"ElementaryTypeName","src":"14677:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15453,"mutability":"mutable","name":"digest","nameLocation":"14701:6:16","nodeType":"VariableDeclaration","scope":15460,"src":"14693:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14693:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14676:32:16"},"returnParameters":{"id":15459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15456,"mutability":"mutable","name":"r","nameLocation":"14740:1:16","nodeType":"VariableDeclaration","scope":15460,"src":"14732:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14732:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15458,"mutability":"mutable","name":"vs","nameLocation":"14751:2:16","nodeType":"VariableDeclaration","scope":15460,"src":"14743:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14743:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14731:23:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15472,"nodeType":"FunctionDefinition","src":"14829:99:16","nodes":[],"documentation":{"id":15461,"nodeType":"StructuredDocumentation","src":"14761:63:16","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"14838:8:16","parameters":{"id":15466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15463,"mutability":"mutable","name":"privateKey","nameLocation":"14855:10:16","nodeType":"VariableDeclaration","scope":15472,"src":"14847:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15462,"name":"uint256","nodeType":"ElementaryTypeName","src":"14847:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15465,"mutability":"mutable","name":"digest","nameLocation":"14875:6:16","nodeType":"VariableDeclaration","scope":15472,"src":"14867:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14867:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14846:36:16"},"returnParameters":{"id":15471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15468,"mutability":"mutable","name":"r","nameLocation":"14914:1:16","nodeType":"VariableDeclaration","scope":15472,"src":"14906:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14906:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15470,"mutability":"mutable","name":"s","nameLocation":"14925:1:16","nodeType":"VariableDeclaration","scope":15472,"src":"14917:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14917:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14905:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15487,"nodeType":"FunctionDefinition","src":"14970:103:16","nodes":[],"documentation":{"id":15473,"nodeType":"StructuredDocumentation","src":"14934:31:16","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"14979:4:16","parameters":{"id":15479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15476,"mutability":"mutable","name":"wallet","nameLocation":"15000:6:16","nodeType":"VariableDeclaration","scope":15487,"src":"14984:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15475,"nodeType":"UserDefinedTypeName","pathNode":{"id":15474,"name":"Wallet","nameLocations":["14984:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15203,"src":"14984:6:16"},"referencedDeclaration":15203,"src":"14984:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15478,"mutability":"mutable","name":"digest","nameLocation":"15016:6:16","nodeType":"VariableDeclaration","scope":15487,"src":"15008:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15008:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14983:40:16"},"returnParameters":{"id":15486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15481,"mutability":"mutable","name":"v","nameLocation":"15048:1:16","nodeType":"VariableDeclaration","scope":15487,"src":"15042:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15480,"name":"uint8","nodeType":"ElementaryTypeName","src":"15042:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15483,"mutability":"mutable","name":"r","nameLocation":"15059:1:16","nodeType":"VariableDeclaration","scope":15487,"src":"15051:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15051:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15485,"mutability":"mutable","name":"s","nameLocation":"15070:1:16","nodeType":"VariableDeclaration","scope":15487,"src":"15062:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15062:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15041:31:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15501,"nodeType":"FunctionDefinition","src":"15147:104:16","nodes":[],"documentation":{"id":15488,"nodeType":"StructuredDocumentation","src":"15079:63:16","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"15156:4:16","parameters":{"id":15493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15490,"mutability":"mutable","name":"privateKey","nameLocation":"15169:10:16","nodeType":"VariableDeclaration","scope":15501,"src":"15161:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15489,"name":"uint256","nodeType":"ElementaryTypeName","src":"15161:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15492,"mutability":"mutable","name":"digest","nameLocation":"15189:6:16","nodeType":"VariableDeclaration","scope":15501,"src":"15181:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15181:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15160:36:16"},"returnParameters":{"id":15500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15495,"mutability":"mutable","name":"v","nameLocation":"15226:1:16","nodeType":"VariableDeclaration","scope":15501,"src":"15220:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15494,"name":"uint8","nodeType":"ElementaryTypeName","src":"15220:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15497,"mutability":"mutable","name":"r","nameLocation":"15237:1:16","nodeType":"VariableDeclaration","scope":15501,"src":"15229:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15229:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15499,"mutability":"mutable","name":"s","nameLocation":"15248:1:16","nodeType":"VariableDeclaration","scope":15501,"src":"15240:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15240:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15219:31:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15513,"nodeType":"FunctionDefinition","src":"15690:84:16","nodes":[],"documentation":{"id":15502,"nodeType":"StructuredDocumentation","src":"15257:428:16","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"15699:4:16","parameters":{"id":15505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15504,"mutability":"mutable","name":"digest","nameLocation":"15712:6:16","nodeType":"VariableDeclaration","scope":15513,"src":"15704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15704:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15703:16:16"},"returnParameters":{"id":15512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15507,"mutability":"mutable","name":"v","nameLocation":"15749:1:16","nodeType":"VariableDeclaration","scope":15513,"src":"15743:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15506,"name":"uint8","nodeType":"ElementaryTypeName","src":"15743:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15509,"mutability":"mutable","name":"r","nameLocation":"15760:1:16","nodeType":"VariableDeclaration","scope":15513,"src":"15752:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15752:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15511,"mutability":"mutable","name":"s","nameLocation":"15771:1:16","nodeType":"VariableDeclaration","scope":15513,"src":"15763:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15763:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15742:31:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15527,"nodeType":"FunctionDefinition","src":"15951:100:16","nodes":[],"documentation":{"id":15514,"nodeType":"StructuredDocumentation","src":"15780:166:16","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"15960:4:16","parameters":{"id":15519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15516,"mutability":"mutable","name":"signer","nameLocation":"15973:6:16","nodeType":"VariableDeclaration","scope":15527,"src":"15965:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15515,"name":"address","nodeType":"ElementaryTypeName","src":"15965:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15518,"mutability":"mutable","name":"digest","nameLocation":"15989:6:16","nodeType":"VariableDeclaration","scope":15527,"src":"15981:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15981:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15964:32:16"},"returnParameters":{"id":15526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15521,"mutability":"mutable","name":"v","nameLocation":"16026:1:16","nodeType":"VariableDeclaration","scope":15527,"src":"16020:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15520,"name":"uint8","nodeType":"ElementaryTypeName","src":"16020:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15523,"mutability":"mutable","name":"r","nameLocation":"16037:1:16","nodeType":"VariableDeclaration","scope":15527,"src":"16029:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16029:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15525,"mutability":"mutable","name":"s","nameLocation":"16048:1:16","nodeType":"VariableDeclaration","scope":15527,"src":"16040:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16040:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16019:31:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15535,"nodeType":"FunctionDefinition","src":"16238:80:16","nodes":[],"documentation":{"id":15528,"nodeType":"StructuredDocumentation","src":"16095:138:16","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"16247:10:16","parameters":{"id":15531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15530,"mutability":"mutable","name":"name","nameLocation":"16274:4:16","nodeType":"VariableDeclaration","scope":15535,"src":"16258:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15529,"name":"string","nodeType":"ElementaryTypeName","src":"16258:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16257:22:16"},"returnParameters":{"id":15534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15533,"mutability":"mutable","name":"value","nameLocation":"16311:5:16","nodeType":"VariableDeclaration","scope":15535,"src":"16303:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15532,"name":"address","nodeType":"ElementaryTypeName","src":"16303:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16302:15:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15546,"nodeType":"FunctionDefinition","src":"16501:112:16","nodes":[],"documentation":{"id":15536,"nodeType":"StructuredDocumentation","src":"16324:172:16","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"16510:10:16","parameters":{"id":15541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15538,"mutability":"mutable","name":"name","nameLocation":"16537:4:16","nodeType":"VariableDeclaration","scope":15546,"src":"16521:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15537,"name":"string","nodeType":"ElementaryTypeName","src":"16521:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15540,"mutability":"mutable","name":"delim","nameLocation":"16559:5:16","nodeType":"VariableDeclaration","scope":15546,"src":"16543:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15539,"name":"string","nodeType":"ElementaryTypeName","src":"16543:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16520:45:16"},"returnParameters":{"id":15545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15544,"mutability":"mutable","name":"value","nameLocation":"16606:5:16","nodeType":"VariableDeclaration","scope":15546,"src":"16589:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15542,"name":"address","nodeType":"ElementaryTypeName","src":"16589:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15543,"nodeType":"ArrayTypeName","src":"16589:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"16588:24:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15554,"nodeType":"FunctionDefinition","src":"16759:74:16","nodes":[],"documentation":{"id":15547,"nodeType":"StructuredDocumentation","src":"16619:135:16","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"16768:7:16","parameters":{"id":15550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15549,"mutability":"mutable","name":"name","nameLocation":"16792:4:16","nodeType":"VariableDeclaration","scope":15554,"src":"16776:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15548,"name":"string","nodeType":"ElementaryTypeName","src":"16776:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16775:22:16"},"returnParameters":{"id":15553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15552,"mutability":"mutable","name":"value","nameLocation":"16826:5:16","nodeType":"VariableDeclaration","scope":15554,"src":"16821:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15551,"name":"bool","nodeType":"ElementaryTypeName","src":"16821:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16820:12:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15565,"nodeType":"FunctionDefinition","src":"17013:106:16","nodes":[],"documentation":{"id":15555,"nodeType":"StructuredDocumentation","src":"16839:169:16","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"17022:7:16","parameters":{"id":15560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15557,"mutability":"mutable","name":"name","nameLocation":"17046:4:16","nodeType":"VariableDeclaration","scope":15565,"src":"17030:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15556,"name":"string","nodeType":"ElementaryTypeName","src":"17030:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15559,"mutability":"mutable","name":"delim","nameLocation":"17068:5:16","nodeType":"VariableDeclaration","scope":15565,"src":"17052:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15558,"name":"string","nodeType":"ElementaryTypeName","src":"17052:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17029:45:16"},"returnParameters":{"id":15564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15563,"mutability":"mutable","name":"value","nameLocation":"17112:5:16","nodeType":"VariableDeclaration","scope":15565,"src":"17098:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15561,"name":"bool","nodeType":"ElementaryTypeName","src":"17098:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15562,"nodeType":"ArrayTypeName","src":"17098:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"17097:21:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15573,"nodeType":"FunctionDefinition","src":"17268:80:16","nodes":[],"documentation":{"id":15566,"nodeType":"StructuredDocumentation","src":"17125:138:16","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"17277:10:16","parameters":{"id":15569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15568,"mutability":"mutable","name":"name","nameLocation":"17304:4:16","nodeType":"VariableDeclaration","scope":15573,"src":"17288:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15567,"name":"string","nodeType":"ElementaryTypeName","src":"17288:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17287:22:16"},"returnParameters":{"id":15572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15571,"mutability":"mutable","name":"value","nameLocation":"17341:5:16","nodeType":"VariableDeclaration","scope":15573,"src":"17333:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17333:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17332:15:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15584,"nodeType":"FunctionDefinition","src":"17531:112:16","nodes":[],"documentation":{"id":15574,"nodeType":"StructuredDocumentation","src":"17354:172:16","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"17540:10:16","parameters":{"id":15579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15576,"mutability":"mutable","name":"name","nameLocation":"17567:4:16","nodeType":"VariableDeclaration","scope":15584,"src":"17551:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15575,"name":"string","nodeType":"ElementaryTypeName","src":"17551:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15578,"mutability":"mutable","name":"delim","nameLocation":"17589:5:16","nodeType":"VariableDeclaration","scope":15584,"src":"17573:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15577,"name":"string","nodeType":"ElementaryTypeName","src":"17573:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17550:45:16"},"returnParameters":{"id":15583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15582,"mutability":"mutable","name":"value","nameLocation":"17636:5:16","nodeType":"VariableDeclaration","scope":15584,"src":"17619:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17619:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15581,"nodeType":"ArrayTypeName","src":"17619:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17618:24:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15592,"nodeType":"FunctionDefinition","src":"17790:83:16","nodes":[],"documentation":{"id":15585,"nodeType":"StructuredDocumentation","src":"17649:136:16","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"17799:8:16","parameters":{"id":15588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15587,"mutability":"mutable","name":"name","nameLocation":"17824:4:16","nodeType":"VariableDeclaration","scope":15592,"src":"17808:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15586,"name":"string","nodeType":"ElementaryTypeName","src":"17808:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17807:22:16"},"returnParameters":{"id":15591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15590,"mutability":"mutable","name":"value","nameLocation":"17866:5:16","nodeType":"VariableDeclaration","scope":15592,"src":"17853:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15589,"name":"bytes","nodeType":"ElementaryTypeName","src":"17853:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17852:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15603,"nodeType":"FunctionDefinition","src":"18054:108:16","nodes":[],"documentation":{"id":15593,"nodeType":"StructuredDocumentation","src":"17879:170:16","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"18063:8:16","parameters":{"id":15598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15595,"mutability":"mutable","name":"name","nameLocation":"18088:4:16","nodeType":"VariableDeclaration","scope":15603,"src":"18072:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15594,"name":"string","nodeType":"ElementaryTypeName","src":"18072:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15597,"mutability":"mutable","name":"delim","nameLocation":"18110:5:16","nodeType":"VariableDeclaration","scope":15603,"src":"18094:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15596,"name":"string","nodeType":"ElementaryTypeName","src":"18094:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18071:45:16"},"returnParameters":{"id":15602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15601,"mutability":"mutable","name":"value","nameLocation":"18155:5:16","nodeType":"VariableDeclaration","scope":15603,"src":"18140:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15599,"name":"bytes","nodeType":"ElementaryTypeName","src":"18140:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15600,"nodeType":"ArrayTypeName","src":"18140:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"18139:22:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15611,"nodeType":"FunctionDefinition","src":"18264:77:16","nodes":[],"documentation":{"id":15604,"nodeType":"StructuredDocumentation","src":"18168:91:16","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"18273:9:16","parameters":{"id":15607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15606,"mutability":"mutable","name":"name","nameLocation":"18299:4:16","nodeType":"VariableDeclaration","scope":15611,"src":"18283:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15605,"name":"string","nodeType":"ElementaryTypeName","src":"18283:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18282:22:16"},"returnParameters":{"id":15610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15609,"mutability":"mutable","name":"result","nameLocation":"18333:6:16","nodeType":"VariableDeclaration","scope":15611,"src":"18328:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15608,"name":"bool","nodeType":"ElementaryTypeName","src":"18328:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18327:13:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15619,"nodeType":"FunctionDefinition","src":"18489:75:16","nodes":[],"documentation":{"id":15612,"nodeType":"StructuredDocumentation","src":"18347:137:16","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"18498:6:16","parameters":{"id":15615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15614,"mutability":"mutable","name":"name","nameLocation":"18521:4:16","nodeType":"VariableDeclaration","scope":15619,"src":"18505:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15613,"name":"string","nodeType":"ElementaryTypeName","src":"18505:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18504:22:16"},"returnParameters":{"id":15618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15617,"mutability":"mutable","name":"value","nameLocation":"18557:5:16","nodeType":"VariableDeclaration","scope":15619,"src":"18550:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15616,"name":"int256","nodeType":"ElementaryTypeName","src":"18550:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18549:14:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15630,"nodeType":"FunctionDefinition","src":"18746:107:16","nodes":[],"documentation":{"id":15620,"nodeType":"StructuredDocumentation","src":"18570:171:16","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"18755:6:16","parameters":{"id":15625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15622,"mutability":"mutable","name":"name","nameLocation":"18778:4:16","nodeType":"VariableDeclaration","scope":15630,"src":"18762:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15621,"name":"string","nodeType":"ElementaryTypeName","src":"18762:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15624,"mutability":"mutable","name":"delim","nameLocation":"18800:5:16","nodeType":"VariableDeclaration","scope":15630,"src":"18784:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15623,"name":"string","nodeType":"ElementaryTypeName","src":"18784:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18761:45:16"},"returnParameters":{"id":15629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15628,"mutability":"mutable","name":"value","nameLocation":"18846:5:16","nodeType":"VariableDeclaration","scope":15630,"src":"18830:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15626,"name":"int256","nodeType":"ElementaryTypeName","src":"18830:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15627,"nodeType":"ArrayTypeName","src":"18830:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"18829:23:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15640,"nodeType":"FunctionDefinition","src":"19044:91:16","nodes":[],"documentation":{"id":15631,"nodeType":"StructuredDocumentation","src":"18859:180:16","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19053:5:16","parameters":{"id":15636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15633,"mutability":"mutable","name":"name","nameLocation":"19075:4:16","nodeType":"VariableDeclaration","scope":15640,"src":"19059:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15632,"name":"string","nodeType":"ElementaryTypeName","src":"19059:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15635,"mutability":"mutable","name":"defaultValue","nameLocation":"19086:12:16","nodeType":"VariableDeclaration","scope":15640,"src":"19081:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15634,"name":"bool","nodeType":"ElementaryTypeName","src":"19081:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19058:41:16"},"returnParameters":{"id":15639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15638,"mutability":"mutable","name":"value","nameLocation":"19128:5:16","nodeType":"VariableDeclaration","scope":15640,"src":"19123:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15637,"name":"bool","nodeType":"ElementaryTypeName","src":"19123:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19122:12:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15650,"nodeType":"FunctionDefinition","src":"19329:97:16","nodes":[],"documentation":{"id":15641,"nodeType":"StructuredDocumentation","src":"19141:183:16","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19338:5:16","parameters":{"id":15646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15643,"mutability":"mutable","name":"name","nameLocation":"19360:4:16","nodeType":"VariableDeclaration","scope":15650,"src":"19344:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15642,"name":"string","nodeType":"ElementaryTypeName","src":"19344:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15645,"mutability":"mutable","name":"defaultValue","nameLocation":"19374:12:16","nodeType":"VariableDeclaration","scope":15650,"src":"19366:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15644,"name":"uint256","nodeType":"ElementaryTypeName","src":"19366:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19343:44:16"},"returnParameters":{"id":15649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15648,"mutability":"mutable","name":"value","nameLocation":"19419:5:16","nodeType":"VariableDeclaration","scope":15650,"src":"19411:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15647,"name":"uint256","nodeType":"ElementaryTypeName","src":"19411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19410:15:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15664,"nodeType":"FunctionDefinition","src":"19654:164:16","nodes":[],"documentation":{"id":15651,"nodeType":"StructuredDocumentation","src":"19432:217:16","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19663:5:16","parameters":{"id":15659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15653,"mutability":"mutable","name":"name","nameLocation":"19685:4:16","nodeType":"VariableDeclaration","scope":15664,"src":"19669:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15652,"name":"string","nodeType":"ElementaryTypeName","src":"19669:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15655,"mutability":"mutable","name":"delim","nameLocation":"19707:5:16","nodeType":"VariableDeclaration","scope":15664,"src":"19691:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15654,"name":"string","nodeType":"ElementaryTypeName","src":"19691:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15658,"mutability":"mutable","name":"defaultValue","nameLocation":"19733:12:16","nodeType":"VariableDeclaration","scope":15664,"src":"19714:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15656,"name":"address","nodeType":"ElementaryTypeName","src":"19714:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15657,"nodeType":"ArrayTypeName","src":"19714:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19668:78:16"},"returnParameters":{"id":15663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15662,"mutability":"mutable","name":"value","nameLocation":"19811:5:16","nodeType":"VariableDeclaration","scope":15664,"src":"19794:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15660,"name":"address","nodeType":"ElementaryTypeName","src":"19794:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15661,"nodeType":"ArrayTypeName","src":"19794:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19793:24:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15678,"nodeType":"FunctionDefinition","src":"20046:164:16","nodes":[],"documentation":{"id":15665,"nodeType":"StructuredDocumentation","src":"19824:217:16","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20055:5:16","parameters":{"id":15673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15667,"mutability":"mutable","name":"name","nameLocation":"20077:4:16","nodeType":"VariableDeclaration","scope":15678,"src":"20061:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15666,"name":"string","nodeType":"ElementaryTypeName","src":"20061:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15669,"mutability":"mutable","name":"delim","nameLocation":"20099:5:16","nodeType":"VariableDeclaration","scope":15678,"src":"20083:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15668,"name":"string","nodeType":"ElementaryTypeName","src":"20083:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15672,"mutability":"mutable","name":"defaultValue","nameLocation":"20125:12:16","nodeType":"VariableDeclaration","scope":15678,"src":"20106:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20106:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15671,"nodeType":"ArrayTypeName","src":"20106:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"20060:78:16"},"returnParameters":{"id":15677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15676,"mutability":"mutable","name":"value","nameLocation":"20203:5:16","nodeType":"VariableDeclaration","scope":15678,"src":"20186:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20186:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15675,"nodeType":"ArrayTypeName","src":"20186:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"20185:24:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15692,"nodeType":"FunctionDefinition","src":"20437:162:16","nodes":[],"documentation":{"id":15679,"nodeType":"StructuredDocumentation","src":"20216:216:16","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20446:5:16","parameters":{"id":15687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15681,"mutability":"mutable","name":"name","nameLocation":"20468:4:16","nodeType":"VariableDeclaration","scope":15692,"src":"20452:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15680,"name":"string","nodeType":"ElementaryTypeName","src":"20452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15683,"mutability":"mutable","name":"delim","nameLocation":"20490:5:16","nodeType":"VariableDeclaration","scope":15692,"src":"20474:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15682,"name":"string","nodeType":"ElementaryTypeName","src":"20474:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15686,"mutability":"mutable","name":"defaultValue","nameLocation":"20515:12:16","nodeType":"VariableDeclaration","scope":15692,"src":"20497:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15684,"name":"string","nodeType":"ElementaryTypeName","src":"20497:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15685,"nodeType":"ArrayTypeName","src":"20497:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"20451:77:16"},"returnParameters":{"id":15691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15690,"mutability":"mutable","name":"value","nameLocation":"20592:5:16","nodeType":"VariableDeclaration","scope":15692,"src":"20576:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15688,"name":"string","nodeType":"ElementaryTypeName","src":"20576:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15689,"nodeType":"ArrayTypeName","src":"20576:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"20575:23:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15706,"nodeType":"FunctionDefinition","src":"20825:160:16","nodes":[],"documentation":{"id":15693,"nodeType":"StructuredDocumentation","src":"20605:215:16","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20834:5:16","parameters":{"id":15701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15695,"mutability":"mutable","name":"name","nameLocation":"20856:4:16","nodeType":"VariableDeclaration","scope":15706,"src":"20840:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15694,"name":"string","nodeType":"ElementaryTypeName","src":"20840:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15697,"mutability":"mutable","name":"delim","nameLocation":"20878:5:16","nodeType":"VariableDeclaration","scope":15706,"src":"20862:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15696,"name":"string","nodeType":"ElementaryTypeName","src":"20862:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15700,"mutability":"mutable","name":"defaultValue","nameLocation":"20902:12:16","nodeType":"VariableDeclaration","scope":15706,"src":"20885:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15698,"name":"bytes","nodeType":"ElementaryTypeName","src":"20885:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15699,"nodeType":"ArrayTypeName","src":"20885:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"20839:76:16"},"returnParameters":{"id":15705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15704,"mutability":"mutable","name":"value","nameLocation":"20978:5:16","nodeType":"VariableDeclaration","scope":15706,"src":"20963:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15702,"name":"bytes","nodeType":"ElementaryTypeName","src":"20963:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15703,"nodeType":"ArrayTypeName","src":"20963:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"20962:22:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15716,"nodeType":"FunctionDefinition","src":"21178:95:16","nodes":[],"documentation":{"id":15707,"nodeType":"StructuredDocumentation","src":"20991:182:16","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21187:5:16","parameters":{"id":15712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15709,"mutability":"mutable","name":"name","nameLocation":"21209:4:16","nodeType":"VariableDeclaration","scope":15716,"src":"21193:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15708,"name":"string","nodeType":"ElementaryTypeName","src":"21193:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15711,"mutability":"mutable","name":"defaultValue","nameLocation":"21222:12:16","nodeType":"VariableDeclaration","scope":15716,"src":"21215:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15710,"name":"int256","nodeType":"ElementaryTypeName","src":"21215:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21192:43:16"},"returnParameters":{"id":15715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15714,"mutability":"mutable","name":"value","nameLocation":"21266:5:16","nodeType":"VariableDeclaration","scope":15716,"src":"21259:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15713,"name":"int256","nodeType":"ElementaryTypeName","src":"21259:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21258:14:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15726,"nodeType":"FunctionDefinition","src":"21467:97:16","nodes":[],"documentation":{"id":15717,"nodeType":"StructuredDocumentation","src":"21279:183:16","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21476:5:16","parameters":{"id":15722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15719,"mutability":"mutable","name":"name","nameLocation":"21498:4:16","nodeType":"VariableDeclaration","scope":15726,"src":"21482:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15718,"name":"string","nodeType":"ElementaryTypeName","src":"21482:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15721,"mutability":"mutable","name":"defaultValue","nameLocation":"21512:12:16","nodeType":"VariableDeclaration","scope":15726,"src":"21504:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15720,"name":"address","nodeType":"ElementaryTypeName","src":"21504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21481:44:16"},"returnParameters":{"id":15725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15724,"mutability":"mutable","name":"value","nameLocation":"21557:5:16","nodeType":"VariableDeclaration","scope":15726,"src":"21549:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15723,"name":"address","nodeType":"ElementaryTypeName","src":"21549:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21548:15:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15736,"nodeType":"FunctionDefinition","src":"21758:97:16","nodes":[],"documentation":{"id":15727,"nodeType":"StructuredDocumentation","src":"21570:183:16","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21767:5:16","parameters":{"id":15732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15729,"mutability":"mutable","name":"name","nameLocation":"21789:4:16","nodeType":"VariableDeclaration","scope":15736,"src":"21773:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15728,"name":"string","nodeType":"ElementaryTypeName","src":"21773:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15731,"mutability":"mutable","name":"defaultValue","nameLocation":"21803:12:16","nodeType":"VariableDeclaration","scope":15736,"src":"21795:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21795:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21772:44:16"},"returnParameters":{"id":15735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15734,"mutability":"mutable","name":"value","nameLocation":"21848:5:16","nodeType":"VariableDeclaration","scope":15736,"src":"21840:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21839:15:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15746,"nodeType":"FunctionDefinition","src":"22048:111:16","nodes":[],"documentation":{"id":15737,"nodeType":"StructuredDocumentation","src":"21861:182:16","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22057:5:16","parameters":{"id":15742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15739,"mutability":"mutable","name":"name","nameLocation":"22079:4:16","nodeType":"VariableDeclaration","scope":15746,"src":"22063:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15738,"name":"string","nodeType":"ElementaryTypeName","src":"22063:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15741,"mutability":"mutable","name":"defaultValue","nameLocation":"22101:12:16","nodeType":"VariableDeclaration","scope":15746,"src":"22085:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15740,"name":"string","nodeType":"ElementaryTypeName","src":"22085:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22062:52:16"},"returnParameters":{"id":15745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15744,"mutability":"mutable","name":"value","nameLocation":"22152:5:16","nodeType":"VariableDeclaration","scope":15746,"src":"22138:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15743,"name":"string","nodeType":"ElementaryTypeName","src":"22138:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22137:21:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15756,"nodeType":"FunctionDefinition","src":"22351:109:16","nodes":[],"documentation":{"id":15747,"nodeType":"StructuredDocumentation","src":"22165:181:16","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22360:5:16","parameters":{"id":15752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15749,"mutability":"mutable","name":"name","nameLocation":"22382:4:16","nodeType":"VariableDeclaration","scope":15756,"src":"22366:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15748,"name":"string","nodeType":"ElementaryTypeName","src":"22366:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15751,"mutability":"mutable","name":"defaultValue","nameLocation":"22403:12:16","nodeType":"VariableDeclaration","scope":15756,"src":"22388:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15750,"name":"bytes","nodeType":"ElementaryTypeName","src":"22388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22365:51:16"},"returnParameters":{"id":15755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15754,"mutability":"mutable","name":"value","nameLocation":"22453:5:16","nodeType":"VariableDeclaration","scope":15756,"src":"22440:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15753,"name":"bytes","nodeType":"ElementaryTypeName","src":"22440:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22439:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15770,"nodeType":"FunctionDefinition","src":"22685:158:16","nodes":[],"documentation":{"id":15757,"nodeType":"StructuredDocumentation","src":"22466:214:16","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22694:5:16","parameters":{"id":15765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15759,"mutability":"mutable","name":"name","nameLocation":"22716:4:16","nodeType":"VariableDeclaration","scope":15770,"src":"22700:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15758,"name":"string","nodeType":"ElementaryTypeName","src":"22700:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15761,"mutability":"mutable","name":"delim","nameLocation":"22738:5:16","nodeType":"VariableDeclaration","scope":15770,"src":"22722:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15760,"name":"string","nodeType":"ElementaryTypeName","src":"22722:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15764,"mutability":"mutable","name":"defaultValue","nameLocation":"22761:12:16","nodeType":"VariableDeclaration","scope":15770,"src":"22745:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15762,"name":"bool","nodeType":"ElementaryTypeName","src":"22745:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15763,"nodeType":"ArrayTypeName","src":"22745:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"22699:75:16"},"returnParameters":{"id":15769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15768,"mutability":"mutable","name":"value","nameLocation":"22836:5:16","nodeType":"VariableDeclaration","scope":15770,"src":"22822:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15766,"name":"bool","nodeType":"ElementaryTypeName","src":"22822:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15767,"nodeType":"ArrayTypeName","src":"22822:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"22821:21:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15784,"nodeType":"FunctionDefinition","src":"23071:164:16","nodes":[],"documentation":{"id":15771,"nodeType":"StructuredDocumentation","src":"22849:217:16","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23080:5:16","parameters":{"id":15779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15773,"mutability":"mutable","name":"name","nameLocation":"23102:4:16","nodeType":"VariableDeclaration","scope":15784,"src":"23086:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15772,"name":"string","nodeType":"ElementaryTypeName","src":"23086:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15775,"mutability":"mutable","name":"delim","nameLocation":"23124:5:16","nodeType":"VariableDeclaration","scope":15784,"src":"23108:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15774,"name":"string","nodeType":"ElementaryTypeName","src":"23108:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15778,"mutability":"mutable","name":"defaultValue","nameLocation":"23150:12:16","nodeType":"VariableDeclaration","scope":15784,"src":"23131:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15776,"name":"uint256","nodeType":"ElementaryTypeName","src":"23131:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15777,"nodeType":"ArrayTypeName","src":"23131:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"23085:78:16"},"returnParameters":{"id":15783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15782,"mutability":"mutable","name":"value","nameLocation":"23228:5:16","nodeType":"VariableDeclaration","scope":15784,"src":"23211:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15780,"name":"uint256","nodeType":"ElementaryTypeName","src":"23211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15781,"nodeType":"ArrayTypeName","src":"23211:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"23210:24:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15798,"nodeType":"FunctionDefinition","src":"23462:162:16","nodes":[],"documentation":{"id":15785,"nodeType":"StructuredDocumentation","src":"23241:216:16","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23471:5:16","parameters":{"id":15793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15787,"mutability":"mutable","name":"name","nameLocation":"23493:4:16","nodeType":"VariableDeclaration","scope":15798,"src":"23477:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15786,"name":"string","nodeType":"ElementaryTypeName","src":"23477:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15789,"mutability":"mutable","name":"delim","nameLocation":"23515:5:16","nodeType":"VariableDeclaration","scope":15798,"src":"23499:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15788,"name":"string","nodeType":"ElementaryTypeName","src":"23499:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15792,"mutability":"mutable","name":"defaultValue","nameLocation":"23540:12:16","nodeType":"VariableDeclaration","scope":15798,"src":"23522:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15790,"name":"int256","nodeType":"ElementaryTypeName","src":"23522:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15791,"nodeType":"ArrayTypeName","src":"23522:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"23476:77:16"},"returnParameters":{"id":15797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15796,"mutability":"mutable","name":"value","nameLocation":"23617:5:16","nodeType":"VariableDeclaration","scope":15798,"src":"23601:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15794,"name":"int256","nodeType":"ElementaryTypeName","src":"23601:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15795,"nodeType":"ArrayTypeName","src":"23601:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"23600:23:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15806,"nodeType":"FunctionDefinition","src":"23772:85:16","nodes":[],"documentation":{"id":15799,"nodeType":"StructuredDocumentation","src":"23630:137:16","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"23781:9:16","parameters":{"id":15802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15801,"mutability":"mutable","name":"name","nameLocation":"23807:4:16","nodeType":"VariableDeclaration","scope":15806,"src":"23791:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15800,"name":"string","nodeType":"ElementaryTypeName","src":"23791:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23790:22:16"},"returnParameters":{"id":15805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15804,"mutability":"mutable","name":"value","nameLocation":"23850:5:16","nodeType":"VariableDeclaration","scope":15806,"src":"23836:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15803,"name":"string","nodeType":"ElementaryTypeName","src":"23836:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23835:21:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15817,"nodeType":"FunctionDefinition","src":"24039:110:16","nodes":[],"documentation":{"id":15807,"nodeType":"StructuredDocumentation","src":"23863:171:16","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"24048:9:16","parameters":{"id":15812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15809,"mutability":"mutable","name":"name","nameLocation":"24074:4:16","nodeType":"VariableDeclaration","scope":15817,"src":"24058:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15808,"name":"string","nodeType":"ElementaryTypeName","src":"24058:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15811,"mutability":"mutable","name":"delim","nameLocation":"24096:5:16","nodeType":"VariableDeclaration","scope":15817,"src":"24080:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15810,"name":"string","nodeType":"ElementaryTypeName","src":"24080:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24057:45:16"},"returnParameters":{"id":15816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15815,"mutability":"mutable","name":"value","nameLocation":"24142:5:16","nodeType":"VariableDeclaration","scope":15817,"src":"24126:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15813,"name":"string","nodeType":"ElementaryTypeName","src":"24126:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15814,"nodeType":"ArrayTypeName","src":"24126:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24125:23:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15825,"nodeType":"FunctionDefinition","src":"24298:77:16","nodes":[],"documentation":{"id":15818,"nodeType":"StructuredDocumentation","src":"24155:138:16","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"24307:7:16","parameters":{"id":15821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15820,"mutability":"mutable","name":"name","nameLocation":"24331:4:16","nodeType":"VariableDeclaration","scope":15825,"src":"24315:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15819,"name":"string","nodeType":"ElementaryTypeName","src":"24315:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24314:22:16"},"returnParameters":{"id":15824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15823,"mutability":"mutable","name":"value","nameLocation":"24368:5:16","nodeType":"VariableDeclaration","scope":15825,"src":"24360:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15822,"name":"uint256","nodeType":"ElementaryTypeName","src":"24360:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24359:15:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15836,"nodeType":"FunctionDefinition","src":"24558:109:16","nodes":[],"documentation":{"id":15826,"nodeType":"StructuredDocumentation","src":"24381:172:16","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"24567:7:16","parameters":{"id":15831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15828,"mutability":"mutable","name":"name","nameLocation":"24591:4:16","nodeType":"VariableDeclaration","scope":15836,"src":"24575:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15827,"name":"string","nodeType":"ElementaryTypeName","src":"24575:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15830,"mutability":"mutable","name":"delim","nameLocation":"24613:5:16","nodeType":"VariableDeclaration","scope":15836,"src":"24597:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15829,"name":"string","nodeType":"ElementaryTypeName","src":"24597:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24574:45:16"},"returnParameters":{"id":15835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15834,"mutability":"mutable","name":"value","nameLocation":"24660:5:16","nodeType":"VariableDeclaration","scope":15836,"src":"24643:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15832,"name":"uint256","nodeType":"ElementaryTypeName","src":"24643:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15833,"nodeType":"ArrayTypeName","src":"24643:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24642:24:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15845,"nodeType":"FunctionDefinition","src":"24744:77:16","nodes":[],"documentation":{"id":15837,"nodeType":"StructuredDocumentation","src":"24673:66:16","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"24753:9:16","parameters":{"id":15841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15840,"mutability":"mutable","name":"context","nameLocation":"24776:7:16","nodeType":"VariableDeclaration","scope":15845,"src":"24763:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$15129","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":15839,"nodeType":"UserDefinedTypeName","pathNode":{"id":15838,"name":"ForgeContext","nameLocations":["24763:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":15129,"src":"24763:12:16"},"referencedDeclaration":15129,"src":"24763:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$15129","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"24762:22:16"},"returnParameters":{"id":15844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15843,"mutability":"mutable","name":"result","nameLocation":"24813:6:16","nodeType":"VariableDeclaration","scope":15845,"src":"24808:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15842,"name":"bool","nodeType":"ElementaryTypeName","src":"24808:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24807:13:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15853,"nodeType":"FunctionDefinition","src":"24863:70:16","nodes":[],"documentation":{"id":15846,"nodeType":"StructuredDocumentation","src":"24827:31:16","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"24872:6:16","parameters":{"id":15851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15848,"mutability":"mutable","name":"name","nameLocation":"24895:4:16","nodeType":"VariableDeclaration","scope":15853,"src":"24879:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15847,"name":"string","nodeType":"ElementaryTypeName","src":"24879:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15850,"mutability":"mutable","name":"value","nameLocation":"24917:5:16","nodeType":"VariableDeclaration","scope":15853,"src":"24901:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15849,"name":"string","nodeType":"ElementaryTypeName","src":"24901:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24878:45:16"},"returnParameters":{"id":15852,"nodeType":"ParameterList","parameters":[],"src":"24932:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15865,"nodeType":"FunctionDefinition","src":"25065:109:16","nodes":[],"documentation":{"id":15854,"nodeType":"StructuredDocumentation","src":"24969:91:16","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"25074:8:16","parameters":{"id":15857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15856,"mutability":"mutable","name":"target","nameLocation":"25091:6:16","nodeType":"VariableDeclaration","scope":15865,"src":"25083:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15855,"name":"address","nodeType":"ElementaryTypeName","src":"25083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25082:16:16"},"returnParameters":{"id":15864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15860,"mutability":"mutable","name":"readSlots","nameLocation":"25134:9:16","nodeType":"VariableDeclaration","scope":15865,"src":"25117:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25117:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15859,"nodeType":"ArrayTypeName","src":"25117:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15863,"mutability":"mutable","name":"writeSlots","nameLocation":"25162:10:16","nodeType":"VariableDeclaration","scope":15865,"src":"25145:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25145:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15862,"nodeType":"ArrayTypeName","src":"25145:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"25116:57:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15873,"nodeType":"FunctionDefinition","src":"25230:74:16","nodes":[],"documentation":{"id":15866,"nodeType":"StructuredDocumentation","src":"25180:45:16","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"25239:4:16","parameters":{"id":15869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15868,"mutability":"mutable","name":"privateKey","nameLocation":"25252:10:16","nodeType":"VariableDeclaration","scope":15873,"src":"25244:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15867,"name":"uint256","nodeType":"ElementaryTypeName","src":"25244:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25243:20:16"},"returnParameters":{"id":15872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15871,"mutability":"mutable","name":"keyAddr","nameLocation":"25295:7:16","nodeType":"VariableDeclaration","scope":15873,"src":"25287:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15870,"name":"address","nodeType":"ElementaryTypeName","src":"25287:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25286:17:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15890,"nodeType":"FunctionDefinition","src":"25367:160:16","nodes":[],"documentation":{"id":15874,"nodeType":"StructuredDocumentation","src":"25310:52:16","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"25376:11:16","parameters":{"id":15884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15876,"mutability":"mutable","name":"fromBlock","nameLocation":"25396:9:16","nodeType":"VariableDeclaration","scope":15890,"src":"25388:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15875,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15878,"mutability":"mutable","name":"toBlock","nameLocation":"25415:7:16","nodeType":"VariableDeclaration","scope":15890,"src":"25407:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15877,"name":"uint256","nodeType":"ElementaryTypeName","src":"25407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15880,"mutability":"mutable","name":"target","nameLocation":"25432:6:16","nodeType":"VariableDeclaration","scope":15890,"src":"25424:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15879,"name":"address","nodeType":"ElementaryTypeName","src":"25424:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15883,"mutability":"mutable","name":"topics","nameLocation":"25459:6:16","nodeType":"VariableDeclaration","scope":15890,"src":"25440:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25440:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15882,"nodeType":"ArrayTypeName","src":"25440:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"25387:79:16"},"returnParameters":{"id":15889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15888,"mutability":"mutable","name":"logs","nameLocation":"25521:4:16","nodeType":"VariableDeclaration","scope":15890,"src":"25501:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$15165_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":15886,"nodeType":"UserDefinedTypeName","pathNode":{"id":15885,"name":"EthGetLogs","nameLocations":["25501:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":15165,"src":"25501:10:16"},"referencedDeclaration":15165,"src":"25501:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$15165_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":15887,"nodeType":"ArrayTypeName","src":"25501:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$15165_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"25500:26:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15896,"nodeType":"FunctionDefinition","src":"25864:70:16","nodes":[],"documentation":{"id":15891,"nodeType":"StructuredDocumentation","src":"25533:326:16","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"25873:14:16","parameters":{"id":15892,"nodeType":"ParameterList","parameters":[],"src":"25887:2:16"},"returnParameters":{"id":15895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15894,"mutability":"mutable","name":"blobBaseFee","nameLocation":"25921:11:16","nodeType":"VariableDeclaration","scope":15896,"src":"25913:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15893,"name":"uint256","nodeType":"ElementaryTypeName","src":"25913:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25912:21:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15902,"nodeType":"FunctionDefinition","src":"26249:65:16","nodes":[],"documentation":{"id":15897,"nodeType":"StructuredDocumentation","src":"25940:304:16","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"26258:14:16","parameters":{"id":15898,"nodeType":"ParameterList","parameters":[],"src":"26272:2:16"},"returnParameters":{"id":15901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15900,"mutability":"mutable","name":"height","nameLocation":"26306:6:16","nodeType":"VariableDeclaration","scope":15902,"src":"26298:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15899,"name":"uint256","nodeType":"ElementaryTypeName","src":"26298:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26297:16:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15908,"nodeType":"FunctionDefinition","src":"26638:71:16","nodes":[],"documentation":{"id":15903,"nodeType":"StructuredDocumentation","src":"26320:313:16","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"26647:17:16","parameters":{"id":15904,"nodeType":"ParameterList","parameters":[],"src":"26664:2:16"},"returnParameters":{"id":15907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15906,"mutability":"mutable","name":"timestamp","nameLocation":"26698:9:16","nodeType":"VariableDeclaration","scope":15908,"src":"26690:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15905,"name":"uint256","nodeType":"ElementaryTypeName","src":"26690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26689:19:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15922,"nodeType":"FunctionDefinition","src":"26802:146:16","nodes":[],"documentation":{"id":15909,"nodeType":"StructuredDocumentation","src":"26715:82:16","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"26811:24:16","parameters":{"id":15914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15911,"mutability":"mutable","name":"target","nameLocation":"26844:6:16","nodeType":"VariableDeclaration","scope":15922,"src":"26836:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15910,"name":"address","nodeType":"ElementaryTypeName","src":"26836:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15913,"mutability":"mutable","name":"elementSlot","nameLocation":"26860:11:16","nodeType":"VariableDeclaration","scope":15922,"src":"26852:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26852:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26835:37:16"},"returnParameters":{"id":15921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15916,"mutability":"mutable","name":"found","nameLocation":"26912:5:16","nodeType":"VariableDeclaration","scope":15922,"src":"26907:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15915,"name":"bool","nodeType":"ElementaryTypeName","src":"26907:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15918,"mutability":"mutable","name":"key","nameLocation":"26927:3:16","nodeType":"VariableDeclaration","scope":15922,"src":"26919:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26919:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15920,"mutability":"mutable","name":"parent","nameLocation":"26940:6:16","nodeType":"VariableDeclaration","scope":15922,"src":"26932:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26932:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26906:41:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15932,"nodeType":"FunctionDefinition","src":"27045:97:16","nodes":[],"documentation":{"id":15923,"nodeType":"StructuredDocumentation","src":"26954:86:16","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"27054:16:16","parameters":{"id":15928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15925,"mutability":"mutable","name":"target","nameLocation":"27079:6:16","nodeType":"VariableDeclaration","scope":15932,"src":"27071:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15924,"name":"address","nodeType":"ElementaryTypeName","src":"27071:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15927,"mutability":"mutable","name":"mappingSlot","nameLocation":"27095:11:16","nodeType":"VariableDeclaration","scope":15932,"src":"27087:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27087:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27070:37:16"},"returnParameters":{"id":15931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15930,"mutability":"mutable","name":"length","nameLocation":"27134:6:16","nodeType":"VariableDeclaration","scope":15932,"src":"27126:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15929,"name":"uint256","nodeType":"ElementaryTypeName","src":"27126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27125:16:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15944,"nodeType":"FunctionDefinition","src":"27346:109:16","nodes":[],"documentation":{"id":15933,"nodeType":"StructuredDocumentation","src":"27148:193:16","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"27355:16:16","parameters":{"id":15940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15935,"mutability":"mutable","name":"target","nameLocation":"27380:6:16","nodeType":"VariableDeclaration","scope":15944,"src":"27372:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15934,"name":"address","nodeType":"ElementaryTypeName","src":"27372:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15937,"mutability":"mutable","name":"mappingSlot","nameLocation":"27396:11:16","nodeType":"VariableDeclaration","scope":15944,"src":"27388:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27388:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15939,"mutability":"mutable","name":"idx","nameLocation":"27417:3:16","nodeType":"VariableDeclaration","scope":15944,"src":"27409:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15938,"name":"uint256","nodeType":"ElementaryTypeName","src":"27409:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27371:50:16"},"returnParameters":{"id":15943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15942,"mutability":"mutable","name":"value","nameLocation":"27448:5:16","nodeType":"VariableDeclaration","scope":15944,"src":"27440:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27440:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27439:15:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15952,"nodeType":"FunctionDefinition","src":"27499:72:16","nodes":[],"documentation":{"id":15945,"nodeType":"StructuredDocumentation","src":"27461:33:16","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"27508:8:16","parameters":{"id":15948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15947,"mutability":"mutable","name":"account","nameLocation":"27525:7:16","nodeType":"VariableDeclaration","scope":15952,"src":"27517:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15946,"name":"address","nodeType":"ElementaryTypeName","src":"27517:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27516:17:16"},"returnParameters":{"id":15951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15950,"mutability":"mutable","name":"nonce","nameLocation":"27564:5:16","nodeType":"VariableDeclaration","scope":15952,"src":"27557:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15949,"name":"uint64","nodeType":"ElementaryTypeName","src":"27557:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27556:14:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15961,"nodeType":"FunctionDefinition","src":"27614:74:16","nodes":[],"documentation":{"id":15953,"nodeType":"StructuredDocumentation","src":"27577:32:16","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"27623:8:16","parameters":{"id":15957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15956,"mutability":"mutable","name":"wallet","nameLocation":"27648:6:16","nodeType":"VariableDeclaration","scope":15961,"src":"27632:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15955,"nodeType":"UserDefinedTypeName","pathNode":{"id":15954,"name":"Wallet","nameLocations":["27632:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":15203,"src":"27632:6:16"},"referencedDeclaration":15203,"src":"27632:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15203_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"27631:24:16"},"returnParameters":{"id":15960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15959,"mutability":"mutable","name":"nonce","nameLocation":"27681:5:16","nodeType":"VariableDeclaration","scope":15961,"src":"27674:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15958,"name":"uint64","nodeType":"ElementaryTypeName","src":"27674:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27673:14:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15969,"nodeType":"FunctionDefinition","src":"27730:64:16","nodes":[],"documentation":{"id":15962,"nodeType":"StructuredDocumentation","src":"27694:31:16","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"27739:15:16","parameters":{"id":15963,"nodeType":"ParameterList","parameters":[],"src":"27754:2:16"},"returnParameters":{"id":15968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15967,"mutability":"mutable","name":"logs","nameLocation":"27788:4:16","nodeType":"VariableDeclaration","scope":15969,"src":"27775:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$15138_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":15965,"nodeType":"UserDefinedTypeName","pathNode":{"id":15964,"name":"Log","nameLocations":["27775:3:16"],"nodeType":"IdentifierPath","referencedDeclaration":15138,"src":"27775:3:16"},"referencedDeclaration":15138,"src":"27775:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$15138_storage_ptr","typeString":"struct VmSafe.Log"}},"id":15966,"nodeType":"ArrayTypeName","src":"27775:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$15138_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"27774:19:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15976,"nodeType":"FunctionDefinition","src":"27872:62:16","nodes":[],"documentation":{"id":15970,"nodeType":"StructuredDocumentation","src":"27800:67:16","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"27881:11:16","parameters":{"id":15971,"nodeType":"ParameterList","parameters":[],"src":"27892:2:16"},"returnParameters":{"id":15975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15974,"mutability":"mutable","name":"gas","nameLocation":"27929:3:16","nodeType":"VariableDeclaration","scope":15976,"src":"27918:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$15275_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":15973,"nodeType":"UserDefinedTypeName","pathNode":{"id":15972,"name":"Gas","nameLocations":["27918:3:16"],"nodeType":"IdentifierPath","referencedDeclaration":15275,"src":"27918:3:16"},"referencedDeclaration":15275,"src":"27918:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$15275_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"27917:16:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15986,"nodeType":"FunctionDefinition","src":"27986:81:16","nodes":[],"documentation":{"id":15977,"nodeType":"StructuredDocumentation","src":"27940:41:16","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"27995:4:16","parameters":{"id":15982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15979,"mutability":"mutable","name":"target","nameLocation":"28008:6:16","nodeType":"VariableDeclaration","scope":15986,"src":"28000:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15978,"name":"address","nodeType":"ElementaryTypeName","src":"28000:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15981,"mutability":"mutable","name":"slot","nameLocation":"28024:4:16","nodeType":"VariableDeclaration","scope":15986,"src":"28016:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28016:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27999:30:16"},"returnParameters":{"id":15985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15984,"mutability":"mutable","name":"data","nameLocation":"28061:4:16","nodeType":"VariableDeclaration","scope":15986,"src":"28053:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28053:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"28052:14:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15990,"nodeType":"FunctionDefinition","src":"28158:37:16","nodes":[],"documentation":{"id":15987,"nodeType":"StructuredDocumentation","src":"28073:80:16","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"28167:16:16","parameters":{"id":15988,"nodeType":"ParameterList","parameters":[],"src":"28183:2:16"},"returnParameters":{"id":15989,"nodeType":"ParameterList","parameters":[],"src":"28194:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15994,"nodeType":"FunctionDefinition","src":"28247:27:16","nodes":[],"documentation":{"id":15991,"nodeType":"StructuredDocumentation","src":"28201:41:16","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"28256:6:16","parameters":{"id":15992,"nodeType":"ParameterList","parameters":[],"src":"28262:2:16"},"returnParameters":{"id":15993,"nodeType":"ParameterList","parameters":[],"src":"28273:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15998,"nodeType":"FunctionDefinition","src":"28321:31:16","nodes":[],"documentation":{"id":15995,"nodeType":"StructuredDocumentation","src":"28280:36:16","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"28330:10:16","parameters":{"id":15996,"nodeType":"ParameterList","parameters":[],"src":"28340:2:16"},"returnParameters":{"id":15997,"nodeType":"ParameterList","parameters":[],"src":"28351:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16002,"nodeType":"FunctionDefinition","src":"28423:37:16","nodes":[],"documentation":{"id":15999,"nodeType":"StructuredDocumentation","src":"28358:60:16","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"28432:16:16","parameters":{"id":16000,"nodeType":"ParameterList","parameters":[],"src":"28448:2:16"},"returnParameters":{"id":16001,"nodeType":"ParameterList","parameters":[],"src":"28459:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16006,"nodeType":"FunctionDefinition","src":"28550:38:16","nodes":[],"documentation":{"id":16003,"nodeType":"StructuredDocumentation","src":"28466:79:16","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"28559:17:16","parameters":{"id":16004,"nodeType":"ParameterList","parameters":[],"src":"28576:2:16"},"returnParameters":{"id":16005,"nodeType":"ParameterList","parameters":[],"src":"28587:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16016,"nodeType":"FunctionDefinition","src":"28665:98:16","nodes":[],"documentation":{"id":16007,"nodeType":"StructuredDocumentation","src":"28594:66:16","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"28674:3:16","parameters":{"id":16012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16009,"mutability":"mutable","name":"method","nameLocation":"28694:6:16","nodeType":"VariableDeclaration","scope":16016,"src":"28678:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16008,"name":"string","nodeType":"ElementaryTypeName","src":"28678:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16011,"mutability":"mutable","name":"params","nameLocation":"28718:6:16","nodeType":"VariableDeclaration","scope":16016,"src":"28702:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16010,"name":"string","nodeType":"ElementaryTypeName","src":"28702:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28677:48:16"},"returnParameters":{"id":16015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16014,"mutability":"mutable","name":"data","nameLocation":"28757:4:16","nodeType":"VariableDeclaration","scope":16016,"src":"28744:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16013,"name":"bytes","nodeType":"ElementaryTypeName","src":"28744:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28743:19:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16028,"nodeType":"FunctionDefinition","src":"28838:142:16","nodes":[],"documentation":{"id":16017,"nodeType":"StructuredDocumentation","src":"28769:64:16","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"28847:3:16","parameters":{"id":16024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16019,"mutability":"mutable","name":"urlOrAlias","nameLocation":"28867:10:16","nodeType":"VariableDeclaration","scope":16028,"src":"28851:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16018,"name":"string","nodeType":"ElementaryTypeName","src":"28851:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16021,"mutability":"mutable","name":"method","nameLocation":"28895:6:16","nodeType":"VariableDeclaration","scope":16028,"src":"28879:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16020,"name":"string","nodeType":"ElementaryTypeName","src":"28879:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16023,"mutability":"mutable","name":"params","nameLocation":"28919:6:16","nodeType":"VariableDeclaration","scope":16028,"src":"28903:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16022,"name":"string","nodeType":"ElementaryTypeName","src":"28903:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28850:76:16"},"returnParameters":{"id":16027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16026,"mutability":"mutable","name":"data","nameLocation":"28974:4:16","nodeType":"VariableDeclaration","scope":16028,"src":"28961:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16025,"name":"bytes","nodeType":"ElementaryTypeName","src":"28961:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28960:19:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16032,"nodeType":"FunctionDefinition","src":"29034:45:16","nodes":[],"documentation":{"id":16029,"nodeType":"StructuredDocumentation","src":"28986:43:16","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"29043:24:16","parameters":{"id":16030,"nodeType":"ParameterList","parameters":[],"src":"29067:2:16"},"returnParameters":{"id":16031,"nodeType":"ParameterList","parameters":[],"src":"29078:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16036,"nodeType":"FunctionDefinition","src":"29147:42:16","nodes":[],"documentation":{"id":16033,"nodeType":"StructuredDocumentation","src":"29085:57:16","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"29156:21:16","parameters":{"id":16034,"nodeType":"ParameterList","parameters":[],"src":"29177:2:16"},"returnParameters":{"id":16035,"nodeType":"ParameterList","parameters":[],"src":"29188:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16040,"nodeType":"FunctionDefinition","src":"29333:44:16","nodes":[],"documentation":{"id":16037,"nodeType":"StructuredDocumentation","src":"29195:133:16","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"29342:23:16","parameters":{"id":16038,"nodeType":"ParameterList","parameters":[],"src":"29365:2:16"},"returnParameters":{"id":16039,"nodeType":"ParameterList","parameters":[],"src":"29376:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16048,"nodeType":"FunctionDefinition","src":"29456:87:16","nodes":[],"documentation":{"id":16041,"nodeType":"StructuredDocumentation","src":"29383:68:16","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"29465:32:16","parameters":{"id":16042,"nodeType":"ParameterList","parameters":[],"src":"29497:2:16"},"returnParameters":{"id":16047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16046,"mutability":"mutable","name":"step","nameLocation":"29537:4:16","nodeType":"VariableDeclaration","scope":16048,"src":"29518:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$15290_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":16044,"nodeType":"UserDefinedTypeName","pathNode":{"id":16043,"name":"DebugStep","nameLocations":["29518:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":15290,"src":"29518:9:16"},"referencedDeclaration":15290,"src":"29518:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$15290_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":16045,"nodeType":"ArrayTypeName","src":"29518:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$15290_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"29517:25:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16056,"nodeType":"FunctionDefinition","src":"29651:92:16","nodes":[],"documentation":{"id":16049,"nodeType":"StructuredDocumentation","src":"29549:97:16","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"29660:22:16","parameters":{"id":16050,"nodeType":"ParameterList","parameters":[],"src":"29682:2:16"},"returnParameters":{"id":16055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16054,"mutability":"mutable","name":"accountAccesses","nameLocation":"29726:15:16","nodeType":"VariableDeclaration","scope":16056,"src":"29703:38:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$15249_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":16052,"nodeType":"UserDefinedTypeName","pathNode":{"id":16051,"name":"AccountAccess","nameLocations":["29703:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":15249,"src":"29703:13:16"},"referencedDeclaration":15249,"src":"29703:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$15249_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":16053,"nodeType":"ArrayTypeName","src":"29703:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$15249_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"29702:40:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16060,"nodeType":"FunctionDefinition","src":"29839:41:16","nodes":[],"documentation":{"id":16057,"nodeType":"StructuredDocumentation","src":"29749:85:16","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"29848:20:16","parameters":{"id":16058,"nodeType":"ParameterList","parameters":[],"src":"29868:2:16"},"returnParameters":{"id":16059,"nodeType":"ParameterList","parameters":[],"src":"29879:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16066,"nodeType":"FunctionDefinition","src":"30079:50:16","nodes":[],"documentation":{"id":16061,"nodeType":"StructuredDocumentation","src":"29923:151:16","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"30088:9:16","parameters":{"id":16064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16063,"mutability":"mutable","name":"path","nameLocation":"30114:4:16","nodeType":"VariableDeclaration","scope":16066,"src":"30098:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16062,"name":"string","nodeType":"ElementaryTypeName","src":"30098:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30097:22:16"},"returnParameters":{"id":16065,"nodeType":"ParameterList","parameters":[],"src":"30128:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16076,"nodeType":"FunctionDefinition","src":"30444:93:16","nodes":[],"documentation":{"id":16067,"nodeType":"StructuredDocumentation","src":"30135:304:16","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"30453:8:16","parameters":{"id":16072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16069,"mutability":"mutable","name":"from","nameLocation":"30478:4:16","nodeType":"VariableDeclaration","scope":16076,"src":"30462:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16068,"name":"string","nodeType":"ElementaryTypeName","src":"30462:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16071,"mutability":"mutable","name":"to","nameLocation":"30500:2:16","nodeType":"VariableDeclaration","scope":16076,"src":"30484:18:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16070,"name":"string","nodeType":"ElementaryTypeName","src":"30484:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30461:42:16"},"returnParameters":{"id":16075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16074,"mutability":"mutable","name":"copied","nameLocation":"30529:6:16","nodeType":"VariableDeclaration","scope":16076,"src":"30522:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16073,"name":"uint64","nodeType":"ElementaryTypeName","src":"30522:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30521:15:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16084,"nodeType":"FunctionDefinition","src":"30942:66:16","nodes":[],"documentation":{"id":16077,"nodeType":"StructuredDocumentation","src":"30543:394:16","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"30951:9:16","parameters":{"id":16082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16079,"mutability":"mutable","name":"path","nameLocation":"30977:4:16","nodeType":"VariableDeclaration","scope":16084,"src":"30961:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16078,"name":"string","nodeType":"ElementaryTypeName","src":"30961:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16081,"mutability":"mutable","name":"recursive","nameLocation":"30988:9:16","nodeType":"VariableDeclaration","scope":16084,"src":"30983:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16080,"name":"bool","nodeType":"ElementaryTypeName","src":"30983:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30960:38:16"},"returnParameters":{"id":16083,"nodeType":"ParameterList","parameters":[],"src":"31007:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16092,"nodeType":"FunctionDefinition","src":"31238:93:16","nodes":[],"documentation":{"id":16085,"nodeType":"StructuredDocumentation","src":"31014:219:16","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"31247:10:16","parameters":{"id":16088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16087,"mutability":"mutable","name":"artifactPath","nameLocation":"31274:12:16","nodeType":"VariableDeclaration","scope":16092,"src":"31258:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16086,"name":"string","nodeType":"ElementaryTypeName","src":"31258:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31257:30:16"},"returnParameters":{"id":16091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16090,"mutability":"mutable","name":"deployedAddress","nameLocation":"31314:15:16","nodeType":"VariableDeclaration","scope":16092,"src":"31306:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16089,"name":"address","nodeType":"ElementaryTypeName","src":"31306:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31305:25:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16102,"nodeType":"FunctionDefinition","src":"31625:141:16","nodes":[],"documentation":{"id":16093,"nodeType":"StructuredDocumentation","src":"31337:283:16","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"31634:10:16","parameters":{"id":16098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16095,"mutability":"mutable","name":"artifactPath","nameLocation":"31661:12:16","nodeType":"VariableDeclaration","scope":16102,"src":"31645:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16094,"name":"string","nodeType":"ElementaryTypeName","src":"31645:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16097,"mutability":"mutable","name":"constructorArgs","nameLocation":"31690:15:16","nodeType":"VariableDeclaration","scope":16102,"src":"31675:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16096,"name":"bytes","nodeType":"ElementaryTypeName","src":"31675:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31644:62:16"},"returnParameters":{"id":16101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16100,"mutability":"mutable","name":"deployedAddress","nameLocation":"31749:15:16","nodeType":"VariableDeclaration","scope":16102,"src":"31741:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16099,"name":"address","nodeType":"ElementaryTypeName","src":"31741:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31740:25:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16110,"nodeType":"FunctionDefinition","src":"31861:69:16","nodes":[],"documentation":{"id":16103,"nodeType":"StructuredDocumentation","src":"31772:84:16","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"31870:6:16","parameters":{"id":16106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16105,"mutability":"mutable","name":"path","nameLocation":"31893:4:16","nodeType":"VariableDeclaration","scope":16110,"src":"31877:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16104,"name":"string","nodeType":"ElementaryTypeName","src":"31877:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31876:22:16"},"returnParameters":{"id":16109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16108,"mutability":"mutable","name":"result","nameLocation":"31922:6:16","nodeType":"VariableDeclaration","scope":16110,"src":"31917:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16107,"name":"bool","nodeType":"ElementaryTypeName","src":"31917:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31916:13:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16119,"nodeType":"FunctionDefinition","src":"31995:84:16","nodes":[],"documentation":{"id":16111,"nodeType":"StructuredDocumentation","src":"31936:54:16","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"32004:3:16","parameters":{"id":16115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16114,"mutability":"mutable","name":"commandInput","nameLocation":"32026:12:16","nodeType":"VariableDeclaration","scope":16119,"src":"32008:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16112,"name":"string","nodeType":"ElementaryTypeName","src":"32008:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16113,"nodeType":"ArrayTypeName","src":"32008:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32007:32:16"},"returnParameters":{"id":16118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16117,"mutability":"mutable","name":"result","nameLocation":"32071:6:16","nodeType":"VariableDeclaration","scope":16119,"src":"32058:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16116,"name":"bytes","nodeType":"ElementaryTypeName","src":"32058:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32057:21:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16128,"nodeType":"FunctionDefinition","src":"32178:93:16","nodes":[],"documentation":{"id":16120,"nodeType":"StructuredDocumentation","src":"32085:88:16","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"32187:10:16","parameters":{"id":16123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16122,"mutability":"mutable","name":"path","nameLocation":"32214:4:16","nodeType":"VariableDeclaration","scope":16128,"src":"32198:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16121,"name":"string","nodeType":"ElementaryTypeName","src":"32198:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32197:22:16"},"returnParameters":{"id":16127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16126,"mutability":"mutable","name":"metadata","nameLocation":"32261:8:16","nodeType":"VariableDeclaration","scope":16128,"src":"32243:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$15193_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":16125,"nodeType":"UserDefinedTypeName","pathNode":{"id":16124,"name":"FsMetadata","nameLocations":["32243:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":15193,"src":"32243:10:16"},"referencedDeclaration":15193,"src":"32243:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$15193_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"32242:28:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16136,"nodeType":"FunctionDefinition","src":"32340:95:16","nodes":[],"documentation":{"id":16129,"nodeType":"StructuredDocumentation","src":"32277:58:16","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"32349:21:16","parameters":{"id":16132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16131,"mutability":"mutable","name":"code","nameLocation":"32386:4:16","nodeType":"VariableDeclaration","scope":16136,"src":"32371:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16130,"name":"bytes","nodeType":"ElementaryTypeName","src":"32371:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32370:21:16"},"returnParameters":{"id":16135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16134,"mutability":"mutable","name":"path","nameLocation":"32429:4:16","nodeType":"VariableDeclaration","scope":16136,"src":"32415:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16133,"name":"string","nodeType":"ElementaryTypeName","src":"32415:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32414:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16144,"nodeType":"FunctionDefinition","src":"32512:111:16","nodes":[],"documentation":{"id":16137,"nodeType":"StructuredDocumentation","src":"32441:66:16","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"32521:29:16","parameters":{"id":16140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16139,"mutability":"mutable","name":"deployedCode","nameLocation":"32566:12:16","nodeType":"VariableDeclaration","scope":16144,"src":"32551:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16138,"name":"bytes","nodeType":"ElementaryTypeName","src":"32551:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32550:29:16"},"returnParameters":{"id":16143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16142,"mutability":"mutable","name":"path","nameLocation":"32617:4:16","nodeType":"VariableDeclaration","scope":16144,"src":"32603:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16141,"name":"string","nodeType":"ElementaryTypeName","src":"32603:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32602:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16152,"nodeType":"FunctionDefinition","src":"32861:101:16","nodes":[],"documentation":{"id":16145,"nodeType":"StructuredDocumentation","src":"32629:227:16","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"32870:7:16","parameters":{"id":16148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16147,"mutability":"mutable","name":"artifactPath","nameLocation":"32894:12:16","nodeType":"VariableDeclaration","scope":16152,"src":"32878:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16146,"name":"string","nodeType":"ElementaryTypeName","src":"32878:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32877:30:16"},"returnParameters":{"id":16151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16150,"mutability":"mutable","name":"creationBytecode","nameLocation":"32944:16:16","nodeType":"VariableDeclaration","scope":16152,"src":"32931:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16149,"name":"bytes","nodeType":"ElementaryTypeName","src":"32931:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32930:31:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16160,"nodeType":"FunctionDefinition","src":"33200:108:16","nodes":[],"documentation":{"id":16153,"nodeType":"StructuredDocumentation","src":"32968:227:16","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"33209:15:16","parameters":{"id":16156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16155,"mutability":"mutable","name":"artifactPath","nameLocation":"33241:12:16","nodeType":"VariableDeclaration","scope":16160,"src":"33225:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16154,"name":"string","nodeType":"ElementaryTypeName","src":"33225:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33224:30:16"},"returnParameters":{"id":16159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16158,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"33291:15:16","nodeType":"VariableDeclaration","scope":16160,"src":"33278:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16157,"name":"bytes","nodeType":"ElementaryTypeName","src":"33278:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33277:30:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16168,"nodeType":"FunctionDefinition","src":"33414:68:16","nodes":[],"documentation":{"id":16161,"nodeType":"StructuredDocumentation","src":"33314:95:16","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"33423:5:16","parameters":{"id":16164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16163,"mutability":"mutable","name":"path","nameLocation":"33445:4:16","nodeType":"VariableDeclaration","scope":16168,"src":"33429:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16162,"name":"string","nodeType":"ElementaryTypeName","src":"33429:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33428:22:16"},"returnParameters":{"id":16167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16166,"mutability":"mutable","name":"result","nameLocation":"33474:6:16","nodeType":"VariableDeclaration","scope":16168,"src":"33469:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16165,"name":"bool","nodeType":"ElementaryTypeName","src":"33469:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33468:13:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16176,"nodeType":"FunctionDefinition","src":"33591:69:16","nodes":[],"documentation":{"id":16169,"nodeType":"StructuredDocumentation","src":"33488:98:16","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"33600:6:16","parameters":{"id":16172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16171,"mutability":"mutable","name":"path","nameLocation":"33623:4:16","nodeType":"VariableDeclaration","scope":16176,"src":"33607:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16170,"name":"string","nodeType":"ElementaryTypeName","src":"33607:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33606:22:16"},"returnParameters":{"id":16175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16174,"mutability":"mutable","name":"result","nameLocation":"33652:6:16","nodeType":"VariableDeclaration","scope":16176,"src":"33647:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16173,"name":"bool","nodeType":"ElementaryTypeName","src":"33647:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33646:13:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16182,"nodeType":"FunctionDefinition","src":"33716:66:16","nodes":[],"documentation":{"id":16177,"nodeType":"StructuredDocumentation","src":"33666:45:16","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"33725:11:16","parameters":{"id":16178,"nodeType":"ParameterList","parameters":[],"src":"33736:2:16"},"returnParameters":{"id":16181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16180,"mutability":"mutable","name":"path","nameLocation":"33776:4:16","nodeType":"VariableDeclaration","scope":16182,"src":"33762:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16179,"name":"string","nodeType":"ElementaryTypeName","src":"33762:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33761:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16190,"nodeType":"FunctionDefinition","src":"33849:83:16","nodes":[],"documentation":{"id":16183,"nodeType":"StructuredDocumentation","src":"33788:56:16","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"33858:6:16","parameters":{"id":16186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16185,"mutability":"mutable","name":"promptText","nameLocation":"33881:10:16","nodeType":"VariableDeclaration","scope":16190,"src":"33865:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16184,"name":"string","nodeType":"ElementaryTypeName","src":"33865:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33864:28:16"},"returnParameters":{"id":16189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16188,"mutability":"mutable","name":"input","nameLocation":"33925:5:16","nodeType":"VariableDeclaration","scope":16190,"src":"33911:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16187,"name":"string","nodeType":"ElementaryTypeName","src":"33911:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33910:21:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16198,"nodeType":"FunctionDefinition","src":"33995:78:16","nodes":[],"documentation":{"id":16191,"nodeType":"StructuredDocumentation","src":"33938:52:16","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"34004:13:16","parameters":{"id":16194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16193,"mutability":"mutable","name":"promptText","nameLocation":"34034:10:16","nodeType":"VariableDeclaration","scope":16198,"src":"34018:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16192,"name":"string","nodeType":"ElementaryTypeName","src":"34018:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34017:28:16"},"returnParameters":{"id":16197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16198,"src":"34064:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16195,"name":"address","nodeType":"ElementaryTypeName","src":"34064:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34063:9:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16206,"nodeType":"FunctionDefinition","src":"34147:89:16","nodes":[],"documentation":{"id":16199,"nodeType":"StructuredDocumentation","src":"34079:63:16","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"34156:12:16","parameters":{"id":16202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16201,"mutability":"mutable","name":"promptText","nameLocation":"34185:10:16","nodeType":"VariableDeclaration","scope":16206,"src":"34169:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16200,"name":"string","nodeType":"ElementaryTypeName","src":"34169:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34168:28:16"},"returnParameters":{"id":16205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16204,"mutability":"mutable","name":"input","nameLocation":"34229:5:16","nodeType":"VariableDeclaration","scope":16206,"src":"34215:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16203,"name":"string","nodeType":"ElementaryTypeName","src":"34215:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34214:21:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16214,"nodeType":"FunctionDefinition","src":"34316:81:16","nodes":[],"documentation":{"id":16207,"nodeType":"StructuredDocumentation","src":"34242:69:16","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"34325:16:16","parameters":{"id":16210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16209,"mutability":"mutable","name":"promptText","nameLocation":"34358:10:16","nodeType":"VariableDeclaration","scope":16214,"src":"34342:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16208,"name":"string","nodeType":"ElementaryTypeName","src":"34342:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34341:28:16"},"returnParameters":{"id":16213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16214,"src":"34388:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16211,"name":"uint256","nodeType":"ElementaryTypeName","src":"34388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34387:9:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16222,"nodeType":"FunctionDefinition","src":"34457:75:16","nodes":[],"documentation":{"id":16215,"nodeType":"StructuredDocumentation","src":"34403:49:16","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"34466:10:16","parameters":{"id":16218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16217,"mutability":"mutable","name":"promptText","nameLocation":"34493:10:16","nodeType":"VariableDeclaration","scope":16222,"src":"34477:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16216,"name":"string","nodeType":"ElementaryTypeName","src":"34477:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34476:28:16"},"returnParameters":{"id":16221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16222,"src":"34523:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16219,"name":"uint256","nodeType":"ElementaryTypeName","src":"34523:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34522:9:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16232,"nodeType":"FunctionDefinition","src":"34780:89:16","nodes":[],"documentation":{"id":16223,"nodeType":"StructuredDocumentation","src":"34538:237:16","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"34789:7:16","parameters":{"id":16226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16225,"mutability":"mutable","name":"path","nameLocation":"34813:4:16","nodeType":"VariableDeclaration","scope":16232,"src":"34797:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16224,"name":"string","nodeType":"ElementaryTypeName","src":"34797:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34796:22:16"},"returnParameters":{"id":16231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16230,"mutability":"mutable","name":"entries","nameLocation":"34860:7:16","nodeType":"VariableDeclaration","scope":16232,"src":"34842:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15177_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16228,"nodeType":"UserDefinedTypeName","pathNode":{"id":16227,"name":"DirEntry","nameLocations":["34842:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":15177,"src":"34842:8:16"},"referencedDeclaration":15177,"src":"34842:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15177_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16229,"nodeType":"ArrayTypeName","src":"34842:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15177_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"34841:27:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16244,"nodeType":"FunctionDefinition","src":"34906:106:16","nodes":[],"documentation":{"id":16233,"nodeType":"StructuredDocumentation","src":"34875:26:16","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"34915:7:16","parameters":{"id":16238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16235,"mutability":"mutable","name":"path","nameLocation":"34939:4:16","nodeType":"VariableDeclaration","scope":16244,"src":"34923:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16234,"name":"string","nodeType":"ElementaryTypeName","src":"34923:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16237,"mutability":"mutable","name":"maxDepth","nameLocation":"34952:8:16","nodeType":"VariableDeclaration","scope":16244,"src":"34945:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16236,"name":"uint64","nodeType":"ElementaryTypeName","src":"34945:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"34922:39:16"},"returnParameters":{"id":16243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16242,"mutability":"mutable","name":"entries","nameLocation":"35003:7:16","nodeType":"VariableDeclaration","scope":16244,"src":"34985:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15177_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16240,"nodeType":"UserDefinedTypeName","pathNode":{"id":16239,"name":"DirEntry","nameLocations":["34985:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":15177,"src":"34985:8:16"},"referencedDeclaration":15177,"src":"34985:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15177_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16241,"nodeType":"ArrayTypeName","src":"34985:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15177_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"34984:27:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16258,"nodeType":"FunctionDefinition","src":"35049:148:16","nodes":[],"documentation":{"id":16245,"nodeType":"StructuredDocumentation","src":"35018:26:16","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"35058:7:16","parameters":{"id":16252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16247,"mutability":"mutable","name":"path","nameLocation":"35082:4:16","nodeType":"VariableDeclaration","scope":16258,"src":"35066:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16246,"name":"string","nodeType":"ElementaryTypeName","src":"35066:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16249,"mutability":"mutable","name":"maxDepth","nameLocation":"35095:8:16","nodeType":"VariableDeclaration","scope":16258,"src":"35088:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16248,"name":"uint64","nodeType":"ElementaryTypeName","src":"35088:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16251,"mutability":"mutable","name":"followLinks","nameLocation":"35110:11:16","nodeType":"VariableDeclaration","scope":16258,"src":"35105:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16250,"name":"bool","nodeType":"ElementaryTypeName","src":"35105:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35065:57:16"},"returnParameters":{"id":16257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16256,"mutability":"mutable","name":"entries","nameLocation":"35188:7:16","nodeType":"VariableDeclaration","scope":16258,"src":"35170:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15177_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16254,"nodeType":"UserDefinedTypeName","pathNode":{"id":16253,"name":"DirEntry","nameLocations":["35170:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":15177,"src":"35170:8:16"},"referencedDeclaration":15177,"src":"35170:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15177_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16255,"nodeType":"ArrayTypeName","src":"35170:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15177_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"35169:27:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16266,"nodeType":"FunctionDefinition","src":"35295:83:16","nodes":[],"documentation":{"id":16259,"nodeType":"StructuredDocumentation","src":"35203:87:16","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"35304:8:16","parameters":{"id":16262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16261,"mutability":"mutable","name":"path","nameLocation":"35329:4:16","nodeType":"VariableDeclaration","scope":16266,"src":"35313:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16260,"name":"string","nodeType":"ElementaryTypeName","src":"35313:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35312:22:16"},"returnParameters":{"id":16265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16264,"mutability":"mutable","name":"data","nameLocation":"35372:4:16","nodeType":"VariableDeclaration","scope":16266,"src":"35358:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16263,"name":"string","nodeType":"ElementaryTypeName","src":"35358:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35357:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16274,"nodeType":"FunctionDefinition","src":"35476:88:16","nodes":[],"documentation":{"id":16267,"nodeType":"StructuredDocumentation","src":"35384:87:16","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"35485:14:16","parameters":{"id":16270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16269,"mutability":"mutable","name":"path","nameLocation":"35516:4:16","nodeType":"VariableDeclaration","scope":16274,"src":"35500:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16268,"name":"string","nodeType":"ElementaryTypeName","src":"35500:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35499:22:16"},"returnParameters":{"id":16273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16272,"mutability":"mutable","name":"data","nameLocation":"35558:4:16","nodeType":"VariableDeclaration","scope":16274,"src":"35545:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16271,"name":"bytes","nodeType":"ElementaryTypeName","src":"35545:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35544:19:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16282,"nodeType":"FunctionDefinition","src":"35613:83:16","nodes":[],"documentation":{"id":16275,"nodeType":"StructuredDocumentation","src":"35570:38:16","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"35622:8:16","parameters":{"id":16278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16277,"mutability":"mutable","name":"path","nameLocation":"35647:4:16","nodeType":"VariableDeclaration","scope":16282,"src":"35631:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16276,"name":"string","nodeType":"ElementaryTypeName","src":"35631:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35630:22:16"},"returnParameters":{"id":16281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16280,"mutability":"mutable","name":"line","nameLocation":"35690:4:16","nodeType":"VariableDeclaration","scope":16282,"src":"35676:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16279,"name":"string","nodeType":"ElementaryTypeName","src":"35676:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35675:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16290,"nodeType":"FunctionDefinition","src":"35955:93:16","nodes":[],"documentation":{"id":16283,"nodeType":"StructuredDocumentation","src":"35702:248:16","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"35964:8:16","parameters":{"id":16286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16285,"mutability":"mutable","name":"linkPath","nameLocation":"35989:8:16","nodeType":"VariableDeclaration","scope":16290,"src":"35973:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16284,"name":"string","nodeType":"ElementaryTypeName","src":"35973:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35972:26:16"},"returnParameters":{"id":16289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16288,"mutability":"mutable","name":"targetPath","nameLocation":"36036:10:16","nodeType":"VariableDeclaration","scope":16290,"src":"36022:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16287,"name":"string","nodeType":"ElementaryTypeName","src":"36022:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36021:26:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16298,"nodeType":"FunctionDefinition","src":"36438:66:16","nodes":[],"documentation":{"id":16291,"nodeType":"StructuredDocumentation","src":"36054:379:16","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"36447:9:16","parameters":{"id":16296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16293,"mutability":"mutable","name":"path","nameLocation":"36473:4:16","nodeType":"VariableDeclaration","scope":16298,"src":"36457:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16292,"name":"string","nodeType":"ElementaryTypeName","src":"36457:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16295,"mutability":"mutable","name":"recursive","nameLocation":"36484:9:16","nodeType":"VariableDeclaration","scope":16298,"src":"36479:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16294,"name":"bool","nodeType":"ElementaryTypeName","src":"36479:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36456:38:16"},"returnParameters":{"id":16297,"nodeType":"ParameterList","parameters":[],"src":"36503:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16304,"nodeType":"FunctionDefinition","src":"36837:51:16","nodes":[],"documentation":{"id":16299,"nodeType":"StructuredDocumentation","src":"36510:322:16","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"36846:10:16","parameters":{"id":16302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16301,"mutability":"mutable","name":"path","nameLocation":"36873:4:16","nodeType":"VariableDeclaration","scope":16304,"src":"36857:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16300,"name":"string","nodeType":"ElementaryTypeName","src":"36857:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36856:22:16"},"returnParameters":{"id":16303,"nodeType":"ParameterList","parameters":[],"src":"36887:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16314,"nodeType":"FunctionDefinition","src":"36995:91:16","nodes":[],"documentation":{"id":16305,"nodeType":"StructuredDocumentation","src":"36894:96:16","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"37004:6:16","parameters":{"id":16309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16308,"mutability":"mutable","name":"commandInput","nameLocation":"37029:12:16","nodeType":"VariableDeclaration","scope":16314,"src":"37011:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16306,"name":"string","nodeType":"ElementaryTypeName","src":"37011:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16307,"nodeType":"ArrayTypeName","src":"37011:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"37010:32:16"},"returnParameters":{"id":16313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16312,"mutability":"mutable","name":"result","nameLocation":"37078:6:16","nodeType":"VariableDeclaration","scope":16314,"src":"37061:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$15211_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":16311,"nodeType":"UserDefinedTypeName","pathNode":{"id":16310,"name":"FfiResult","nameLocations":["37061:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":15211,"src":"37061:9:16"},"referencedDeclaration":15211,"src":"37061:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$15211_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"37060:25:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16320,"nodeType":"FunctionDefinition","src":"37151:60:16","nodes":[],"documentation":{"id":16315,"nodeType":"StructuredDocumentation","src":"37092:54:16","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"37160:8:16","parameters":{"id":16316,"nodeType":"ParameterList","parameters":[],"src":"37168:2:16"},"returnParameters":{"id":16319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16318,"mutability":"mutable","name":"milliseconds","nameLocation":"37197:12:16","nodeType":"VariableDeclaration","scope":16320,"src":"37189:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16317,"name":"uint256","nodeType":"ElementaryTypeName","src":"37189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37188:22:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16328,"nodeType":"FunctionDefinition","src":"37380:72:16","nodes":[],"documentation":{"id":16321,"nodeType":"StructuredDocumentation","src":"37217:158:16","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"37389:9:16","parameters":{"id":16326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16323,"mutability":"mutable","name":"path","nameLocation":"37415:4:16","nodeType":"VariableDeclaration","scope":16328,"src":"37399:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16322,"name":"string","nodeType":"ElementaryTypeName","src":"37399:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16325,"mutability":"mutable","name":"data","nameLocation":"37437:4:16","nodeType":"VariableDeclaration","scope":16328,"src":"37421:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16324,"name":"string","nodeType":"ElementaryTypeName","src":"37421:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37398:44:16"},"returnParameters":{"id":16327,"nodeType":"ParameterList","parameters":[],"src":"37451:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16336,"nodeType":"FunctionDefinition","src":"37630:77:16","nodes":[],"documentation":{"id":16329,"nodeType":"StructuredDocumentation","src":"37458:167:16","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"37639:15:16","parameters":{"id":16334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16331,"mutability":"mutable","name":"path","nameLocation":"37671:4:16","nodeType":"VariableDeclaration","scope":16336,"src":"37655:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16330,"name":"string","nodeType":"ElementaryTypeName","src":"37655:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16333,"mutability":"mutable","name":"data","nameLocation":"37692:4:16","nodeType":"VariableDeclaration","scope":16336,"src":"37677:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16332,"name":"bytes","nodeType":"ElementaryTypeName","src":"37677:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37654:43:16"},"returnParameters":{"id":16335,"nodeType":"ParameterList","parameters":[],"src":"37706:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16344,"nodeType":"FunctionDefinition","src":"37828:72:16","nodes":[],"documentation":{"id":16337,"nodeType":"StructuredDocumentation","src":"37713:110:16","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"37837:9:16","parameters":{"id":16342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16339,"mutability":"mutable","name":"path","nameLocation":"37863:4:16","nodeType":"VariableDeclaration","scope":16344,"src":"37847:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16338,"name":"string","nodeType":"ElementaryTypeName","src":"37847:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16341,"mutability":"mutable","name":"data","nameLocation":"37885:4:16","nodeType":"VariableDeclaration","scope":16344,"src":"37869:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16340,"name":"string","nodeType":"ElementaryTypeName","src":"37869:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37846:44:16"},"returnParameters":{"id":16343,"nodeType":"ParameterList","parameters":[],"src":"37899:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16354,"nodeType":"FunctionDefinition","src":"37986:95:16","nodes":[],"documentation":{"id":16345,"nodeType":"StructuredDocumentation","src":"37937:44:16","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"37995:13:16","parameters":{"id":16350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16347,"mutability":"mutable","name":"json","nameLocation":"38025:4:16","nodeType":"VariableDeclaration","scope":16354,"src":"38009:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16346,"name":"string","nodeType":"ElementaryTypeName","src":"38009:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16349,"mutability":"mutable","name":"key","nameLocation":"38047:3:16","nodeType":"VariableDeclaration","scope":16354,"src":"38031:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16348,"name":"string","nodeType":"ElementaryTypeName","src":"38031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38008:43:16"},"returnParameters":{"id":16353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16354,"src":"38075:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16351,"name":"bool","nodeType":"ElementaryTypeName","src":"38075:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38074:6:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16364,"nodeType":"FunctionDefinition","src":"38162:101:16","nodes":[],"documentation":{"id":16355,"nodeType":"StructuredDocumentation","src":"38087:70:16","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"38171:16:16","parameters":{"id":16360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16357,"mutability":"mutable","name":"json","nameLocation":"38204:4:16","nodeType":"VariableDeclaration","scope":16364,"src":"38188:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16356,"name":"string","nodeType":"ElementaryTypeName","src":"38188:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16359,"mutability":"mutable","name":"key","nameLocation":"38226:3:16","nodeType":"VariableDeclaration","scope":16364,"src":"38210:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16358,"name":"string","nodeType":"ElementaryTypeName","src":"38210:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38187:43:16"},"returnParameters":{"id":16363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16364,"src":"38254:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16361,"name":"address","nodeType":"ElementaryTypeName","src":"38254:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38253:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16375,"nodeType":"FunctionDefinition","src":"38346:139:16","nodes":[],"documentation":{"id":16365,"nodeType":"StructuredDocumentation","src":"38269:72:16","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"38355:21:16","parameters":{"id":16370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16367,"mutability":"mutable","name":"json","nameLocation":"38393:4:16","nodeType":"VariableDeclaration","scope":16375,"src":"38377:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16366,"name":"string","nodeType":"ElementaryTypeName","src":"38377:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16369,"mutability":"mutable","name":"key","nameLocation":"38415:3:16","nodeType":"VariableDeclaration","scope":16375,"src":"38399:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16368,"name":"string","nodeType":"ElementaryTypeName","src":"38399:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38376:43:16"},"returnParameters":{"id":16374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16375,"src":"38467:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16371,"name":"address","nodeType":"ElementaryTypeName","src":"38467:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16372,"nodeType":"ArrayTypeName","src":"38467:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"38466:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16385,"nodeType":"FunctionDefinition","src":"38563:95:16","nodes":[],"documentation":{"id":16376,"nodeType":"StructuredDocumentation","src":"38491:67:16","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"38572:13:16","parameters":{"id":16381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16378,"mutability":"mutable","name":"json","nameLocation":"38602:4:16","nodeType":"VariableDeclaration","scope":16385,"src":"38586:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16377,"name":"string","nodeType":"ElementaryTypeName","src":"38586:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16380,"mutability":"mutable","name":"key","nameLocation":"38624:3:16","nodeType":"VariableDeclaration","scope":16385,"src":"38608:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16379,"name":"string","nodeType":"ElementaryTypeName","src":"38608:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38585:43:16"},"returnParameters":{"id":16384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16385,"src":"38652:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16382,"name":"bool","nodeType":"ElementaryTypeName","src":"38652:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38651:6:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16396,"nodeType":"FunctionDefinition","src":"38738:109:16","nodes":[],"documentation":{"id":16386,"nodeType":"StructuredDocumentation","src":"38664:69:16","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"38747:18:16","parameters":{"id":16391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16388,"mutability":"mutable","name":"json","nameLocation":"38782:4:16","nodeType":"VariableDeclaration","scope":16396,"src":"38766:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16387,"name":"string","nodeType":"ElementaryTypeName","src":"38766:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16390,"mutability":"mutable","name":"key","nameLocation":"38804:3:16","nodeType":"VariableDeclaration","scope":16396,"src":"38788:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16389,"name":"string","nodeType":"ElementaryTypeName","src":"38788:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38765:43:16"},"returnParameters":{"id":16395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16396,"src":"38832:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16392,"name":"bool","nodeType":"ElementaryTypeName","src":"38832:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16393,"nodeType":"ArrayTypeName","src":"38832:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"38831:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16406,"nodeType":"FunctionDefinition","src":"38926:104:16","nodes":[],"documentation":{"id":16397,"nodeType":"StructuredDocumentation","src":"38853:68:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"38935:14:16","parameters":{"id":16402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16399,"mutability":"mutable","name":"json","nameLocation":"38966:4:16","nodeType":"VariableDeclaration","scope":16406,"src":"38950:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16398,"name":"string","nodeType":"ElementaryTypeName","src":"38950:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16401,"mutability":"mutable","name":"key","nameLocation":"38988:3:16","nodeType":"VariableDeclaration","scope":16406,"src":"38972:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16400,"name":"string","nodeType":"ElementaryTypeName","src":"38972:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38949:43:16"},"returnParameters":{"id":16405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16406,"src":"39016:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16403,"name":"bytes","nodeType":"ElementaryTypeName","src":"39016:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39015:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16416,"nodeType":"FunctionDefinition","src":"39111:101:16","nodes":[],"documentation":{"id":16407,"nodeType":"StructuredDocumentation","src":"39036:70:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"39120:16:16","parameters":{"id":16412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16409,"mutability":"mutable","name":"json","nameLocation":"39153:4:16","nodeType":"VariableDeclaration","scope":16416,"src":"39137:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16408,"name":"string","nodeType":"ElementaryTypeName","src":"39137:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16411,"mutability":"mutable","name":"key","nameLocation":"39175:3:16","nodeType":"VariableDeclaration","scope":16416,"src":"39159:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16410,"name":"string","nodeType":"ElementaryTypeName","src":"39159:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39136:43:16"},"returnParameters":{"id":16415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16416,"src":"39203:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39203:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39202:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16427,"nodeType":"FunctionDefinition","src":"39295:139:16","nodes":[],"documentation":{"id":16417,"nodeType":"StructuredDocumentation","src":"39218:72:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"39304:21:16","parameters":{"id":16422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16419,"mutability":"mutable","name":"json","nameLocation":"39342:4:16","nodeType":"VariableDeclaration","scope":16427,"src":"39326:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16418,"name":"string","nodeType":"ElementaryTypeName","src":"39326:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16421,"mutability":"mutable","name":"key","nameLocation":"39364:3:16","nodeType":"VariableDeclaration","scope":16427,"src":"39348:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16420,"name":"string","nodeType":"ElementaryTypeName","src":"39348:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39325:43:16"},"returnParameters":{"id":16426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16427,"src":"39416:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39416:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16424,"nodeType":"ArrayTypeName","src":"39416:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"39415:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16438,"nodeType":"FunctionDefinition","src":"39515:111:16","nodes":[],"documentation":{"id":16428,"nodeType":"StructuredDocumentation","src":"39440:70:16","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"39524:19:16","parameters":{"id":16433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16430,"mutability":"mutable","name":"json","nameLocation":"39560:4:16","nodeType":"VariableDeclaration","scope":16438,"src":"39544:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16429,"name":"string","nodeType":"ElementaryTypeName","src":"39544:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16432,"mutability":"mutable","name":"key","nameLocation":"39582:3:16","nodeType":"VariableDeclaration","scope":16438,"src":"39566:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16431,"name":"string","nodeType":"ElementaryTypeName","src":"39566:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39543:43:16"},"returnParameters":{"id":16437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16438,"src":"39610:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16434,"name":"bytes","nodeType":"ElementaryTypeName","src":"39610:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16435,"nodeType":"ArrayTypeName","src":"39610:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"39609:16:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16448,"nodeType":"FunctionDefinition","src":"39706:96:16","nodes":[],"documentation":{"id":16439,"nodeType":"StructuredDocumentation","src":"39632:69:16","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"39715:12:16","parameters":{"id":16444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16441,"mutability":"mutable","name":"json","nameLocation":"39744:4:16","nodeType":"VariableDeclaration","scope":16448,"src":"39728:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16440,"name":"string","nodeType":"ElementaryTypeName","src":"39728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16443,"mutability":"mutable","name":"key","nameLocation":"39766:3:16","nodeType":"VariableDeclaration","scope":16448,"src":"39750:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16442,"name":"string","nodeType":"ElementaryTypeName","src":"39750:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39727:43:16"},"returnParameters":{"id":16447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16448,"src":"39794:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16445,"name":"int256","nodeType":"ElementaryTypeName","src":"39794:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39793:8:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16459,"nodeType":"FunctionDefinition","src":"39884:110:16","nodes":[],"documentation":{"id":16449,"nodeType":"StructuredDocumentation","src":"39808:71:16","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"39893:17:16","parameters":{"id":16454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16451,"mutability":"mutable","name":"json","nameLocation":"39927:4:16","nodeType":"VariableDeclaration","scope":16459,"src":"39911:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16450,"name":"string","nodeType":"ElementaryTypeName","src":"39911:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16453,"mutability":"mutable","name":"key","nameLocation":"39949:3:16","nodeType":"VariableDeclaration","scope":16459,"src":"39933:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16452,"name":"string","nodeType":"ElementaryTypeName","src":"39933:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39910:43:16"},"returnParameters":{"id":16458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16459,"src":"39977:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16455,"name":"int256","nodeType":"ElementaryTypeName","src":"39977:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16456,"nodeType":"ArrayTypeName","src":"39977:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"39976:17:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16470,"nodeType":"FunctionDefinition","src":"40059:111:16","nodes":[],"documentation":{"id":16460,"nodeType":"StructuredDocumentation","src":"40000:54:16","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"40068:13:16","parameters":{"id":16465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16462,"mutability":"mutable","name":"json","nameLocation":"40098:4:16","nodeType":"VariableDeclaration","scope":16470,"src":"40082:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16461,"name":"string","nodeType":"ElementaryTypeName","src":"40082:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16464,"mutability":"mutable","name":"key","nameLocation":"40120:3:16","nodeType":"VariableDeclaration","scope":16470,"src":"40104:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16463,"name":"string","nodeType":"ElementaryTypeName","src":"40104:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40081:43:16"},"returnParameters":{"id":16469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16468,"mutability":"mutable","name":"keys","nameLocation":"40164:4:16","nodeType":"VariableDeclaration","scope":16470,"src":"40148:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16466,"name":"string","nodeType":"ElementaryTypeName","src":"40148:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16467,"nodeType":"ArrayTypeName","src":"40148:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40147:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16480,"nodeType":"FunctionDefinition","src":"40250:106:16","nodes":[],"documentation":{"id":16471,"nodeType":"StructuredDocumentation","src":"40176:69:16","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"40259:15:16","parameters":{"id":16476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16473,"mutability":"mutable","name":"json","nameLocation":"40291:4:16","nodeType":"VariableDeclaration","scope":16480,"src":"40275:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16472,"name":"string","nodeType":"ElementaryTypeName","src":"40275:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16475,"mutability":"mutable","name":"key","nameLocation":"40313:3:16","nodeType":"VariableDeclaration","scope":16480,"src":"40297:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16474,"name":"string","nodeType":"ElementaryTypeName","src":"40297:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40274:43:16"},"returnParameters":{"id":16479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16480,"src":"40341:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16477,"name":"string","nodeType":"ElementaryTypeName","src":"40341:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40340:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16491,"nodeType":"FunctionDefinition","src":"40438:113:16","nodes":[],"documentation":{"id":16481,"nodeType":"StructuredDocumentation","src":"40362:71:16","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"40447:20:16","parameters":{"id":16486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16483,"mutability":"mutable","name":"json","nameLocation":"40484:4:16","nodeType":"VariableDeclaration","scope":16491,"src":"40468:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16482,"name":"string","nodeType":"ElementaryTypeName","src":"40468:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16485,"mutability":"mutable","name":"key","nameLocation":"40506:3:16","nodeType":"VariableDeclaration","scope":16491,"src":"40490:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16484,"name":"string","nodeType":"ElementaryTypeName","src":"40490:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40467:43:16"},"returnParameters":{"id":16490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16491,"src":"40534:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16487,"name":"string","nodeType":"ElementaryTypeName","src":"40534:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16488,"nodeType":"ArrayTypeName","src":"40534:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40533:17:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16503,"nodeType":"FunctionDefinition","src":"40668:165:16","nodes":[],"documentation":{"id":16492,"nodeType":"StructuredDocumentation","src":"40557:106:16","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"40677:18:16","parameters":{"id":16499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16494,"mutability":"mutable","name":"json","nameLocation":"40712:4:16","nodeType":"VariableDeclaration","scope":16503,"src":"40696:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16493,"name":"string","nodeType":"ElementaryTypeName","src":"40696:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16496,"mutability":"mutable","name":"key","nameLocation":"40734:3:16","nodeType":"VariableDeclaration","scope":16503,"src":"40718:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16495,"name":"string","nodeType":"ElementaryTypeName","src":"40718:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16498,"mutability":"mutable","name":"typeDescription","nameLocation":"40755:15:16","nodeType":"VariableDeclaration","scope":16503,"src":"40739:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16497,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40695:76:16"},"returnParameters":{"id":16502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16503,"src":"40819:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16500,"name":"bytes","nodeType":"ElementaryTypeName","src":"40819:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40818:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16513,"nodeType":"FunctionDefinition","src":"40935:139:16","nodes":[],"documentation":{"id":16504,"nodeType":"StructuredDocumentation","src":"40839:91:16","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"40944:13:16","parameters":{"id":16509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16506,"mutability":"mutable","name":"json","nameLocation":"40974:4:16","nodeType":"VariableDeclaration","scope":16513,"src":"40958:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16505,"name":"string","nodeType":"ElementaryTypeName","src":"40958:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16508,"mutability":"mutable","name":"typeDescription","nameLocation":"40996:15:16","nodeType":"VariableDeclaration","scope":16513,"src":"40980:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16507,"name":"string","nodeType":"ElementaryTypeName","src":"40980:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40957:55:16"},"returnParameters":{"id":16512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16513,"src":"41060:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16510,"name":"bytes","nodeType":"ElementaryTypeName","src":"41060:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41059:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16525,"nodeType":"FunctionDefinition","src":"41185:160:16","nodes":[],"documentation":{"id":16514,"nodeType":"StructuredDocumentation","src":"41080:100:16","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"41194:13:16","parameters":{"id":16521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16516,"mutability":"mutable","name":"json","nameLocation":"41224:4:16","nodeType":"VariableDeclaration","scope":16525,"src":"41208:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16515,"name":"string","nodeType":"ElementaryTypeName","src":"41208:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16518,"mutability":"mutable","name":"key","nameLocation":"41246:3:16","nodeType":"VariableDeclaration","scope":16525,"src":"41230:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16517,"name":"string","nodeType":"ElementaryTypeName","src":"41230:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16520,"mutability":"mutable","name":"typeDescription","nameLocation":"41267:15:16","nodeType":"VariableDeclaration","scope":16525,"src":"41251:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16519,"name":"string","nodeType":"ElementaryTypeName","src":"41251:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41207:76:16"},"returnParameters":{"id":16524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16525,"src":"41331:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16522,"name":"bytes","nodeType":"ElementaryTypeName","src":"41331:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41330:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16535,"nodeType":"FunctionDefinition","src":"41426:98:16","nodes":[],"documentation":{"id":16526,"nodeType":"StructuredDocumentation","src":"41351:70:16","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"41435:13:16","parameters":{"id":16531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16528,"mutability":"mutable","name":"json","nameLocation":"41465:4:16","nodeType":"VariableDeclaration","scope":16535,"src":"41449:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16527,"name":"string","nodeType":"ElementaryTypeName","src":"41449:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16530,"mutability":"mutable","name":"key","nameLocation":"41487:3:16","nodeType":"VariableDeclaration","scope":16535,"src":"41471:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16529,"name":"string","nodeType":"ElementaryTypeName","src":"41471:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41448:43:16"},"returnParameters":{"id":16534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16535,"src":"41515:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16532,"name":"uint256","nodeType":"ElementaryTypeName","src":"41515:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41514:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16546,"nodeType":"FunctionDefinition","src":"41607:112:16","nodes":[],"documentation":{"id":16536,"nodeType":"StructuredDocumentation","src":"41530:72:16","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"41616:18:16","parameters":{"id":16541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16538,"mutability":"mutable","name":"json","nameLocation":"41651:4:16","nodeType":"VariableDeclaration","scope":16546,"src":"41635:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16537,"name":"string","nodeType":"ElementaryTypeName","src":"41635:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16540,"mutability":"mutable","name":"key","nameLocation":"41673:3:16","nodeType":"VariableDeclaration","scope":16546,"src":"41657:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16539,"name":"string","nodeType":"ElementaryTypeName","src":"41657:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41634:43:16"},"returnParameters":{"id":16545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16546,"src":"41701:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16542,"name":"uint256","nodeType":"ElementaryTypeName","src":"41701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16543,"nodeType":"ArrayTypeName","src":"41701:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"41700:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16554,"nodeType":"FunctionDefinition","src":"41760:93:16","nodes":[],"documentation":{"id":16547,"nodeType":"StructuredDocumentation","src":"41725:30:16","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"41769:9:16","parameters":{"id":16550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16549,"mutability":"mutable","name":"json","nameLocation":"41795:4:16","nodeType":"VariableDeclaration","scope":16554,"src":"41779:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16548,"name":"string","nodeType":"ElementaryTypeName","src":"41779:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41778:22:16"},"returnParameters":{"id":16553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16552,"mutability":"mutable","name":"abiEncodedData","nameLocation":"41837:14:16","nodeType":"VariableDeclaration","scope":16554,"src":"41824:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16551,"name":"bytes","nodeType":"ElementaryTypeName","src":"41824:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41823:29:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16564,"nodeType":"FunctionDefinition","src":"41903:114:16","nodes":[],"documentation":{"id":16555,"nodeType":"StructuredDocumentation","src":"41859:39:16","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"41912:9:16","parameters":{"id":16560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16557,"mutability":"mutable","name":"json","nameLocation":"41938:4:16","nodeType":"VariableDeclaration","scope":16564,"src":"41922:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16556,"name":"string","nodeType":"ElementaryTypeName","src":"41922:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16559,"mutability":"mutable","name":"key","nameLocation":"41960:3:16","nodeType":"VariableDeclaration","scope":16564,"src":"41944:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16558,"name":"string","nodeType":"ElementaryTypeName","src":"41944:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41921:43:16"},"returnParameters":{"id":16563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16562,"mutability":"mutable","name":"abiEncodedData","nameLocation":"42001:14:16","nodeType":"VariableDeclaration","scope":16564,"src":"41988:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16561,"name":"bytes","nodeType":"ElementaryTypeName","src":"41988:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41987:29:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16576,"nodeType":"FunctionDefinition","src":"42052:148:16","nodes":[],"documentation":{"id":16565,"nodeType":"StructuredDocumentation","src":"42023:24:16","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"42061:16:16","parameters":{"id":16572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16567,"mutability":"mutable","name":"objectKey","nameLocation":"42094:9:16","nodeType":"VariableDeclaration","scope":16576,"src":"42078:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16566,"name":"string","nodeType":"ElementaryTypeName","src":"42078:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16569,"mutability":"mutable","name":"valueKey","nameLocation":"42121:8:16","nodeType":"VariableDeclaration","scope":16576,"src":"42105:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16568,"name":"string","nodeType":"ElementaryTypeName","src":"42105:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16571,"mutability":"mutable","name":"value","nameLocation":"42139:5:16","nodeType":"VariableDeclaration","scope":16576,"src":"42131:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16570,"name":"address","nodeType":"ElementaryTypeName","src":"42131:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42077:68:16"},"returnParameters":{"id":16575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16574,"mutability":"mutable","name":"json","nameLocation":"42194:4:16","nodeType":"VariableDeclaration","scope":16576,"src":"42180:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16573,"name":"string","nodeType":"ElementaryTypeName","src":"42180:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42179:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16589,"nodeType":"FunctionDefinition","src":"42235:160:16","nodes":[],"documentation":{"id":16577,"nodeType":"StructuredDocumentation","src":"42206:24:16","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"42244:16:16","parameters":{"id":16585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16579,"mutability":"mutable","name":"objectKey","nameLocation":"42277:9:16","nodeType":"VariableDeclaration","scope":16589,"src":"42261:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16578,"name":"string","nodeType":"ElementaryTypeName","src":"42261:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16581,"mutability":"mutable","name":"valueKey","nameLocation":"42304:8:16","nodeType":"VariableDeclaration","scope":16589,"src":"42288:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16580,"name":"string","nodeType":"ElementaryTypeName","src":"42288:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16584,"mutability":"mutable","name":"values","nameLocation":"42333:6:16","nodeType":"VariableDeclaration","scope":16589,"src":"42314:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16582,"name":"address","nodeType":"ElementaryTypeName","src":"42314:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16583,"nodeType":"ArrayTypeName","src":"42314:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"42260:80:16"},"returnParameters":{"id":16588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16587,"mutability":"mutable","name":"json","nameLocation":"42389:4:16","nodeType":"VariableDeclaration","scope":16589,"src":"42375:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16586,"name":"string","nodeType":"ElementaryTypeName","src":"42375:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42374:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16601,"nodeType":"FunctionDefinition","src":"42430:142:16","nodes":[],"documentation":{"id":16590,"nodeType":"StructuredDocumentation","src":"42401:24:16","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"42439:13:16","parameters":{"id":16597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16592,"mutability":"mutable","name":"objectKey","nameLocation":"42469:9:16","nodeType":"VariableDeclaration","scope":16601,"src":"42453:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16591,"name":"string","nodeType":"ElementaryTypeName","src":"42453:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16594,"mutability":"mutable","name":"valueKey","nameLocation":"42496:8:16","nodeType":"VariableDeclaration","scope":16601,"src":"42480:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16593,"name":"string","nodeType":"ElementaryTypeName","src":"42480:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16596,"mutability":"mutable","name":"value","nameLocation":"42511:5:16","nodeType":"VariableDeclaration","scope":16601,"src":"42506:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16595,"name":"bool","nodeType":"ElementaryTypeName","src":"42506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42452:65:16"},"returnParameters":{"id":16600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16599,"mutability":"mutable","name":"json","nameLocation":"42566:4:16","nodeType":"VariableDeclaration","scope":16601,"src":"42552:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16598,"name":"string","nodeType":"ElementaryTypeName","src":"42552:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42551:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16614,"nodeType":"FunctionDefinition","src":"42607:154:16","nodes":[],"documentation":{"id":16602,"nodeType":"StructuredDocumentation","src":"42578:24:16","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"42616:13:16","parameters":{"id":16610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16604,"mutability":"mutable","name":"objectKey","nameLocation":"42646:9:16","nodeType":"VariableDeclaration","scope":16614,"src":"42630:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16603,"name":"string","nodeType":"ElementaryTypeName","src":"42630:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16606,"mutability":"mutable","name":"valueKey","nameLocation":"42673:8:16","nodeType":"VariableDeclaration","scope":16614,"src":"42657:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16605,"name":"string","nodeType":"ElementaryTypeName","src":"42657:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16609,"mutability":"mutable","name":"values","nameLocation":"42699:6:16","nodeType":"VariableDeclaration","scope":16614,"src":"42683:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16607,"name":"bool","nodeType":"ElementaryTypeName","src":"42683:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16608,"nodeType":"ArrayTypeName","src":"42683:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"42629:77:16"},"returnParameters":{"id":16613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16612,"mutability":"mutable","name":"json","nameLocation":"42755:4:16","nodeType":"VariableDeclaration","scope":16614,"src":"42741:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16611,"name":"string","nodeType":"ElementaryTypeName","src":"42741:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42740:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16626,"nodeType":"FunctionDefinition","src":"42796:148:16","nodes":[],"documentation":{"id":16615,"nodeType":"StructuredDocumentation","src":"42767:24:16","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"42805:16:16","parameters":{"id":16622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16617,"mutability":"mutable","name":"objectKey","nameLocation":"42838:9:16","nodeType":"VariableDeclaration","scope":16626,"src":"42822:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16616,"name":"string","nodeType":"ElementaryTypeName","src":"42822:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16619,"mutability":"mutable","name":"valueKey","nameLocation":"42865:8:16","nodeType":"VariableDeclaration","scope":16626,"src":"42849:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16618,"name":"string","nodeType":"ElementaryTypeName","src":"42849:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16621,"mutability":"mutable","name":"value","nameLocation":"42883:5:16","nodeType":"VariableDeclaration","scope":16626,"src":"42875:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"42875:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"42821:68:16"},"returnParameters":{"id":16625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16624,"mutability":"mutable","name":"json","nameLocation":"42938:4:16","nodeType":"VariableDeclaration","scope":16626,"src":"42924:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16623,"name":"string","nodeType":"ElementaryTypeName","src":"42924:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42923:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16639,"nodeType":"FunctionDefinition","src":"42979:160:16","nodes":[],"documentation":{"id":16627,"nodeType":"StructuredDocumentation","src":"42950:24:16","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"42988:16:16","parameters":{"id":16635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16629,"mutability":"mutable","name":"objectKey","nameLocation":"43021:9:16","nodeType":"VariableDeclaration","scope":16639,"src":"43005:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16628,"name":"string","nodeType":"ElementaryTypeName","src":"43005:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16631,"mutability":"mutable","name":"valueKey","nameLocation":"43048:8:16","nodeType":"VariableDeclaration","scope":16639,"src":"43032:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16630,"name":"string","nodeType":"ElementaryTypeName","src":"43032:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16634,"mutability":"mutable","name":"values","nameLocation":"43077:6:16","nodeType":"VariableDeclaration","scope":16639,"src":"43058:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"43058:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16633,"nodeType":"ArrayTypeName","src":"43058:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"43004:80:16"},"returnParameters":{"id":16638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16637,"mutability":"mutable","name":"json","nameLocation":"43133:4:16","nodeType":"VariableDeclaration","scope":16639,"src":"43119:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16636,"name":"string","nodeType":"ElementaryTypeName","src":"43119:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43118:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16651,"nodeType":"FunctionDefinition","src":"43174:153:16","nodes":[],"documentation":{"id":16640,"nodeType":"StructuredDocumentation","src":"43145:24:16","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"43183:14:16","parameters":{"id":16647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16642,"mutability":"mutable","name":"objectKey","nameLocation":"43214:9:16","nodeType":"VariableDeclaration","scope":16651,"src":"43198:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16641,"name":"string","nodeType":"ElementaryTypeName","src":"43198:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16644,"mutability":"mutable","name":"valueKey","nameLocation":"43241:8:16","nodeType":"VariableDeclaration","scope":16651,"src":"43225:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16643,"name":"string","nodeType":"ElementaryTypeName","src":"43225:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16646,"mutability":"mutable","name":"value","nameLocation":"43266:5:16","nodeType":"VariableDeclaration","scope":16651,"src":"43251:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16645,"name":"bytes","nodeType":"ElementaryTypeName","src":"43251:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43197:75:16"},"returnParameters":{"id":16650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16649,"mutability":"mutable","name":"json","nameLocation":"43321:4:16","nodeType":"VariableDeclaration","scope":16651,"src":"43307:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16648,"name":"string","nodeType":"ElementaryTypeName","src":"43307:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43306:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16664,"nodeType":"FunctionDefinition","src":"43362:156:16","nodes":[],"documentation":{"id":16652,"nodeType":"StructuredDocumentation","src":"43333:24:16","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"43371:14:16","parameters":{"id":16660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16654,"mutability":"mutable","name":"objectKey","nameLocation":"43402:9:16","nodeType":"VariableDeclaration","scope":16664,"src":"43386:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16653,"name":"string","nodeType":"ElementaryTypeName","src":"43386:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16656,"mutability":"mutable","name":"valueKey","nameLocation":"43429:8:16","nodeType":"VariableDeclaration","scope":16664,"src":"43413:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16655,"name":"string","nodeType":"ElementaryTypeName","src":"43413:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16659,"mutability":"mutable","name":"values","nameLocation":"43456:6:16","nodeType":"VariableDeclaration","scope":16664,"src":"43439:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16657,"name":"bytes","nodeType":"ElementaryTypeName","src":"43439:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16658,"nodeType":"ArrayTypeName","src":"43439:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"43385:78:16"},"returnParameters":{"id":16663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16662,"mutability":"mutable","name":"json","nameLocation":"43512:4:16","nodeType":"VariableDeclaration","scope":16664,"src":"43498:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16661,"name":"string","nodeType":"ElementaryTypeName","src":"43498:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43497:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16676,"nodeType":"FunctionDefinition","src":"43553:143:16","nodes":[],"documentation":{"id":16665,"nodeType":"StructuredDocumentation","src":"43524:24:16","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"43562:12:16","parameters":{"id":16672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16667,"mutability":"mutable","name":"objectKey","nameLocation":"43591:9:16","nodeType":"VariableDeclaration","scope":16676,"src":"43575:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16666,"name":"string","nodeType":"ElementaryTypeName","src":"43575:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16669,"mutability":"mutable","name":"valueKey","nameLocation":"43618:8:16","nodeType":"VariableDeclaration","scope":16676,"src":"43602:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16668,"name":"string","nodeType":"ElementaryTypeName","src":"43602:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16671,"mutability":"mutable","name":"value","nameLocation":"43635:5:16","nodeType":"VariableDeclaration","scope":16676,"src":"43628:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16670,"name":"int256","nodeType":"ElementaryTypeName","src":"43628:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"43574:67:16"},"returnParameters":{"id":16675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16674,"mutability":"mutable","name":"json","nameLocation":"43690:4:16","nodeType":"VariableDeclaration","scope":16676,"src":"43676:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16673,"name":"string","nodeType":"ElementaryTypeName","src":"43676:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43675:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16689,"nodeType":"FunctionDefinition","src":"43731:155:16","nodes":[],"documentation":{"id":16677,"nodeType":"StructuredDocumentation","src":"43702:24:16","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"43740:12:16","parameters":{"id":16685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16679,"mutability":"mutable","name":"objectKey","nameLocation":"43769:9:16","nodeType":"VariableDeclaration","scope":16689,"src":"43753:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16678,"name":"string","nodeType":"ElementaryTypeName","src":"43753:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16681,"mutability":"mutable","name":"valueKey","nameLocation":"43796:8:16","nodeType":"VariableDeclaration","scope":16689,"src":"43780:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16680,"name":"string","nodeType":"ElementaryTypeName","src":"43780:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16684,"mutability":"mutable","name":"values","nameLocation":"43824:6:16","nodeType":"VariableDeclaration","scope":16689,"src":"43806:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16682,"name":"int256","nodeType":"ElementaryTypeName","src":"43806:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16683,"nodeType":"ArrayTypeName","src":"43806:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"43752:79:16"},"returnParameters":{"id":16688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16687,"mutability":"mutable","name":"json","nameLocation":"43880:4:16","nodeType":"VariableDeclaration","scope":16689,"src":"43866:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16686,"name":"string","nodeType":"ElementaryTypeName","src":"43866:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43865:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16699,"nodeType":"FunctionDefinition","src":"44083:111:16","nodes":[],"documentation":{"id":16690,"nodeType":"StructuredDocumentation","src":"43892:186:16","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"44092:13:16","parameters":{"id":16695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16692,"mutability":"mutable","name":"objectKey","nameLocation":"44122:9:16","nodeType":"VariableDeclaration","scope":16699,"src":"44106:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16691,"name":"string","nodeType":"ElementaryTypeName","src":"44106:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16694,"mutability":"mutable","name":"value","nameLocation":"44149:5:16","nodeType":"VariableDeclaration","scope":16699,"src":"44133:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16693,"name":"string","nodeType":"ElementaryTypeName","src":"44133:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44105:50:16"},"returnParameters":{"id":16698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16697,"mutability":"mutable","name":"json","nameLocation":"44188:4:16","nodeType":"VariableDeclaration","scope":16699,"src":"44174:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16696,"name":"string","nodeType":"ElementaryTypeName","src":"44174:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44173:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16709,"nodeType":"FunctionDefinition","src":"44229:149:16","nodes":[],"documentation":{"id":16700,"nodeType":"StructuredDocumentation","src":"44200:24:16","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"44238:17:16","parameters":{"id":16705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16702,"mutability":"mutable","name":"typeDescription","nameLocation":"44272:15:16","nodeType":"VariableDeclaration","scope":16709,"src":"44256:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16701,"name":"string","nodeType":"ElementaryTypeName","src":"44256:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16704,"mutability":"mutable","name":"value","nameLocation":"44304:5:16","nodeType":"VariableDeclaration","scope":16709,"src":"44289:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16703,"name":"bytes","nodeType":"ElementaryTypeName","src":"44289:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44255:55:16"},"returnParameters":{"id":16708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16707,"mutability":"mutable","name":"json","nameLocation":"44372:4:16","nodeType":"VariableDeclaration","scope":16709,"src":"44358:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16706,"name":"string","nodeType":"ElementaryTypeName","src":"44358:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44357:20:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16723,"nodeType":"FunctionDefinition","src":"44413:211:16","nodes":[],"documentation":{"id":16710,"nodeType":"StructuredDocumentation","src":"44384:24:16","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"44422:17:16","parameters":{"id":16719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16712,"mutability":"mutable","name":"objectKey","nameLocation":"44465:9:16","nodeType":"VariableDeclaration","scope":16723,"src":"44449:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16711,"name":"string","nodeType":"ElementaryTypeName","src":"44449:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16714,"mutability":"mutable","name":"valueKey","nameLocation":"44500:8:16","nodeType":"VariableDeclaration","scope":16723,"src":"44484:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16713,"name":"string","nodeType":"ElementaryTypeName","src":"44484:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16716,"mutability":"mutable","name":"typeDescription","nameLocation":"44534:15:16","nodeType":"VariableDeclaration","scope":16723,"src":"44518:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16715,"name":"string","nodeType":"ElementaryTypeName","src":"44518:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16718,"mutability":"mutable","name":"value","nameLocation":"44574:5:16","nodeType":"VariableDeclaration","scope":16723,"src":"44559:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16717,"name":"bytes","nodeType":"ElementaryTypeName","src":"44559:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44439:146:16"},"returnParameters":{"id":16722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16721,"mutability":"mutable","name":"json","nameLocation":"44618:4:16","nodeType":"VariableDeclaration","scope":16723,"src":"44604:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16720,"name":"string","nodeType":"ElementaryTypeName","src":"44604:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44603:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16735,"nodeType":"FunctionDefinition","src":"44659:155:16","nodes":[],"documentation":{"id":16724,"nodeType":"StructuredDocumentation","src":"44630:24:16","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"44668:15:16","parameters":{"id":16731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16726,"mutability":"mutable","name":"objectKey","nameLocation":"44700:9:16","nodeType":"VariableDeclaration","scope":16735,"src":"44684:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16725,"name":"string","nodeType":"ElementaryTypeName","src":"44684:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16728,"mutability":"mutable","name":"valueKey","nameLocation":"44727:8:16","nodeType":"VariableDeclaration","scope":16735,"src":"44711:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16727,"name":"string","nodeType":"ElementaryTypeName","src":"44711:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16730,"mutability":"mutable","name":"value","nameLocation":"44753:5:16","nodeType":"VariableDeclaration","scope":16735,"src":"44737:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16729,"name":"string","nodeType":"ElementaryTypeName","src":"44737:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44683:76:16"},"returnParameters":{"id":16734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16733,"mutability":"mutable","name":"json","nameLocation":"44808:4:16","nodeType":"VariableDeclaration","scope":16735,"src":"44794:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16732,"name":"string","nodeType":"ElementaryTypeName","src":"44794:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44793:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16748,"nodeType":"FunctionDefinition","src":"44849:158:16","nodes":[],"documentation":{"id":16736,"nodeType":"StructuredDocumentation","src":"44820:24:16","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"44858:15:16","parameters":{"id":16744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16738,"mutability":"mutable","name":"objectKey","nameLocation":"44890:9:16","nodeType":"VariableDeclaration","scope":16748,"src":"44874:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16737,"name":"string","nodeType":"ElementaryTypeName","src":"44874:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16740,"mutability":"mutable","name":"valueKey","nameLocation":"44917:8:16","nodeType":"VariableDeclaration","scope":16748,"src":"44901:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16739,"name":"string","nodeType":"ElementaryTypeName","src":"44901:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16743,"mutability":"mutable","name":"values","nameLocation":"44945:6:16","nodeType":"VariableDeclaration","scope":16748,"src":"44927:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16741,"name":"string","nodeType":"ElementaryTypeName","src":"44927:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16742,"nodeType":"ArrayTypeName","src":"44927:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"44873:79:16"},"returnParameters":{"id":16747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16746,"mutability":"mutable","name":"json","nameLocation":"45001:4:16","nodeType":"VariableDeclaration","scope":16748,"src":"44987:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16745,"name":"string","nodeType":"ElementaryTypeName","src":"44987:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44986:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16760,"nodeType":"FunctionDefinition","src":"45042:150:16","nodes":[],"documentation":{"id":16749,"nodeType":"StructuredDocumentation","src":"45013:24:16","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"45051:18:16","parameters":{"id":16756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16751,"mutability":"mutable","name":"objectKey","nameLocation":"45086:9:16","nodeType":"VariableDeclaration","scope":16760,"src":"45070:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16750,"name":"string","nodeType":"ElementaryTypeName","src":"45070:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16753,"mutability":"mutable","name":"valueKey","nameLocation":"45113:8:16","nodeType":"VariableDeclaration","scope":16760,"src":"45097:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16752,"name":"string","nodeType":"ElementaryTypeName","src":"45097:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16755,"mutability":"mutable","name":"value","nameLocation":"45131:5:16","nodeType":"VariableDeclaration","scope":16760,"src":"45123:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16754,"name":"uint256","nodeType":"ElementaryTypeName","src":"45123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45069:68:16"},"returnParameters":{"id":16759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16758,"mutability":"mutable","name":"json","nameLocation":"45186:4:16","nodeType":"VariableDeclaration","scope":16760,"src":"45172:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16757,"name":"string","nodeType":"ElementaryTypeName","src":"45172:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45171:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16772,"nodeType":"FunctionDefinition","src":"45227:145:16","nodes":[],"documentation":{"id":16761,"nodeType":"StructuredDocumentation","src":"45198:24:16","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"45236:13:16","parameters":{"id":16768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16763,"mutability":"mutable","name":"objectKey","nameLocation":"45266:9:16","nodeType":"VariableDeclaration","scope":16772,"src":"45250:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16762,"name":"string","nodeType":"ElementaryTypeName","src":"45250:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16765,"mutability":"mutable","name":"valueKey","nameLocation":"45293:8:16","nodeType":"VariableDeclaration","scope":16772,"src":"45277:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16764,"name":"string","nodeType":"ElementaryTypeName","src":"45277:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16767,"mutability":"mutable","name":"value","nameLocation":"45311:5:16","nodeType":"VariableDeclaration","scope":16772,"src":"45303:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16766,"name":"uint256","nodeType":"ElementaryTypeName","src":"45303:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45249:68:16"},"returnParameters":{"id":16771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16770,"mutability":"mutable","name":"json","nameLocation":"45366:4:16","nodeType":"VariableDeclaration","scope":16772,"src":"45352:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16769,"name":"string","nodeType":"ElementaryTypeName","src":"45352:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45351:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16785,"nodeType":"FunctionDefinition","src":"45407:157:16","nodes":[],"documentation":{"id":16773,"nodeType":"StructuredDocumentation","src":"45378:24:16","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"45416:13:16","parameters":{"id":16781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16775,"mutability":"mutable","name":"objectKey","nameLocation":"45446:9:16","nodeType":"VariableDeclaration","scope":16785,"src":"45430:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16774,"name":"string","nodeType":"ElementaryTypeName","src":"45430:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16777,"mutability":"mutable","name":"valueKey","nameLocation":"45473:8:16","nodeType":"VariableDeclaration","scope":16785,"src":"45457:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16776,"name":"string","nodeType":"ElementaryTypeName","src":"45457:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16780,"mutability":"mutable","name":"values","nameLocation":"45502:6:16","nodeType":"VariableDeclaration","scope":16785,"src":"45483:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16778,"name":"uint256","nodeType":"ElementaryTypeName","src":"45483:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16779,"nodeType":"ArrayTypeName","src":"45483:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"45429:80:16"},"returnParameters":{"id":16784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16783,"mutability":"mutable","name":"json","nameLocation":"45558:4:16","nodeType":"VariableDeclaration","scope":16785,"src":"45544:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16782,"name":"string","nodeType":"ElementaryTypeName","src":"45544:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45543:20:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16793,"nodeType":"FunctionDefinition","src":"45664:72:16","nodes":[],"documentation":{"id":16786,"nodeType":"StructuredDocumentation","src":"45570:89:16","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"45673:9:16","parameters":{"id":16791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16788,"mutability":"mutable","name":"json","nameLocation":"45699:4:16","nodeType":"VariableDeclaration","scope":16793,"src":"45683:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16787,"name":"string","nodeType":"ElementaryTypeName","src":"45683:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16790,"mutability":"mutable","name":"path","nameLocation":"45721:4:16","nodeType":"VariableDeclaration","scope":16793,"src":"45705:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16789,"name":"string","nodeType":"ElementaryTypeName","src":"45705:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45682:44:16"},"returnParameters":{"id":16792,"nodeType":"ParameterList","parameters":[],"src":"45735:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16803,"nodeType":"FunctionDefinition","src":"45962:98:16","nodes":[],"documentation":{"id":16794,"nodeType":"StructuredDocumentation","src":"45742:215:16","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"45971:9:16","parameters":{"id":16801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16796,"mutability":"mutable","name":"json","nameLocation":"45997:4:16","nodeType":"VariableDeclaration","scope":16803,"src":"45981:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16795,"name":"string","nodeType":"ElementaryTypeName","src":"45981:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16798,"mutability":"mutable","name":"path","nameLocation":"46019:4:16","nodeType":"VariableDeclaration","scope":16803,"src":"46003:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16797,"name":"string","nodeType":"ElementaryTypeName","src":"46003:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16800,"mutability":"mutable","name":"valueKey","nameLocation":"46041:8:16","nodeType":"VariableDeclaration","scope":16803,"src":"46025:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16799,"name":"string","nodeType":"ElementaryTypeName","src":"46025:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45980:70:16"},"returnParameters":{"id":16802,"nodeType":"ParameterList","parameters":[],"src":"46059:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16813,"nodeType":"FunctionDefinition","src":"46222:91:16","nodes":[],"documentation":{"id":16804,"nodeType":"StructuredDocumentation","src":"46066:151:16","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"46231:9:16","parameters":{"id":16809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16806,"mutability":"mutable","name":"json","nameLocation":"46257:4:16","nodeType":"VariableDeclaration","scope":16813,"src":"46241:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16805,"name":"string","nodeType":"ElementaryTypeName","src":"46241:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16808,"mutability":"mutable","name":"key","nameLocation":"46279:3:16","nodeType":"VariableDeclaration","scope":16813,"src":"46263:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16807,"name":"string","nodeType":"ElementaryTypeName","src":"46263:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46240:43:16"},"returnParameters":{"id":16812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16813,"src":"46307:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16810,"name":"bool","nodeType":"ElementaryTypeName","src":"46307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46306:6:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16819,"nodeType":"FunctionDefinition","src":"46424:63:16","nodes":[],"documentation":{"id":16814,"nodeType":"StructuredDocumentation","src":"46355:64:16","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"46433:23:16","parameters":{"id":16817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16816,"mutability":"mutable","name":"data","nameLocation":"46472:4:16","nodeType":"VariableDeclaration","scope":16819,"src":"46457:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16815,"name":"bytes","nodeType":"ElementaryTypeName","src":"46457:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46456:21:16"},"returnParameters":{"id":16818,"nodeType":"ParameterList","parameters":[],"src":"46486:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16823,"nodeType":"FunctionDefinition","src":"46990:30:16","nodes":[],"documentation":{"id":16820,"nodeType":"StructuredDocumentation","src":"46493:492:16","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"46999:9:16","parameters":{"id":16821,"nodeType":"ParameterList","parameters":[],"src":"47008:2:16"},"returnParameters":{"id":16822,"nodeType":"ParameterList","parameters":[],"src":"47019:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16829,"nodeType":"FunctionDefinition","src":"47190:44:16","nodes":[],"documentation":{"id":16824,"nodeType":"StructuredDocumentation","src":"47026:159:16","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"47199:9:16","parameters":{"id":16827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16826,"mutability":"mutable","name":"signer","nameLocation":"47217:6:16","nodeType":"VariableDeclaration","scope":16829,"src":"47209:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16825,"name":"address","nodeType":"ElementaryTypeName","src":"47209:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47208:16:16"},"returnParameters":{"id":16828,"nodeType":"ParameterList","parameters":[],"src":"47233:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16835,"nodeType":"FunctionDefinition","src":"47408:48:16","nodes":[],"documentation":{"id":16830,"nodeType":"StructuredDocumentation","src":"47240:163:16","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"47417:9:16","parameters":{"id":16833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16832,"mutability":"mutable","name":"privateKey","nameLocation":"47435:10:16","nodeType":"VariableDeclaration","scope":16835,"src":"47427:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16831,"name":"uint256","nodeType":"ElementaryTypeName","src":"47427:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47426:20:16"},"returnParameters":{"id":16834,"nodeType":"ParameterList","parameters":[],"src":"47455:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16842,"nodeType":"FunctionDefinition","src":"47545:72:16","nodes":[],"documentation":{"id":16836,"nodeType":"StructuredDocumentation","src":"47462:78:16","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"7c49aa1f","implemented":false,"kind":"function","modifiers":[],"name":"getScriptWallets","nameLocation":"47554:16:16","parameters":{"id":16837,"nodeType":"ParameterList","parameters":[],"src":"47570:2:16"},"returnParameters":{"id":16841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16840,"mutability":"mutable","name":"wallets","nameLocation":"47608:7:16","nodeType":"VariableDeclaration","scope":16842,"src":"47591:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16838,"name":"address","nodeType":"ElementaryTypeName","src":"47591:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16839,"nodeType":"ArrayTypeName","src":"47591:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"47590:26:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16846,"nodeType":"FunctionDefinition","src":"48127:35:16","nodes":[],"documentation":{"id":16843,"nodeType":"StructuredDocumentation","src":"47623:499:16","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"48136:14:16","parameters":{"id":16844,"nodeType":"ParameterList","parameters":[],"src":"48150:2:16"},"returnParameters":{"id":16845,"nodeType":"ParameterList","parameters":[],"src":"48161:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16852,"nodeType":"FunctionDefinition","src":"48324:49:16","nodes":[],"documentation":{"id":16847,"nodeType":"StructuredDocumentation","src":"48168:151:16","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"48333:14:16","parameters":{"id":16850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16849,"mutability":"mutable","name":"signer","nameLocation":"48356:6:16","nodeType":"VariableDeclaration","scope":16852,"src":"48348:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16848,"name":"address","nodeType":"ElementaryTypeName","src":"48348:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48347:16:16"},"returnParameters":{"id":16851,"nodeType":"ParameterList","parameters":[],"src":"48372:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16858,"nodeType":"FunctionDefinition","src":"48539:53:16","nodes":[],"documentation":{"id":16853,"nodeType":"StructuredDocumentation","src":"48379:155:16","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"48548:14:16","parameters":{"id":16856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16855,"mutability":"mutable","name":"privateKey","nameLocation":"48571:10:16","nodeType":"VariableDeclaration","scope":16858,"src":"48563:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16854,"name":"uint256","nodeType":"ElementaryTypeName","src":"48563:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48562:20:16"},"returnParameters":{"id":16857,"nodeType":"ParameterList","parameters":[],"src":"48591:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16862,"nodeType":"FunctionDefinition","src":"48645:34:16","nodes":[],"documentation":{"id":16859,"nodeType":"StructuredDocumentation","src":"48598:42:16","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"48654:13:16","parameters":{"id":16860,"nodeType":"ParameterList","parameters":[],"src":"48667:2:16"},"returnParameters":{"id":16861,"nodeType":"ParameterList","parameters":[],"src":"48678:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16869,"nodeType":"FunctionDefinition","src":"48768:66:16","nodes":[],"documentation":{"id":16863,"nodeType":"StructuredDocumentation","src":"48685:78:16","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"48777:10:16","parameters":{"id":16864,"nodeType":"ParameterList","parameters":[],"src":"48787:2:16"},"returnParameters":{"id":16868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16867,"mutability":"mutable","name":"wallets","nameLocation":"48825:7:16","nodeType":"VariableDeclaration","scope":16869,"src":"48808:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16865,"name":"address","nodeType":"ElementaryTypeName","src":"48808:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16866,"nodeType":"ArrayTypeName","src":"48808:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"48807:26:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16879,"nodeType":"FunctionDefinition","src":"49083:93:16","nodes":[],"documentation":{"id":16870,"nodeType":"StructuredDocumentation","src":"48873:205:16","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"49092:7:16","parameters":{"id":16875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16872,"mutability":"mutable","name":"input","nameLocation":"49116:5:16","nodeType":"VariableDeclaration","scope":16879,"src":"49100:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16871,"name":"string","nodeType":"ElementaryTypeName","src":"49100:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16874,"mutability":"mutable","name":"key","nameLocation":"49139:3:16","nodeType":"VariableDeclaration","scope":16879,"src":"49123:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16873,"name":"string","nodeType":"ElementaryTypeName","src":"49123:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49099:44:16"},"returnParameters":{"id":16878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16879,"src":"49167:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16876,"name":"uint256","nodeType":"ElementaryTypeName","src":"49167:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49166:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16887,"nodeType":"FunctionDefinition","src":"49235:100:16","nodes":[],"documentation":{"id":16880,"nodeType":"StructuredDocumentation","src":"49182:48:16","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"49244:12:16","parameters":{"id":16883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16882,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49273:16:16","nodeType":"VariableDeclaration","scope":16887,"src":"49257:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16881,"name":"string","nodeType":"ElementaryTypeName","src":"49257:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49256:34:16"},"returnParameters":{"id":16886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16885,"mutability":"mutable","name":"parsedValue","nameLocation":"49322:11:16","nodeType":"VariableDeclaration","scope":16887,"src":"49314:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16884,"name":"address","nodeType":"ElementaryTypeName","src":"49314:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"49313:21:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16895,"nodeType":"FunctionDefinition","src":"49390:94:16","nodes":[],"documentation":{"id":16888,"nodeType":"StructuredDocumentation","src":"49341:44:16","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"49399:9:16","parameters":{"id":16891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16890,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49425:16:16","nodeType":"VariableDeclaration","scope":16895,"src":"49409:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16889,"name":"string","nodeType":"ElementaryTypeName","src":"49409:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49408:34:16"},"returnParameters":{"id":16894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16893,"mutability":"mutable","name":"parsedValue","nameLocation":"49471:11:16","nodeType":"VariableDeclaration","scope":16895,"src":"49466:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16892,"name":"bool","nodeType":"ElementaryTypeName","src":"49466:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"49465:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16903,"nodeType":"FunctionDefinition","src":"49538:103:16","nodes":[],"documentation":{"id":16896,"nodeType":"StructuredDocumentation","src":"49490:43:16","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"49547:10:16","parameters":{"id":16899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16898,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49574:16:16","nodeType":"VariableDeclaration","scope":16903,"src":"49558:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16897,"name":"string","nodeType":"ElementaryTypeName","src":"49558:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49557:34:16"},"returnParameters":{"id":16902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16901,"mutability":"mutable","name":"parsedValue","nameLocation":"49628:11:16","nodeType":"VariableDeclaration","scope":16903,"src":"49615:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16900,"name":"bytes","nodeType":"ElementaryTypeName","src":"49615:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49614:26:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16911,"nodeType":"FunctionDefinition","src":"49699:100:16","nodes":[],"documentation":{"id":16904,"nodeType":"StructuredDocumentation","src":"49647:47:16","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"49708:12:16","parameters":{"id":16907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16906,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49737:16:16","nodeType":"VariableDeclaration","scope":16911,"src":"49721:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16905,"name":"string","nodeType":"ElementaryTypeName","src":"49721:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49720:34:16"},"returnParameters":{"id":16910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16909,"mutability":"mutable","name":"parsedValue","nameLocation":"49786:11:16","nodeType":"VariableDeclaration","scope":16911,"src":"49778:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49778:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"49777:21:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16919,"nodeType":"FunctionDefinition","src":"49856:95:16","nodes":[],"documentation":{"id":16912,"nodeType":"StructuredDocumentation","src":"49805:46:16","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"49865:8:16","parameters":{"id":16915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16914,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49890:16:16","nodeType":"VariableDeclaration","scope":16919,"src":"49874:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16913,"name":"string","nodeType":"ElementaryTypeName","src":"49874:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49873:34:16"},"returnParameters":{"id":16918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16917,"mutability":"mutable","name":"parsedValue","nameLocation":"49938:11:16","nodeType":"VariableDeclaration","scope":16919,"src":"49931:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16916,"name":"int256","nodeType":"ElementaryTypeName","src":"49931:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"49930:20:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16927,"nodeType":"FunctionDefinition","src":"50009:97:16","nodes":[],"documentation":{"id":16920,"nodeType":"StructuredDocumentation","src":"49957:47:16","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"50018:9:16","parameters":{"id":16923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16922,"mutability":"mutable","name":"stringifiedValue","nameLocation":"50044:16:16","nodeType":"VariableDeclaration","scope":16927,"src":"50028:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16921,"name":"string","nodeType":"ElementaryTypeName","src":"50028:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50027:34:16"},"returnParameters":{"id":16926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16925,"mutability":"mutable","name":"parsedValue","nameLocation":"50093:11:16","nodeType":"VariableDeclaration","scope":16927,"src":"50085:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16924,"name":"uint256","nodeType":"ElementaryTypeName","src":"50085:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50084:21:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16939,"nodeType":"FunctionDefinition","src":"50184:151:16","nodes":[],"documentation":{"id":16928,"nodeType":"StructuredDocumentation","src":"50112:67:16","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"50193:7:16","parameters":{"id":16935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16930,"mutability":"mutable","name":"input","nameLocation":"50217:5:16","nodeType":"VariableDeclaration","scope":16939,"src":"50201:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16929,"name":"string","nodeType":"ElementaryTypeName","src":"50201:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16932,"mutability":"mutable","name":"from","nameLocation":"50240:4:16","nodeType":"VariableDeclaration","scope":16939,"src":"50224:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16931,"name":"string","nodeType":"ElementaryTypeName","src":"50224:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16934,"mutability":"mutable","name":"to","nameLocation":"50262:2:16","nodeType":"VariableDeclaration","scope":16939,"src":"50246:18:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16933,"name":"string","nodeType":"ElementaryTypeName","src":"50246:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50200:65:16"},"returnParameters":{"id":16938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16937,"mutability":"mutable","name":"output","nameLocation":"50327:6:16","nodeType":"VariableDeclaration","scope":16939,"src":"50313:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16936,"name":"string","nodeType":"ElementaryTypeName","src":"50313:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50312:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16950,"nodeType":"FunctionDefinition","src":"50428:113:16","nodes":[],"documentation":{"id":16940,"nodeType":"StructuredDocumentation","src":"50341:82:16","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"50437:5:16","parameters":{"id":16945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16942,"mutability":"mutable","name":"input","nameLocation":"50459:5:16","nodeType":"VariableDeclaration","scope":16950,"src":"50443:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16941,"name":"string","nodeType":"ElementaryTypeName","src":"50443:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16944,"mutability":"mutable","name":"delimiter","nameLocation":"50482:9:16","nodeType":"VariableDeclaration","scope":16950,"src":"50466:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16943,"name":"string","nodeType":"ElementaryTypeName","src":"50466:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50442:50:16"},"returnParameters":{"id":16949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16948,"mutability":"mutable","name":"outputs","nameLocation":"50532:7:16","nodeType":"VariableDeclaration","scope":16950,"src":"50516:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16946,"name":"string","nodeType":"ElementaryTypeName","src":"50516:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16947,"nodeType":"ArrayTypeName","src":"50516:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"50515:25:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16958,"nodeType":"FunctionDefinition","src":"50603:89:16","nodes":[],"documentation":{"id":16951,"nodeType":"StructuredDocumentation","src":"50547:51:16","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"50612:11:16","parameters":{"id":16954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16953,"mutability":"mutable","name":"input","nameLocation":"50640:5:16","nodeType":"VariableDeclaration","scope":16958,"src":"50624:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16952,"name":"string","nodeType":"ElementaryTypeName","src":"50624:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50623:23:16"},"returnParameters":{"id":16957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16956,"mutability":"mutable","name":"output","nameLocation":"50684:6:16","nodeType":"VariableDeclaration","scope":16958,"src":"50670:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16955,"name":"string","nodeType":"ElementaryTypeName","src":"50670:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50669:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16966,"nodeType":"FunctionDefinition","src":"50746:88:16","nodes":[],"documentation":{"id":16959,"nodeType":"StructuredDocumentation","src":"50698:43:16","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"50755:8:16","parameters":{"id":16962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16961,"mutability":"mutable","name":"value","nameLocation":"50772:5:16","nodeType":"VariableDeclaration","scope":16966,"src":"50764:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16960,"name":"address","nodeType":"ElementaryTypeName","src":"50764:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"50763:15:16"},"returnParameters":{"id":16965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16964,"mutability":"mutable","name":"stringifiedValue","nameLocation":"50816:16:16","nodeType":"VariableDeclaration","scope":16966,"src":"50802:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16963,"name":"string","nodeType":"ElementaryTypeName","src":"50802:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50801:32:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16974,"nodeType":"FunctionDefinition","src":"50888:95:16","nodes":[],"documentation":{"id":16967,"nodeType":"StructuredDocumentation","src":"50840:43:16","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"50897:8:16","parameters":{"id":16970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16969,"mutability":"mutable","name":"value","nameLocation":"50921:5:16","nodeType":"VariableDeclaration","scope":16974,"src":"50906:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16968,"name":"bytes","nodeType":"ElementaryTypeName","src":"50906:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"50905:22:16"},"returnParameters":{"id":16973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16972,"mutability":"mutable","name":"stringifiedValue","nameLocation":"50965:16:16","nodeType":"VariableDeclaration","scope":16974,"src":"50951:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16971,"name":"string","nodeType":"ElementaryTypeName","src":"50951:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50950:32:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16982,"nodeType":"FunctionDefinition","src":"51037:88:16","nodes":[],"documentation":{"id":16975,"nodeType":"StructuredDocumentation","src":"50989:43:16","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"51046:8:16","parameters":{"id":16978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16977,"mutability":"mutable","name":"value","nameLocation":"51063:5:16","nodeType":"VariableDeclaration","scope":16982,"src":"51055:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51055:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"51054:15:16"},"returnParameters":{"id":16981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16980,"mutability":"mutable","name":"stringifiedValue","nameLocation":"51107:16:16","nodeType":"VariableDeclaration","scope":16982,"src":"51093:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16979,"name":"string","nodeType":"ElementaryTypeName","src":"51093:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51092:32:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16990,"nodeType":"FunctionDefinition","src":"51179:85:16","nodes":[],"documentation":{"id":16983,"nodeType":"StructuredDocumentation","src":"51131:43:16","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"51188:8:16","parameters":{"id":16986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16985,"mutability":"mutable","name":"value","nameLocation":"51202:5:16","nodeType":"VariableDeclaration","scope":16990,"src":"51197:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16984,"name":"bool","nodeType":"ElementaryTypeName","src":"51197:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"51196:12:16"},"returnParameters":{"id":16989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16988,"mutability":"mutable","name":"stringifiedValue","nameLocation":"51246:16:16","nodeType":"VariableDeclaration","scope":16990,"src":"51232:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16987,"name":"string","nodeType":"ElementaryTypeName","src":"51232:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51231:32:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16998,"nodeType":"FunctionDefinition","src":"51318:88:16","nodes":[],"documentation":{"id":16991,"nodeType":"StructuredDocumentation","src":"51270:43:16","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"51327:8:16","parameters":{"id":16994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16993,"mutability":"mutable","name":"value","nameLocation":"51344:5:16","nodeType":"VariableDeclaration","scope":16998,"src":"51336:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16992,"name":"uint256","nodeType":"ElementaryTypeName","src":"51336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51335:15:16"},"returnParameters":{"id":16997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16996,"mutability":"mutable","name":"stringifiedValue","nameLocation":"51388:16:16","nodeType":"VariableDeclaration","scope":16998,"src":"51374:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16995,"name":"string","nodeType":"ElementaryTypeName","src":"51374:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51373:32:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17006,"nodeType":"FunctionDefinition","src":"51460:87:16","nodes":[],"documentation":{"id":16999,"nodeType":"StructuredDocumentation","src":"51412:43:16","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"51469:8:16","parameters":{"id":17002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17001,"mutability":"mutable","name":"value","nameLocation":"51485:5:16","nodeType":"VariableDeclaration","scope":17006,"src":"51478:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17000,"name":"int256","nodeType":"ElementaryTypeName","src":"51478:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"51477:14:16"},"returnParameters":{"id":17005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17004,"mutability":"mutable","name":"stringifiedValue","nameLocation":"51529:16:16","nodeType":"VariableDeclaration","scope":17006,"src":"51515:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17003,"name":"string","nodeType":"ElementaryTypeName","src":"51515:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51514:32:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17014,"nodeType":"FunctionDefinition","src":"51609:89:16","nodes":[],"documentation":{"id":17007,"nodeType":"StructuredDocumentation","src":"51553:51:16","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"51618:11:16","parameters":{"id":17010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17009,"mutability":"mutable","name":"input","nameLocation":"51646:5:16","nodeType":"VariableDeclaration","scope":17014,"src":"51630:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17008,"name":"string","nodeType":"ElementaryTypeName","src":"51630:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51629:23:16"},"returnParameters":{"id":17013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17012,"mutability":"mutable","name":"output","nameLocation":"51690:6:16","nodeType":"VariableDeclaration","scope":17014,"src":"51676:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17011,"name":"string","nodeType":"ElementaryTypeName","src":"51676:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51675:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17022,"nodeType":"FunctionDefinition","src":"51781:82:16","nodes":[],"documentation":{"id":17015,"nodeType":"StructuredDocumentation","src":"51704:72:16","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"51790:4:16","parameters":{"id":17018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17017,"mutability":"mutable","name":"input","nameLocation":"51811:5:16","nodeType":"VariableDeclaration","scope":17022,"src":"51795:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17016,"name":"string","nodeType":"ElementaryTypeName","src":"51795:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51794:23:16"},"returnParameters":{"id":17021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17020,"mutability":"mutable","name":"output","nameLocation":"51855:6:16","nodeType":"VariableDeclaration","scope":17022,"src":"51841:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17019,"name":"string","nodeType":"ElementaryTypeName","src":"51841:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51840:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17034,"nodeType":"FunctionDefinition","src":"52058:113:16","nodes":[],"documentation":{"id":17023,"nodeType":"StructuredDocumentation","src":"51903:150:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"52067:24:16","parameters":{"id":17032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17025,"mutability":"mutable","name":"left","nameLocation":"52100:4:16","nodeType":"VariableDeclaration","scope":17034,"src":"52092:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17024,"name":"uint256","nodeType":"ElementaryTypeName","src":"52092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17027,"mutability":"mutable","name":"right","nameLocation":"52114:5:16","nodeType":"VariableDeclaration","scope":17034,"src":"52106:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17026,"name":"uint256","nodeType":"ElementaryTypeName","src":"52106:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17029,"mutability":"mutable","name":"maxDelta","nameLocation":"52129:8:16","nodeType":"VariableDeclaration","scope":17034,"src":"52121:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17028,"name":"uint256","nodeType":"ElementaryTypeName","src":"52121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17031,"mutability":"mutable","name":"decimals","nameLocation":"52147:8:16","nodeType":"VariableDeclaration","scope":17034,"src":"52139:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17030,"name":"uint256","nodeType":"ElementaryTypeName","src":"52139:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52091:65:16"},"returnParameters":{"id":17033,"nodeType":"ParameterList","parameters":[],"src":"52170:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17048,"nodeType":"FunctionDefinition","src":"52386:182:16","nodes":[],"documentation":{"id":17035,"nodeType":"StructuredDocumentation","src":"52177:204:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"52395:24:16","parameters":{"id":17046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17037,"mutability":"mutable","name":"left","nameLocation":"52437:4:16","nodeType":"VariableDeclaration","scope":17048,"src":"52429:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17036,"name":"uint256","nodeType":"ElementaryTypeName","src":"52429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17039,"mutability":"mutable","name":"right","nameLocation":"52459:5:16","nodeType":"VariableDeclaration","scope":17048,"src":"52451:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17038,"name":"uint256","nodeType":"ElementaryTypeName","src":"52451:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17041,"mutability":"mutable","name":"maxDelta","nameLocation":"52482:8:16","nodeType":"VariableDeclaration","scope":17048,"src":"52474:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17040,"name":"uint256","nodeType":"ElementaryTypeName","src":"52474:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17043,"mutability":"mutable","name":"decimals","nameLocation":"52508:8:16","nodeType":"VariableDeclaration","scope":17048,"src":"52500:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17042,"name":"uint256","nodeType":"ElementaryTypeName","src":"52500:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17045,"mutability":"mutable","name":"error","nameLocation":"52542:5:16","nodeType":"VariableDeclaration","scope":17048,"src":"52526:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17044,"name":"string","nodeType":"ElementaryTypeName","src":"52526:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52419:134:16"},"returnParameters":{"id":17047,"nodeType":"ParameterList","parameters":[],"src":"52567:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17060,"nodeType":"FunctionDefinition","src":"52728:111:16","nodes":[],"documentation":{"id":17049,"nodeType":"StructuredDocumentation","src":"52574:149:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"52737:24:16","parameters":{"id":17058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17051,"mutability":"mutable","name":"left","nameLocation":"52769:4:16","nodeType":"VariableDeclaration","scope":17060,"src":"52762:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17050,"name":"int256","nodeType":"ElementaryTypeName","src":"52762:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17053,"mutability":"mutable","name":"right","nameLocation":"52782:5:16","nodeType":"VariableDeclaration","scope":17060,"src":"52775:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17052,"name":"int256","nodeType":"ElementaryTypeName","src":"52775:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17055,"mutability":"mutable","name":"maxDelta","nameLocation":"52797:8:16","nodeType":"VariableDeclaration","scope":17060,"src":"52789:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17054,"name":"uint256","nodeType":"ElementaryTypeName","src":"52789:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17057,"mutability":"mutable","name":"decimals","nameLocation":"52815:8:16","nodeType":"VariableDeclaration","scope":17060,"src":"52807:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17056,"name":"uint256","nodeType":"ElementaryTypeName","src":"52807:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52761:63:16"},"returnParameters":{"id":17059,"nodeType":"ParameterList","parameters":[],"src":"52838:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17074,"nodeType":"FunctionDefinition","src":"53053:180:16","nodes":[],"documentation":{"id":17061,"nodeType":"StructuredDocumentation","src":"52845:203:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"53062:24:16","parameters":{"id":17072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17063,"mutability":"mutable","name":"left","nameLocation":"53103:4:16","nodeType":"VariableDeclaration","scope":17074,"src":"53096:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17062,"name":"int256","nodeType":"ElementaryTypeName","src":"53096:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17065,"mutability":"mutable","name":"right","nameLocation":"53124:5:16","nodeType":"VariableDeclaration","scope":17074,"src":"53117:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17064,"name":"int256","nodeType":"ElementaryTypeName","src":"53117:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17067,"mutability":"mutable","name":"maxDelta","nameLocation":"53147:8:16","nodeType":"VariableDeclaration","scope":17074,"src":"53139:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17066,"name":"uint256","nodeType":"ElementaryTypeName","src":"53139:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17069,"mutability":"mutable","name":"decimals","nameLocation":"53173:8:16","nodeType":"VariableDeclaration","scope":17074,"src":"53165:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17068,"name":"uint256","nodeType":"ElementaryTypeName","src":"53165:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17071,"mutability":"mutable","name":"error","nameLocation":"53207:5:16","nodeType":"VariableDeclaration","scope":17074,"src":"53191:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17070,"name":"string","nodeType":"ElementaryTypeName","src":"53191:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53086:132:16"},"returnParameters":{"id":17073,"nodeType":"ParameterList","parameters":[],"src":"53232:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17084,"nodeType":"FunctionDefinition","src":"53337:88:16","nodes":[],"documentation":{"id":17075,"nodeType":"StructuredDocumentation","src":"53239:93:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"53346:17:16","parameters":{"id":17082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17077,"mutability":"mutable","name":"left","nameLocation":"53372:4:16","nodeType":"VariableDeclaration","scope":17084,"src":"53364:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17076,"name":"uint256","nodeType":"ElementaryTypeName","src":"53364:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17079,"mutability":"mutable","name":"right","nameLocation":"53386:5:16","nodeType":"VariableDeclaration","scope":17084,"src":"53378:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17078,"name":"uint256","nodeType":"ElementaryTypeName","src":"53378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17081,"mutability":"mutable","name":"maxDelta","nameLocation":"53401:8:16","nodeType":"VariableDeclaration","scope":17084,"src":"53393:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17080,"name":"uint256","nodeType":"ElementaryTypeName","src":"53393:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53363:47:16"},"returnParameters":{"id":17083,"nodeType":"ParameterList","parameters":[],"src":"53424:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17096,"nodeType":"FunctionDefinition","src":"53591:111:16","nodes":[],"documentation":{"id":17085,"nodeType":"StructuredDocumentation","src":"53431:155:16","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"53600:17:16","parameters":{"id":17094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17087,"mutability":"mutable","name":"left","nameLocation":"53626:4:16","nodeType":"VariableDeclaration","scope":17096,"src":"53618:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17086,"name":"uint256","nodeType":"ElementaryTypeName","src":"53618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17089,"mutability":"mutable","name":"right","nameLocation":"53640:5:16","nodeType":"VariableDeclaration","scope":17096,"src":"53632:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17088,"name":"uint256","nodeType":"ElementaryTypeName","src":"53632:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17091,"mutability":"mutable","name":"maxDelta","nameLocation":"53655:8:16","nodeType":"VariableDeclaration","scope":17096,"src":"53647:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17090,"name":"uint256","nodeType":"ElementaryTypeName","src":"53647:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17093,"mutability":"mutable","name":"error","nameLocation":"53681:5:16","nodeType":"VariableDeclaration","scope":17096,"src":"53665:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17092,"name":"string","nodeType":"ElementaryTypeName","src":"53665:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53617:70:16"},"returnParameters":{"id":17095,"nodeType":"ParameterList","parameters":[],"src":"53701:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17106,"nodeType":"FunctionDefinition","src":"53805:86:16","nodes":[],"documentation":{"id":17097,"nodeType":"StructuredDocumentation","src":"53708:92:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"53814:17:16","parameters":{"id":17104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17099,"mutability":"mutable","name":"left","nameLocation":"53839:4:16","nodeType":"VariableDeclaration","scope":17106,"src":"53832:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17098,"name":"int256","nodeType":"ElementaryTypeName","src":"53832:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17101,"mutability":"mutable","name":"right","nameLocation":"53852:5:16","nodeType":"VariableDeclaration","scope":17106,"src":"53845:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17100,"name":"int256","nodeType":"ElementaryTypeName","src":"53845:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17103,"mutability":"mutable","name":"maxDelta","nameLocation":"53867:8:16","nodeType":"VariableDeclaration","scope":17106,"src":"53859:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17102,"name":"uint256","nodeType":"ElementaryTypeName","src":"53859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53831:45:16"},"returnParameters":{"id":17105,"nodeType":"ParameterList","parameters":[],"src":"53890:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17118,"nodeType":"FunctionDefinition","src":"54056:109:16","nodes":[],"documentation":{"id":17107,"nodeType":"StructuredDocumentation","src":"53897:154:16","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"54065:17:16","parameters":{"id":17116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17109,"mutability":"mutable","name":"left","nameLocation":"54090:4:16","nodeType":"VariableDeclaration","scope":17118,"src":"54083:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17108,"name":"int256","nodeType":"ElementaryTypeName","src":"54083:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17111,"mutability":"mutable","name":"right","nameLocation":"54103:5:16","nodeType":"VariableDeclaration","scope":17118,"src":"54096:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17110,"name":"int256","nodeType":"ElementaryTypeName","src":"54096:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17113,"mutability":"mutable","name":"maxDelta","nameLocation":"54118:8:16","nodeType":"VariableDeclaration","scope":17118,"src":"54110:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17112,"name":"uint256","nodeType":"ElementaryTypeName","src":"54110:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17115,"mutability":"mutable","name":"error","nameLocation":"54144:5:16","nodeType":"VariableDeclaration","scope":17118,"src":"54128:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17114,"name":"string","nodeType":"ElementaryTypeName","src":"54128:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54082:68:16"},"returnParameters":{"id":17117,"nodeType":"ParameterList","parameters":[],"src":"54164:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17130,"nodeType":"FunctionDefinition","src":"54436:136:16","nodes":[],"documentation":{"id":17119,"nodeType":"StructuredDocumentation","src":"54171:260:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"54445:24:16","parameters":{"id":17128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17121,"mutability":"mutable","name":"left","nameLocation":"54478:4:16","nodeType":"VariableDeclaration","scope":17130,"src":"54470:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17120,"name":"uint256","nodeType":"ElementaryTypeName","src":"54470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17123,"mutability":"mutable","name":"right","nameLocation":"54492:5:16","nodeType":"VariableDeclaration","scope":17130,"src":"54484:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17122,"name":"uint256","nodeType":"ElementaryTypeName","src":"54484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17125,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54507:15:16","nodeType":"VariableDeclaration","scope":17130,"src":"54499:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17124,"name":"uint256","nodeType":"ElementaryTypeName","src":"54499:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17127,"mutability":"mutable","name":"decimals","nameLocation":"54532:8:16","nodeType":"VariableDeclaration","scope":17130,"src":"54524:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17126,"name":"uint256","nodeType":"ElementaryTypeName","src":"54524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54469:72:16"},"returnParameters":{"id":17129,"nodeType":"ParameterList","parameters":[],"src":"54571:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17144,"nodeType":"FunctionDefinition","src":"54897:189:16","nodes":[],"documentation":{"id":17131,"nodeType":"StructuredDocumentation","src":"54578:314:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"54906:24:16","parameters":{"id":17142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17133,"mutability":"mutable","name":"left","nameLocation":"54948:4:16","nodeType":"VariableDeclaration","scope":17144,"src":"54940:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17132,"name":"uint256","nodeType":"ElementaryTypeName","src":"54940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17135,"mutability":"mutable","name":"right","nameLocation":"54970:5:16","nodeType":"VariableDeclaration","scope":17144,"src":"54962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17134,"name":"uint256","nodeType":"ElementaryTypeName","src":"54962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17137,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54993:15:16","nodeType":"VariableDeclaration","scope":17144,"src":"54985:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17136,"name":"uint256","nodeType":"ElementaryTypeName","src":"54985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17139,"mutability":"mutable","name":"decimals","nameLocation":"55026:8:16","nodeType":"VariableDeclaration","scope":17144,"src":"55018:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17138,"name":"uint256","nodeType":"ElementaryTypeName","src":"55018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17141,"mutability":"mutable","name":"error","nameLocation":"55060:5:16","nodeType":"VariableDeclaration","scope":17144,"src":"55044:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17140,"name":"string","nodeType":"ElementaryTypeName","src":"55044:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54930:141:16"},"returnParameters":{"id":17143,"nodeType":"ParameterList","parameters":[],"src":"55085:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17156,"nodeType":"FunctionDefinition","src":"55356:134:16","nodes":[],"documentation":{"id":17145,"nodeType":"StructuredDocumentation","src":"55092:259:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"55365:24:16","parameters":{"id":17154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17147,"mutability":"mutable","name":"left","nameLocation":"55397:4:16","nodeType":"VariableDeclaration","scope":17156,"src":"55390:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17146,"name":"int256","nodeType":"ElementaryTypeName","src":"55390:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17149,"mutability":"mutable","name":"right","nameLocation":"55410:5:16","nodeType":"VariableDeclaration","scope":17156,"src":"55403:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17148,"name":"int256","nodeType":"ElementaryTypeName","src":"55403:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17151,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"55425:15:16","nodeType":"VariableDeclaration","scope":17156,"src":"55417:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17150,"name":"uint256","nodeType":"ElementaryTypeName","src":"55417:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17153,"mutability":"mutable","name":"decimals","nameLocation":"55450:8:16","nodeType":"VariableDeclaration","scope":17156,"src":"55442:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17152,"name":"uint256","nodeType":"ElementaryTypeName","src":"55442:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55389:70:16"},"returnParameters":{"id":17155,"nodeType":"ParameterList","parameters":[],"src":"55489:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17170,"nodeType":"FunctionDefinition","src":"55814:187:16","nodes":[],"documentation":{"id":17157,"nodeType":"StructuredDocumentation","src":"55496:313:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"55823:24:16","parameters":{"id":17168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17159,"mutability":"mutable","name":"left","nameLocation":"55864:4:16","nodeType":"VariableDeclaration","scope":17170,"src":"55857:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17158,"name":"int256","nodeType":"ElementaryTypeName","src":"55857:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17161,"mutability":"mutable","name":"right","nameLocation":"55885:5:16","nodeType":"VariableDeclaration","scope":17170,"src":"55878:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17160,"name":"int256","nodeType":"ElementaryTypeName","src":"55878:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17163,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"55908:15:16","nodeType":"VariableDeclaration","scope":17170,"src":"55900:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17162,"name":"uint256","nodeType":"ElementaryTypeName","src":"55900:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17165,"mutability":"mutable","name":"decimals","nameLocation":"55941:8:16","nodeType":"VariableDeclaration","scope":17170,"src":"55933:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17164,"name":"uint256","nodeType":"ElementaryTypeName","src":"55933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17167,"mutability":"mutable","name":"error","nameLocation":"55975:5:16","nodeType":"VariableDeclaration","scope":17170,"src":"55959:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17166,"name":"string","nodeType":"ElementaryTypeName","src":"55959:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55847:139:16"},"returnParameters":{"id":17169,"nodeType":"ParameterList","parameters":[],"src":"56000:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17180,"nodeType":"FunctionDefinition","src":"56215:95:16","nodes":[],"documentation":{"id":17171,"nodeType":"StructuredDocumentation","src":"56007:203:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"56224:17:16","parameters":{"id":17178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17173,"mutability":"mutable","name":"left","nameLocation":"56250:4:16","nodeType":"VariableDeclaration","scope":17180,"src":"56242:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17172,"name":"uint256","nodeType":"ElementaryTypeName","src":"56242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17175,"mutability":"mutable","name":"right","nameLocation":"56264:5:16","nodeType":"VariableDeclaration","scope":17180,"src":"56256:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17174,"name":"uint256","nodeType":"ElementaryTypeName","src":"56256:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17177,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"56279:15:16","nodeType":"VariableDeclaration","scope":17180,"src":"56271:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17176,"name":"uint256","nodeType":"ElementaryTypeName","src":"56271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56241:54:16"},"returnParameters":{"id":17179,"nodeType":"ParameterList","parameters":[],"src":"56309:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17192,"nodeType":"FunctionDefinition","src":"56586:134:16","nodes":[],"documentation":{"id":17181,"nodeType":"StructuredDocumentation","src":"56316:265:16","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"56595:17:16","parameters":{"id":17190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17183,"mutability":"mutable","name":"left","nameLocation":"56621:4:16","nodeType":"VariableDeclaration","scope":17192,"src":"56613:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17182,"name":"uint256","nodeType":"ElementaryTypeName","src":"56613:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17185,"mutability":"mutable","name":"right","nameLocation":"56635:5:16","nodeType":"VariableDeclaration","scope":17192,"src":"56627:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17184,"name":"uint256","nodeType":"ElementaryTypeName","src":"56627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17187,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"56650:15:16","nodeType":"VariableDeclaration","scope":17192,"src":"56642:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17186,"name":"uint256","nodeType":"ElementaryTypeName","src":"56642:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17189,"mutability":"mutable","name":"error","nameLocation":"56683:5:16","nodeType":"VariableDeclaration","scope":17192,"src":"56667:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17188,"name":"string","nodeType":"ElementaryTypeName","src":"56667:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56612:77:16"},"returnParameters":{"id":17191,"nodeType":"ParameterList","parameters":[],"src":"56719:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17202,"nodeType":"FunctionDefinition","src":"56933:93:16","nodes":[],"documentation":{"id":17193,"nodeType":"StructuredDocumentation","src":"56726:202:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"56942:17:16","parameters":{"id":17200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17195,"mutability":"mutable","name":"left","nameLocation":"56967:4:16","nodeType":"VariableDeclaration","scope":17202,"src":"56960:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17194,"name":"int256","nodeType":"ElementaryTypeName","src":"56960:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17197,"mutability":"mutable","name":"right","nameLocation":"56980:5:16","nodeType":"VariableDeclaration","scope":17202,"src":"56973:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17196,"name":"int256","nodeType":"ElementaryTypeName","src":"56973:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17199,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"56995:15:16","nodeType":"VariableDeclaration","scope":17202,"src":"56987:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17198,"name":"uint256","nodeType":"ElementaryTypeName","src":"56987:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56959:52:16"},"returnParameters":{"id":17201,"nodeType":"ParameterList","parameters":[],"src":"57025:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17214,"nodeType":"FunctionDefinition","src":"57301:132:16","nodes":[],"documentation":{"id":17203,"nodeType":"StructuredDocumentation","src":"57032:264:16","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"57310:17:16","parameters":{"id":17212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17205,"mutability":"mutable","name":"left","nameLocation":"57335:4:16","nodeType":"VariableDeclaration","scope":17214,"src":"57328:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17204,"name":"int256","nodeType":"ElementaryTypeName","src":"57328:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17207,"mutability":"mutable","name":"right","nameLocation":"57348:5:16","nodeType":"VariableDeclaration","scope":17214,"src":"57341:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17206,"name":"int256","nodeType":"ElementaryTypeName","src":"57341:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17209,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"57363:15:16","nodeType":"VariableDeclaration","scope":17214,"src":"57355:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17208,"name":"uint256","nodeType":"ElementaryTypeName","src":"57355:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17211,"mutability":"mutable","name":"error","nameLocation":"57396:5:16","nodeType":"VariableDeclaration","scope":17214,"src":"57380:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17210,"name":"string","nodeType":"ElementaryTypeName","src":"57380:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57327:75:16"},"returnParameters":{"id":17213,"nodeType":"ParameterList","parameters":[],"src":"57432:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17224,"nodeType":"FunctionDefinition","src":"57542:86:16","nodes":[],"documentation":{"id":17215,"nodeType":"StructuredDocumentation","src":"57439:98:16","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"57551:15:16","parameters":{"id":17222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17217,"mutability":"mutable","name":"left","nameLocation":"57575:4:16","nodeType":"VariableDeclaration","scope":17224,"src":"57567:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17216,"name":"uint256","nodeType":"ElementaryTypeName","src":"57567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17219,"mutability":"mutable","name":"right","nameLocation":"57589:5:16","nodeType":"VariableDeclaration","scope":17224,"src":"57581:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17218,"name":"uint256","nodeType":"ElementaryTypeName","src":"57581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17221,"mutability":"mutable","name":"decimals","nameLocation":"57604:8:16","nodeType":"VariableDeclaration","scope":17224,"src":"57596:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17220,"name":"uint256","nodeType":"ElementaryTypeName","src":"57596:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57566:47:16"},"returnParameters":{"id":17223,"nodeType":"ParameterList","parameters":[],"src":"57627:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17236,"nodeType":"FunctionDefinition","src":"57799:109:16","nodes":[],"documentation":{"id":17225,"nodeType":"StructuredDocumentation","src":"57634:160:16","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"57808:15:16","parameters":{"id":17234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17227,"mutability":"mutable","name":"left","nameLocation":"57832:4:16","nodeType":"VariableDeclaration","scope":17236,"src":"57824:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17226,"name":"uint256","nodeType":"ElementaryTypeName","src":"57824:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17229,"mutability":"mutable","name":"right","nameLocation":"57846:5:16","nodeType":"VariableDeclaration","scope":17236,"src":"57838:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17228,"name":"uint256","nodeType":"ElementaryTypeName","src":"57838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17231,"mutability":"mutable","name":"decimals","nameLocation":"57861:8:16","nodeType":"VariableDeclaration","scope":17236,"src":"57853:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17230,"name":"uint256","nodeType":"ElementaryTypeName","src":"57853:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17233,"mutability":"mutable","name":"error","nameLocation":"57887:5:16","nodeType":"VariableDeclaration","scope":17236,"src":"57871:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17232,"name":"string","nodeType":"ElementaryTypeName","src":"57871:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57823:70:16"},"returnParameters":{"id":17235,"nodeType":"ParameterList","parameters":[],"src":"57907:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17246,"nodeType":"FunctionDefinition","src":"58016:84:16","nodes":[],"documentation":{"id":17237,"nodeType":"StructuredDocumentation","src":"57914:97:16","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"58025:15:16","parameters":{"id":17244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17239,"mutability":"mutable","name":"left","nameLocation":"58048:4:16","nodeType":"VariableDeclaration","scope":17246,"src":"58041:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17238,"name":"int256","nodeType":"ElementaryTypeName","src":"58041:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17241,"mutability":"mutable","name":"right","nameLocation":"58061:5:16","nodeType":"VariableDeclaration","scope":17246,"src":"58054:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17240,"name":"int256","nodeType":"ElementaryTypeName","src":"58054:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17243,"mutability":"mutable","name":"decimals","nameLocation":"58076:8:16","nodeType":"VariableDeclaration","scope":17246,"src":"58068:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17242,"name":"uint256","nodeType":"ElementaryTypeName","src":"58068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58040:45:16"},"returnParameters":{"id":17245,"nodeType":"ParameterList","parameters":[],"src":"58099:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17258,"nodeType":"FunctionDefinition","src":"58270:107:16","nodes":[],"documentation":{"id":17247,"nodeType":"StructuredDocumentation","src":"58106:159:16","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"58279:15:16","parameters":{"id":17256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17249,"mutability":"mutable","name":"left","nameLocation":"58302:4:16","nodeType":"VariableDeclaration","scope":17258,"src":"58295:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17248,"name":"int256","nodeType":"ElementaryTypeName","src":"58295:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17251,"mutability":"mutable","name":"right","nameLocation":"58315:5:16","nodeType":"VariableDeclaration","scope":17258,"src":"58308:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17250,"name":"int256","nodeType":"ElementaryTypeName","src":"58308:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17253,"mutability":"mutable","name":"decimals","nameLocation":"58330:8:16","nodeType":"VariableDeclaration","scope":17258,"src":"58322:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17252,"name":"uint256","nodeType":"ElementaryTypeName","src":"58322:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17255,"mutability":"mutable","name":"error","nameLocation":"58356:5:16","nodeType":"VariableDeclaration","scope":17258,"src":"58340:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17254,"name":"string","nodeType":"ElementaryTypeName","src":"58340:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58294:68:16"},"returnParameters":{"id":17257,"nodeType":"ParameterList","parameters":[],"src":"58376:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17266,"nodeType":"FunctionDefinition","src":"58433:55:16","nodes":[],"documentation":{"id":17259,"nodeType":"StructuredDocumentation","src":"58383:45:16","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58442:8:16","parameters":{"id":17264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17261,"mutability":"mutable","name":"left","nameLocation":"58456:4:16","nodeType":"VariableDeclaration","scope":17266,"src":"58451:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17260,"name":"bool","nodeType":"ElementaryTypeName","src":"58451:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17263,"mutability":"mutable","name":"right","nameLocation":"58467:5:16","nodeType":"VariableDeclaration","scope":17266,"src":"58462:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17262,"name":"bool","nodeType":"ElementaryTypeName","src":"58462:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"58450:23:16"},"returnParameters":{"id":17265,"nodeType":"ParameterList","parameters":[],"src":"58487:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17276,"nodeType":"FunctionDefinition","src":"58601:78:16","nodes":[],"documentation":{"id":17267,"nodeType":"StructuredDocumentation","src":"58494:102:16","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58610:8:16","parameters":{"id":17274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17269,"mutability":"mutable","name":"left","nameLocation":"58624:4:16","nodeType":"VariableDeclaration","scope":17276,"src":"58619:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17268,"name":"bool","nodeType":"ElementaryTypeName","src":"58619:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17271,"mutability":"mutable","name":"right","nameLocation":"58635:5:16","nodeType":"VariableDeclaration","scope":17276,"src":"58630:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17270,"name":"bool","nodeType":"ElementaryTypeName","src":"58630:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17273,"mutability":"mutable","name":"error","nameLocation":"58658:5:16","nodeType":"VariableDeclaration","scope":17276,"src":"58642:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17272,"name":"string","nodeType":"ElementaryTypeName","src":"58642:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58618:46:16"},"returnParameters":{"id":17275,"nodeType":"ParameterList","parameters":[],"src":"58678:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17284,"nodeType":"FunctionDefinition","src":"58737:77:16","nodes":[],"documentation":{"id":17277,"nodeType":"StructuredDocumentation","src":"58685:47:16","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58746:8:16","parameters":{"id":17282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17279,"mutability":"mutable","name":"left","nameLocation":"58771:4:16","nodeType":"VariableDeclaration","scope":17284,"src":"58755:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17278,"name":"string","nodeType":"ElementaryTypeName","src":"58755:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17281,"mutability":"mutable","name":"right","nameLocation":"58793:5:16","nodeType":"VariableDeclaration","scope":17284,"src":"58777:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17280,"name":"string","nodeType":"ElementaryTypeName","src":"58777:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58754:45:16"},"returnParameters":{"id":17283,"nodeType":"ParameterList","parameters":[],"src":"58813:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17294,"nodeType":"FunctionDefinition","src":"58929:100:16","nodes":[],"documentation":{"id":17285,"nodeType":"StructuredDocumentation","src":"58820:104:16","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58938:8:16","parameters":{"id":17292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17287,"mutability":"mutable","name":"left","nameLocation":"58963:4:16","nodeType":"VariableDeclaration","scope":17294,"src":"58947:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17286,"name":"string","nodeType":"ElementaryTypeName","src":"58947:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17289,"mutability":"mutable","name":"right","nameLocation":"58985:5:16","nodeType":"VariableDeclaration","scope":17294,"src":"58969:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17288,"name":"string","nodeType":"ElementaryTypeName","src":"58969:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17291,"mutability":"mutable","name":"error","nameLocation":"59008:5:16","nodeType":"VariableDeclaration","scope":17294,"src":"58992:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17290,"name":"string","nodeType":"ElementaryTypeName","src":"58992:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58946:68:16"},"returnParameters":{"id":17293,"nodeType":"ParameterList","parameters":[],"src":"59028:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17302,"nodeType":"FunctionDefinition","src":"59086:75:16","nodes":[],"documentation":{"id":17295,"nodeType":"StructuredDocumentation","src":"59035:46:16","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59095:8:16","parameters":{"id":17300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17297,"mutability":"mutable","name":"left","nameLocation":"59119:4:16","nodeType":"VariableDeclaration","scope":17302,"src":"59104:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17296,"name":"bytes","nodeType":"ElementaryTypeName","src":"59104:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17299,"mutability":"mutable","name":"right","nameLocation":"59140:5:16","nodeType":"VariableDeclaration","scope":17302,"src":"59125:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17298,"name":"bytes","nodeType":"ElementaryTypeName","src":"59125:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"59103:43:16"},"returnParameters":{"id":17301,"nodeType":"ParameterList","parameters":[],"src":"59160:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17312,"nodeType":"FunctionDefinition","src":"59275:98:16","nodes":[],"documentation":{"id":17303,"nodeType":"StructuredDocumentation","src":"59167:103:16","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59284:8:16","parameters":{"id":17310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17305,"mutability":"mutable","name":"left","nameLocation":"59308:4:16","nodeType":"VariableDeclaration","scope":17312,"src":"59293:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17304,"name":"bytes","nodeType":"ElementaryTypeName","src":"59293:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17307,"mutability":"mutable","name":"right","nameLocation":"59329:5:16","nodeType":"VariableDeclaration","scope":17312,"src":"59314:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17306,"name":"bytes","nodeType":"ElementaryTypeName","src":"59314:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17309,"mutability":"mutable","name":"error","nameLocation":"59352:5:16","nodeType":"VariableDeclaration","scope":17312,"src":"59336:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17308,"name":"string","nodeType":"ElementaryTypeName","src":"59336:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59292:66:16"},"returnParameters":{"id":17311,"nodeType":"ParameterList","parameters":[],"src":"59372:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17322,"nodeType":"FunctionDefinition","src":"59439:77:16","nodes":[],"documentation":{"id":17313,"nodeType":"StructuredDocumentation","src":"59379:55:16","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59448:8:16","parameters":{"id":17320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17316,"mutability":"mutable","name":"left","nameLocation":"59473:4:16","nodeType":"VariableDeclaration","scope":17322,"src":"59457:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17314,"name":"bool","nodeType":"ElementaryTypeName","src":"59457:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17315,"nodeType":"ArrayTypeName","src":"59457:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17319,"mutability":"mutable","name":"right","nameLocation":"59495:5:16","nodeType":"VariableDeclaration","scope":17322,"src":"59479:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17317,"name":"bool","nodeType":"ElementaryTypeName","src":"59479:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17318,"nodeType":"ArrayTypeName","src":"59479:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"59456:45:16"},"returnParameters":{"id":17321,"nodeType":"ParameterList","parameters":[],"src":"59515:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17334,"nodeType":"FunctionDefinition","src":"59639:100:16","nodes":[],"documentation":{"id":17323,"nodeType":"StructuredDocumentation","src":"59522:112:16","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59648:8:16","parameters":{"id":17332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17326,"mutability":"mutable","name":"left","nameLocation":"59673:4:16","nodeType":"VariableDeclaration","scope":17334,"src":"59657:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17324,"name":"bool","nodeType":"ElementaryTypeName","src":"59657:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17325,"nodeType":"ArrayTypeName","src":"59657:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17329,"mutability":"mutable","name":"right","nameLocation":"59695:5:16","nodeType":"VariableDeclaration","scope":17334,"src":"59679:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17327,"name":"bool","nodeType":"ElementaryTypeName","src":"59679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17328,"nodeType":"ArrayTypeName","src":"59679:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17331,"mutability":"mutable","name":"error","nameLocation":"59718:5:16","nodeType":"VariableDeclaration","scope":17334,"src":"59702:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17330,"name":"string","nodeType":"ElementaryTypeName","src":"59702:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59656:68:16"},"returnParameters":{"id":17333,"nodeType":"ParameterList","parameters":[],"src":"59738:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17344,"nodeType":"FunctionDefinition","src":"59807:83:16","nodes":[],"documentation":{"id":17335,"nodeType":"StructuredDocumentation","src":"59745:57:16","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59816:8:16","parameters":{"id":17342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17338,"mutability":"mutable","name":"left","nameLocation":"59844:4:16","nodeType":"VariableDeclaration","scope":17344,"src":"59825:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17336,"name":"uint256","nodeType":"ElementaryTypeName","src":"59825:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17337,"nodeType":"ArrayTypeName","src":"59825:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17341,"mutability":"mutable","name":"right","nameLocation":"59869:5:16","nodeType":"VariableDeclaration","scope":17344,"src":"59850:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17339,"name":"uint256","nodeType":"ElementaryTypeName","src":"59850:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17340,"nodeType":"ArrayTypeName","src":"59850:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"59824:51:16"},"returnParameters":{"id":17343,"nodeType":"ParameterList","parameters":[],"src":"59889:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17356,"nodeType":"FunctionDefinition","src":"60016:106:16","nodes":[],"documentation":{"id":17345,"nodeType":"StructuredDocumentation","src":"59896:115:16","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60025:8:16","parameters":{"id":17354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17348,"mutability":"mutable","name":"left","nameLocation":"60053:4:16","nodeType":"VariableDeclaration","scope":17356,"src":"60034:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17346,"name":"uint256","nodeType":"ElementaryTypeName","src":"60034:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17347,"nodeType":"ArrayTypeName","src":"60034:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17351,"mutability":"mutable","name":"right","nameLocation":"60078:5:16","nodeType":"VariableDeclaration","scope":17356,"src":"60059:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17349,"name":"uint256","nodeType":"ElementaryTypeName","src":"60059:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17350,"nodeType":"ArrayTypeName","src":"60059:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17353,"mutability":"mutable","name":"error","nameLocation":"60101:5:16","nodeType":"VariableDeclaration","scope":17356,"src":"60085:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17352,"name":"string","nodeType":"ElementaryTypeName","src":"60085:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60033:74:16"},"returnParameters":{"id":17355,"nodeType":"ParameterList","parameters":[],"src":"60121:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17366,"nodeType":"FunctionDefinition","src":"60190:81:16","nodes":[],"documentation":{"id":17357,"nodeType":"StructuredDocumentation","src":"60128:57:16","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60199:8:16","parameters":{"id":17364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17360,"mutability":"mutable","name":"left","nameLocation":"60226:4:16","nodeType":"VariableDeclaration","scope":17366,"src":"60208:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17358,"name":"int256","nodeType":"ElementaryTypeName","src":"60208:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17359,"nodeType":"ArrayTypeName","src":"60208:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17363,"mutability":"mutable","name":"right","nameLocation":"60250:5:16","nodeType":"VariableDeclaration","scope":17366,"src":"60232:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17361,"name":"int256","nodeType":"ElementaryTypeName","src":"60232:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17362,"nodeType":"ArrayTypeName","src":"60232:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"60207:49:16"},"returnParameters":{"id":17365,"nodeType":"ParameterList","parameters":[],"src":"60270:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17378,"nodeType":"FunctionDefinition","src":"60396:104:16","nodes":[],"documentation":{"id":17367,"nodeType":"StructuredDocumentation","src":"60277:114:16","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60405:8:16","parameters":{"id":17376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17370,"mutability":"mutable","name":"left","nameLocation":"60432:4:16","nodeType":"VariableDeclaration","scope":17378,"src":"60414:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17368,"name":"int256","nodeType":"ElementaryTypeName","src":"60414:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17369,"nodeType":"ArrayTypeName","src":"60414:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17373,"mutability":"mutable","name":"right","nameLocation":"60456:5:16","nodeType":"VariableDeclaration","scope":17378,"src":"60438:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17371,"name":"int256","nodeType":"ElementaryTypeName","src":"60438:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17372,"nodeType":"ArrayTypeName","src":"60438:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17375,"mutability":"mutable","name":"error","nameLocation":"60479:5:16","nodeType":"VariableDeclaration","scope":17378,"src":"60463:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17374,"name":"string","nodeType":"ElementaryTypeName","src":"60463:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60413:72:16"},"returnParameters":{"id":17377,"nodeType":"ParameterList","parameters":[],"src":"60499:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17386,"nodeType":"FunctionDefinition","src":"60559:61:16","nodes":[],"documentation":{"id":17379,"nodeType":"StructuredDocumentation","src":"60506:48:16","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60568:8:16","parameters":{"id":17384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17381,"mutability":"mutable","name":"left","nameLocation":"60585:4:16","nodeType":"VariableDeclaration","scope":17386,"src":"60577:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17380,"name":"uint256","nodeType":"ElementaryTypeName","src":"60577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17383,"mutability":"mutable","name":"right","nameLocation":"60599:5:16","nodeType":"VariableDeclaration","scope":17386,"src":"60591:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17382,"name":"uint256","nodeType":"ElementaryTypeName","src":"60591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60576:29:16"},"returnParameters":{"id":17385,"nodeType":"ParameterList","parameters":[],"src":"60619:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17396,"nodeType":"FunctionDefinition","src":"60689:83:16","nodes":[],"documentation":{"id":17387,"nodeType":"StructuredDocumentation","src":"60626:58:16","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60698:8:16","parameters":{"id":17394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17390,"mutability":"mutable","name":"left","nameLocation":"60726:4:16","nodeType":"VariableDeclaration","scope":17396,"src":"60707:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17388,"name":"address","nodeType":"ElementaryTypeName","src":"60707:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17389,"nodeType":"ArrayTypeName","src":"60707:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17393,"mutability":"mutable","name":"right","nameLocation":"60751:5:16","nodeType":"VariableDeclaration","scope":17396,"src":"60732:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17391,"name":"address","nodeType":"ElementaryTypeName","src":"60732:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17392,"nodeType":"ArrayTypeName","src":"60732:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"60706:51:16"},"returnParameters":{"id":17395,"nodeType":"ParameterList","parameters":[],"src":"60771:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17408,"nodeType":"FunctionDefinition","src":"60898:106:16","nodes":[],"documentation":{"id":17397,"nodeType":"StructuredDocumentation","src":"60778:115:16","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60907:8:16","parameters":{"id":17406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17400,"mutability":"mutable","name":"left","nameLocation":"60935:4:16","nodeType":"VariableDeclaration","scope":17408,"src":"60916:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17398,"name":"address","nodeType":"ElementaryTypeName","src":"60916:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17399,"nodeType":"ArrayTypeName","src":"60916:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17403,"mutability":"mutable","name":"right","nameLocation":"60960:5:16","nodeType":"VariableDeclaration","scope":17408,"src":"60941:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17401,"name":"address","nodeType":"ElementaryTypeName","src":"60941:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17402,"nodeType":"ArrayTypeName","src":"60941:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17405,"mutability":"mutable","name":"error","nameLocation":"60983:5:16","nodeType":"VariableDeclaration","scope":17408,"src":"60967:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17404,"name":"string","nodeType":"ElementaryTypeName","src":"60967:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60915:74:16"},"returnParameters":{"id":17407,"nodeType":"ParameterList","parameters":[],"src":"61003:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17418,"nodeType":"FunctionDefinition","src":"61073:83:16","nodes":[],"documentation":{"id":17409,"nodeType":"StructuredDocumentation","src":"61010:58:16","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"61082:8:16","parameters":{"id":17416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17412,"mutability":"mutable","name":"left","nameLocation":"61110:4:16","nodeType":"VariableDeclaration","scope":17418,"src":"61091:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"61091:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17411,"nodeType":"ArrayTypeName","src":"61091:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17415,"mutability":"mutable","name":"right","nameLocation":"61135:5:16","nodeType":"VariableDeclaration","scope":17418,"src":"61116:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"61116:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17414,"nodeType":"ArrayTypeName","src":"61116:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"61090:51:16"},"returnParameters":{"id":17417,"nodeType":"ParameterList","parameters":[],"src":"61155:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17430,"nodeType":"FunctionDefinition","src":"61282:106:16","nodes":[],"documentation":{"id":17419,"nodeType":"StructuredDocumentation","src":"61162:115:16","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"61291:8:16","parameters":{"id":17428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17422,"mutability":"mutable","name":"left","nameLocation":"61319:4:16","nodeType":"VariableDeclaration","scope":17430,"src":"61300:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"61300:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17421,"nodeType":"ArrayTypeName","src":"61300:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17425,"mutability":"mutable","name":"right","nameLocation":"61344:5:16","nodeType":"VariableDeclaration","scope":17430,"src":"61325:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"61325:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17424,"nodeType":"ArrayTypeName","src":"61325:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17427,"mutability":"mutable","name":"error","nameLocation":"61367:5:16","nodeType":"VariableDeclaration","scope":17430,"src":"61351:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17426,"name":"string","nodeType":"ElementaryTypeName","src":"61351:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61299:74:16"},"returnParameters":{"id":17429,"nodeType":"ParameterList","parameters":[],"src":"61387:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17440,"nodeType":"FunctionDefinition","src":"61456:81:16","nodes":[],"documentation":{"id":17431,"nodeType":"StructuredDocumentation","src":"61394:57:16","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"61465:8:16","parameters":{"id":17438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17434,"mutability":"mutable","name":"left","nameLocation":"61492:4:16","nodeType":"VariableDeclaration","scope":17440,"src":"61474:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17432,"name":"string","nodeType":"ElementaryTypeName","src":"61474:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17433,"nodeType":"ArrayTypeName","src":"61474:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17437,"mutability":"mutable","name":"right","nameLocation":"61516:5:16","nodeType":"VariableDeclaration","scope":17440,"src":"61498:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17435,"name":"string","nodeType":"ElementaryTypeName","src":"61498:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17436,"nodeType":"ArrayTypeName","src":"61498:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"61473:49:16"},"returnParameters":{"id":17439,"nodeType":"ParameterList","parameters":[],"src":"61536:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17452,"nodeType":"FunctionDefinition","src":"61662:104:16","nodes":[],"documentation":{"id":17441,"nodeType":"StructuredDocumentation","src":"61543:114:16","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"61671:8:16","parameters":{"id":17450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17444,"mutability":"mutable","name":"left","nameLocation":"61698:4:16","nodeType":"VariableDeclaration","scope":17452,"src":"61680:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17442,"name":"string","nodeType":"ElementaryTypeName","src":"61680:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17443,"nodeType":"ArrayTypeName","src":"61680:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17447,"mutability":"mutable","name":"right","nameLocation":"61722:5:16","nodeType":"VariableDeclaration","scope":17452,"src":"61704:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17445,"name":"string","nodeType":"ElementaryTypeName","src":"61704:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17446,"nodeType":"ArrayTypeName","src":"61704:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17449,"mutability":"mutable","name":"error","nameLocation":"61745:5:16","nodeType":"VariableDeclaration","scope":17452,"src":"61729:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17448,"name":"string","nodeType":"ElementaryTypeName","src":"61729:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61679:72:16"},"returnParameters":{"id":17451,"nodeType":"ParameterList","parameters":[],"src":"61765:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17462,"nodeType":"FunctionDefinition","src":"61833:79:16","nodes":[],"documentation":{"id":17453,"nodeType":"StructuredDocumentation","src":"61772:56:16","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"61842:8:16","parameters":{"id":17460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17456,"mutability":"mutable","name":"left","nameLocation":"61868:4:16","nodeType":"VariableDeclaration","scope":17462,"src":"61851:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17454,"name":"bytes","nodeType":"ElementaryTypeName","src":"61851:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17455,"nodeType":"ArrayTypeName","src":"61851:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17459,"mutability":"mutable","name":"right","nameLocation":"61891:5:16","nodeType":"VariableDeclaration","scope":17462,"src":"61874:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17457,"name":"bytes","nodeType":"ElementaryTypeName","src":"61874:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17458,"nodeType":"ArrayTypeName","src":"61874:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"61850:47:16"},"returnParameters":{"id":17461,"nodeType":"ParameterList","parameters":[],"src":"61911:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17474,"nodeType":"FunctionDefinition","src":"62036:102:16","nodes":[],"documentation":{"id":17463,"nodeType":"StructuredDocumentation","src":"61918:113:16","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"62045:8:16","parameters":{"id":17472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17466,"mutability":"mutable","name":"left","nameLocation":"62071:4:16","nodeType":"VariableDeclaration","scope":17474,"src":"62054:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17464,"name":"bytes","nodeType":"ElementaryTypeName","src":"62054:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17465,"nodeType":"ArrayTypeName","src":"62054:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17469,"mutability":"mutable","name":"right","nameLocation":"62094:5:16","nodeType":"VariableDeclaration","scope":17474,"src":"62077:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17467,"name":"bytes","nodeType":"ElementaryTypeName","src":"62077:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17468,"nodeType":"ArrayTypeName","src":"62077:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17471,"mutability":"mutable","name":"error","nameLocation":"62117:5:16","nodeType":"VariableDeclaration","scope":17474,"src":"62101:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17470,"name":"string","nodeType":"ElementaryTypeName","src":"62101:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62053:70:16"},"returnParameters":{"id":17473,"nodeType":"ParameterList","parameters":[],"src":"62137:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17484,"nodeType":"FunctionDefinition","src":"62254:84:16","nodes":[],"documentation":{"id":17475,"nodeType":"StructuredDocumentation","src":"62144:105:16","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"62263:8:16","parameters":{"id":17482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17477,"mutability":"mutable","name":"left","nameLocation":"62280:4:16","nodeType":"VariableDeclaration","scope":17484,"src":"62272:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17476,"name":"uint256","nodeType":"ElementaryTypeName","src":"62272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17479,"mutability":"mutable","name":"right","nameLocation":"62294:5:16","nodeType":"VariableDeclaration","scope":17484,"src":"62286:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17478,"name":"uint256","nodeType":"ElementaryTypeName","src":"62286:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17481,"mutability":"mutable","name":"error","nameLocation":"62317:5:16","nodeType":"VariableDeclaration","scope":17484,"src":"62301:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17480,"name":"string","nodeType":"ElementaryTypeName","src":"62301:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62271:52:16"},"returnParameters":{"id":17483,"nodeType":"ParameterList","parameters":[],"src":"62337:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17492,"nodeType":"FunctionDefinition","src":"62396:59:16","nodes":[],"documentation":{"id":17485,"nodeType":"StructuredDocumentation","src":"62344:47:16","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"62405:8:16","parameters":{"id":17490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17487,"mutability":"mutable","name":"left","nameLocation":"62421:4:16","nodeType":"VariableDeclaration","scope":17492,"src":"62414:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17486,"name":"int256","nodeType":"ElementaryTypeName","src":"62414:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17489,"mutability":"mutable","name":"right","nameLocation":"62434:5:16","nodeType":"VariableDeclaration","scope":17492,"src":"62427:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17488,"name":"int256","nodeType":"ElementaryTypeName","src":"62427:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62413:27:16"},"returnParameters":{"id":17491,"nodeType":"ParameterList","parameters":[],"src":"62454:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17502,"nodeType":"FunctionDefinition","src":"62570:82:16","nodes":[],"documentation":{"id":17493,"nodeType":"StructuredDocumentation","src":"62461:104:16","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"62579:8:16","parameters":{"id":17500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17495,"mutability":"mutable","name":"left","nameLocation":"62595:4:16","nodeType":"VariableDeclaration","scope":17502,"src":"62588:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17494,"name":"int256","nodeType":"ElementaryTypeName","src":"62588:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17497,"mutability":"mutable","name":"right","nameLocation":"62608:5:16","nodeType":"VariableDeclaration","scope":17502,"src":"62601:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17496,"name":"int256","nodeType":"ElementaryTypeName","src":"62601:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17499,"mutability":"mutable","name":"error","nameLocation":"62631:5:16","nodeType":"VariableDeclaration","scope":17502,"src":"62615:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17498,"name":"string","nodeType":"ElementaryTypeName","src":"62615:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62587:50:16"},"returnParameters":{"id":17501,"nodeType":"ParameterList","parameters":[],"src":"62651:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17510,"nodeType":"FunctionDefinition","src":"62711:61:16","nodes":[],"documentation":{"id":17503,"nodeType":"StructuredDocumentation","src":"62658:48:16","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"62720:8:16","parameters":{"id":17508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17505,"mutability":"mutable","name":"left","nameLocation":"62737:4:16","nodeType":"VariableDeclaration","scope":17510,"src":"62729:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17504,"name":"address","nodeType":"ElementaryTypeName","src":"62729:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17507,"mutability":"mutable","name":"right","nameLocation":"62751:5:16","nodeType":"VariableDeclaration","scope":17510,"src":"62743:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17506,"name":"address","nodeType":"ElementaryTypeName","src":"62743:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"62728:29:16"},"returnParameters":{"id":17509,"nodeType":"ParameterList","parameters":[],"src":"62771:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17520,"nodeType":"FunctionDefinition","src":"62888:84:16","nodes":[],"documentation":{"id":17511,"nodeType":"StructuredDocumentation","src":"62778:105:16","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"62897:8:16","parameters":{"id":17518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17513,"mutability":"mutable","name":"left","nameLocation":"62914:4:16","nodeType":"VariableDeclaration","scope":17520,"src":"62906:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17512,"name":"address","nodeType":"ElementaryTypeName","src":"62906:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17515,"mutability":"mutable","name":"right","nameLocation":"62928:5:16","nodeType":"VariableDeclaration","scope":17520,"src":"62920:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17514,"name":"address","nodeType":"ElementaryTypeName","src":"62920:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17517,"mutability":"mutable","name":"error","nameLocation":"62951:5:16","nodeType":"VariableDeclaration","scope":17520,"src":"62935:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17516,"name":"string","nodeType":"ElementaryTypeName","src":"62935:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62905:52:16"},"returnParameters":{"id":17519,"nodeType":"ParameterList","parameters":[],"src":"62971:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17528,"nodeType":"FunctionDefinition","src":"63031:61:16","nodes":[],"documentation":{"id":17521,"nodeType":"StructuredDocumentation","src":"62978:48:16","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"63040:8:16","parameters":{"id":17526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17523,"mutability":"mutable","name":"left","nameLocation":"63057:4:16","nodeType":"VariableDeclaration","scope":17528,"src":"63049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"63049:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17525,"mutability":"mutable","name":"right","nameLocation":"63071:5:16","nodeType":"VariableDeclaration","scope":17528,"src":"63063:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"63063:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"63048:29:16"},"returnParameters":{"id":17527,"nodeType":"ParameterList","parameters":[],"src":"63091:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17538,"nodeType":"FunctionDefinition","src":"63208:84:16","nodes":[],"documentation":{"id":17529,"nodeType":"StructuredDocumentation","src":"63098:105:16","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"63217:8:16","parameters":{"id":17536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17531,"mutability":"mutable","name":"left","nameLocation":"63234:4:16","nodeType":"VariableDeclaration","scope":17538,"src":"63226:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"63226:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17533,"mutability":"mutable","name":"right","nameLocation":"63248:5:16","nodeType":"VariableDeclaration","scope":17538,"src":"63240:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"63240:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17535,"mutability":"mutable","name":"error","nameLocation":"63271:5:16","nodeType":"VariableDeclaration","scope":17538,"src":"63255:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17534,"name":"string","nodeType":"ElementaryTypeName","src":"63255:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63225:52:16"},"returnParameters":{"id":17537,"nodeType":"ParameterList","parameters":[],"src":"63291:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17544,"nodeType":"FunctionDefinition","src":"63349:51:16","nodes":[],"documentation":{"id":17539,"nodeType":"StructuredDocumentation","src":"63298:46:16","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"63358:11:16","parameters":{"id":17542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17541,"mutability":"mutable","name":"condition","nameLocation":"63375:9:16","nodeType":"VariableDeclaration","scope":17544,"src":"63370:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17540,"name":"bool","nodeType":"ElementaryTypeName","src":"63370:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63369:16:16"},"returnParameters":{"id":17543,"nodeType":"ParameterList","parameters":[],"src":"63399:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17552,"nodeType":"FunctionDefinition","src":"63514:74:16","nodes":[],"documentation":{"id":17545,"nodeType":"StructuredDocumentation","src":"63406:103:16","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"63523:11:16","parameters":{"id":17550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17547,"mutability":"mutable","name":"condition","nameLocation":"63540:9:16","nodeType":"VariableDeclaration","scope":17552,"src":"63535:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17546,"name":"bool","nodeType":"ElementaryTypeName","src":"63535:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17549,"mutability":"mutable","name":"error","nameLocation":"63567:5:16","nodeType":"VariableDeclaration","scope":17552,"src":"63551:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17548,"name":"string","nodeType":"ElementaryTypeName","src":"63551:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63534:39:16"},"returnParameters":{"id":17551,"nodeType":"ParameterList","parameters":[],"src":"63587:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17562,"nodeType":"FunctionDefinition","src":"63749:86:16","nodes":[],"documentation":{"id":17553,"nodeType":"StructuredDocumentation","src":"63594:150:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"63758:15:16","parameters":{"id":17560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17555,"mutability":"mutable","name":"left","nameLocation":"63782:4:16","nodeType":"VariableDeclaration","scope":17562,"src":"63774:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17554,"name":"uint256","nodeType":"ElementaryTypeName","src":"63774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17557,"mutability":"mutable","name":"right","nameLocation":"63796:5:16","nodeType":"VariableDeclaration","scope":17562,"src":"63788:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17556,"name":"uint256","nodeType":"ElementaryTypeName","src":"63788:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17559,"mutability":"mutable","name":"decimals","nameLocation":"63811:8:16","nodeType":"VariableDeclaration","scope":17562,"src":"63803:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17558,"name":"uint256","nodeType":"ElementaryTypeName","src":"63803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63773:47:16"},"returnParameters":{"id":17561,"nodeType":"ParameterList","parameters":[],"src":"63834:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17574,"nodeType":"FunctionDefinition","src":"64050:109:16","nodes":[],"documentation":{"id":17563,"nodeType":"StructuredDocumentation","src":"63841:204:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"64059:15:16","parameters":{"id":17572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17565,"mutability":"mutable","name":"left","nameLocation":"64083:4:16","nodeType":"VariableDeclaration","scope":17574,"src":"64075:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17564,"name":"uint256","nodeType":"ElementaryTypeName","src":"64075:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17567,"mutability":"mutable","name":"right","nameLocation":"64097:5:16","nodeType":"VariableDeclaration","scope":17574,"src":"64089:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17566,"name":"uint256","nodeType":"ElementaryTypeName","src":"64089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17569,"mutability":"mutable","name":"decimals","nameLocation":"64112:8:16","nodeType":"VariableDeclaration","scope":17574,"src":"64104:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17568,"name":"uint256","nodeType":"ElementaryTypeName","src":"64104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17571,"mutability":"mutable","name":"error","nameLocation":"64138:5:16","nodeType":"VariableDeclaration","scope":17574,"src":"64122:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17570,"name":"string","nodeType":"ElementaryTypeName","src":"64122:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64074:70:16"},"returnParameters":{"id":17573,"nodeType":"ParameterList","parameters":[],"src":"64158:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17584,"nodeType":"FunctionDefinition","src":"64319:84:16","nodes":[],"documentation":{"id":17575,"nodeType":"StructuredDocumentation","src":"64165:149:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"64328:15:16","parameters":{"id":17582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17577,"mutability":"mutable","name":"left","nameLocation":"64351:4:16","nodeType":"VariableDeclaration","scope":17584,"src":"64344:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17576,"name":"int256","nodeType":"ElementaryTypeName","src":"64344:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17579,"mutability":"mutable","name":"right","nameLocation":"64364:5:16","nodeType":"VariableDeclaration","scope":17584,"src":"64357:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17578,"name":"int256","nodeType":"ElementaryTypeName","src":"64357:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17581,"mutability":"mutable","name":"decimals","nameLocation":"64379:8:16","nodeType":"VariableDeclaration","scope":17584,"src":"64371:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17580,"name":"uint256","nodeType":"ElementaryTypeName","src":"64371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64343:45:16"},"returnParameters":{"id":17583,"nodeType":"ParameterList","parameters":[],"src":"64402:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17596,"nodeType":"FunctionDefinition","src":"64617:107:16","nodes":[],"documentation":{"id":17585,"nodeType":"StructuredDocumentation","src":"64409:203:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"64626:15:16","parameters":{"id":17594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17587,"mutability":"mutable","name":"left","nameLocation":"64649:4:16","nodeType":"VariableDeclaration","scope":17596,"src":"64642:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17586,"name":"int256","nodeType":"ElementaryTypeName","src":"64642:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17589,"mutability":"mutable","name":"right","nameLocation":"64662:5:16","nodeType":"VariableDeclaration","scope":17596,"src":"64655:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17588,"name":"int256","nodeType":"ElementaryTypeName","src":"64655:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17591,"mutability":"mutable","name":"decimals","nameLocation":"64677:8:16","nodeType":"VariableDeclaration","scope":17596,"src":"64669:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17590,"name":"uint256","nodeType":"ElementaryTypeName","src":"64669:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17593,"mutability":"mutable","name":"error","nameLocation":"64703:5:16","nodeType":"VariableDeclaration","scope":17596,"src":"64687:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17592,"name":"string","nodeType":"ElementaryTypeName","src":"64687:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64641:68:16"},"returnParameters":{"id":17595,"nodeType":"ParameterList","parameters":[],"src":"64723:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17604,"nodeType":"FunctionDefinition","src":"64828:61:16","nodes":[],"documentation":{"id":17597,"nodeType":"StructuredDocumentation","src":"64730:93:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"64837:8:16","parameters":{"id":17602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17599,"mutability":"mutable","name":"left","nameLocation":"64854:4:16","nodeType":"VariableDeclaration","scope":17604,"src":"64846:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17598,"name":"uint256","nodeType":"ElementaryTypeName","src":"64846:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17601,"mutability":"mutable","name":"right","nameLocation":"64868:5:16","nodeType":"VariableDeclaration","scope":17604,"src":"64860:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17600,"name":"uint256","nodeType":"ElementaryTypeName","src":"64860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64845:29:16"},"returnParameters":{"id":17603,"nodeType":"ParameterList","parameters":[],"src":"64888:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17614,"nodeType":"FunctionDefinition","src":"65055:84:16","nodes":[],"documentation":{"id":17605,"nodeType":"StructuredDocumentation","src":"64895:155:16","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"65064:8:16","parameters":{"id":17612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17607,"mutability":"mutable","name":"left","nameLocation":"65081:4:16","nodeType":"VariableDeclaration","scope":17614,"src":"65073:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17606,"name":"uint256","nodeType":"ElementaryTypeName","src":"65073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17609,"mutability":"mutable","name":"right","nameLocation":"65095:5:16","nodeType":"VariableDeclaration","scope":17614,"src":"65087:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17608,"name":"uint256","nodeType":"ElementaryTypeName","src":"65087:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17611,"mutability":"mutable","name":"error","nameLocation":"65118:5:16","nodeType":"VariableDeclaration","scope":17614,"src":"65102:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17610,"name":"string","nodeType":"ElementaryTypeName","src":"65102:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65072:52:16"},"returnParameters":{"id":17613,"nodeType":"ParameterList","parameters":[],"src":"65138:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17622,"nodeType":"FunctionDefinition","src":"65242:59:16","nodes":[],"documentation":{"id":17615,"nodeType":"StructuredDocumentation","src":"65145:92:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"65251:8:16","parameters":{"id":17620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17617,"mutability":"mutable","name":"left","nameLocation":"65267:4:16","nodeType":"VariableDeclaration","scope":17622,"src":"65260:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17616,"name":"int256","nodeType":"ElementaryTypeName","src":"65260:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17619,"mutability":"mutable","name":"right","nameLocation":"65280:5:16","nodeType":"VariableDeclaration","scope":17622,"src":"65273:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17618,"name":"int256","nodeType":"ElementaryTypeName","src":"65273:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"65259:27:16"},"returnParameters":{"id":17621,"nodeType":"ParameterList","parameters":[],"src":"65300:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17632,"nodeType":"FunctionDefinition","src":"65466:82:16","nodes":[],"documentation":{"id":17623,"nodeType":"StructuredDocumentation","src":"65307:154:16","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"65475:8:16","parameters":{"id":17630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17625,"mutability":"mutable","name":"left","nameLocation":"65491:4:16","nodeType":"VariableDeclaration","scope":17632,"src":"65484:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17624,"name":"int256","nodeType":"ElementaryTypeName","src":"65484:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17627,"mutability":"mutable","name":"right","nameLocation":"65504:5:16","nodeType":"VariableDeclaration","scope":17632,"src":"65497:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17626,"name":"int256","nodeType":"ElementaryTypeName","src":"65497:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17629,"mutability":"mutable","name":"error","nameLocation":"65527:5:16","nodeType":"VariableDeclaration","scope":17632,"src":"65511:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17628,"name":"string","nodeType":"ElementaryTypeName","src":"65511:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65483:50:16"},"returnParameters":{"id":17631,"nodeType":"ParameterList","parameters":[],"src":"65547:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17642,"nodeType":"FunctionDefinition","src":"65697:86:16","nodes":[],"documentation":{"id":17633,"nodeType":"StructuredDocumentation","src":"65554:138:16","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"65706:15:16","parameters":{"id":17640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17635,"mutability":"mutable","name":"left","nameLocation":"65730:4:16","nodeType":"VariableDeclaration","scope":17642,"src":"65722:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17634,"name":"uint256","nodeType":"ElementaryTypeName","src":"65722:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17637,"mutability":"mutable","name":"right","nameLocation":"65744:5:16","nodeType":"VariableDeclaration","scope":17642,"src":"65736:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17636,"name":"uint256","nodeType":"ElementaryTypeName","src":"65736:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17639,"mutability":"mutable","name":"decimals","nameLocation":"65759:8:16","nodeType":"VariableDeclaration","scope":17642,"src":"65751:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17638,"name":"uint256","nodeType":"ElementaryTypeName","src":"65751:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65721:47:16"},"returnParameters":{"id":17641,"nodeType":"ParameterList","parameters":[],"src":"65782:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17654,"nodeType":"FunctionDefinition","src":"65986:109:16","nodes":[],"documentation":{"id":17643,"nodeType":"StructuredDocumentation","src":"65789:192:16","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"65995:15:16","parameters":{"id":17652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17645,"mutability":"mutable","name":"left","nameLocation":"66019:4:16","nodeType":"VariableDeclaration","scope":17654,"src":"66011:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17644,"name":"uint256","nodeType":"ElementaryTypeName","src":"66011:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17647,"mutability":"mutable","name":"right","nameLocation":"66033:5:16","nodeType":"VariableDeclaration","scope":17654,"src":"66025:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17646,"name":"uint256","nodeType":"ElementaryTypeName","src":"66025:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17649,"mutability":"mutable","name":"decimals","nameLocation":"66048:8:16","nodeType":"VariableDeclaration","scope":17654,"src":"66040:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17648,"name":"uint256","nodeType":"ElementaryTypeName","src":"66040:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17651,"mutability":"mutable","name":"error","nameLocation":"66074:5:16","nodeType":"VariableDeclaration","scope":17654,"src":"66058:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17650,"name":"string","nodeType":"ElementaryTypeName","src":"66058:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66010:70:16"},"returnParameters":{"id":17653,"nodeType":"ParameterList","parameters":[],"src":"66094:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17664,"nodeType":"FunctionDefinition","src":"66243:84:16","nodes":[],"documentation":{"id":17655,"nodeType":"StructuredDocumentation","src":"66101:137:16","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"66252:15:16","parameters":{"id":17662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17657,"mutability":"mutable","name":"left","nameLocation":"66275:4:16","nodeType":"VariableDeclaration","scope":17664,"src":"66268:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17656,"name":"int256","nodeType":"ElementaryTypeName","src":"66268:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17659,"mutability":"mutable","name":"right","nameLocation":"66288:5:16","nodeType":"VariableDeclaration","scope":17664,"src":"66281:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17658,"name":"int256","nodeType":"ElementaryTypeName","src":"66281:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17661,"mutability":"mutable","name":"decimals","nameLocation":"66303:8:16","nodeType":"VariableDeclaration","scope":17664,"src":"66295:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17660,"name":"uint256","nodeType":"ElementaryTypeName","src":"66295:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66267:45:16"},"returnParameters":{"id":17663,"nodeType":"ParameterList","parameters":[],"src":"66326:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17676,"nodeType":"FunctionDefinition","src":"66529:107:16","nodes":[],"documentation":{"id":17665,"nodeType":"StructuredDocumentation","src":"66333:191:16","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"66538:15:16","parameters":{"id":17674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17667,"mutability":"mutable","name":"left","nameLocation":"66561:4:16","nodeType":"VariableDeclaration","scope":17676,"src":"66554:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17666,"name":"int256","nodeType":"ElementaryTypeName","src":"66554:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17669,"mutability":"mutable","name":"right","nameLocation":"66574:5:16","nodeType":"VariableDeclaration","scope":17676,"src":"66567:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17668,"name":"int256","nodeType":"ElementaryTypeName","src":"66567:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17671,"mutability":"mutable","name":"decimals","nameLocation":"66589:8:16","nodeType":"VariableDeclaration","scope":17676,"src":"66581:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17670,"name":"uint256","nodeType":"ElementaryTypeName","src":"66581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17673,"mutability":"mutable","name":"error","nameLocation":"66615:5:16","nodeType":"VariableDeclaration","scope":17676,"src":"66599:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17672,"name":"string","nodeType":"ElementaryTypeName","src":"66599:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66553:68:16"},"returnParameters":{"id":17675,"nodeType":"ParameterList","parameters":[],"src":"66635:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17684,"nodeType":"FunctionDefinition","src":"66728:61:16","nodes":[],"documentation":{"id":17677,"nodeType":"StructuredDocumentation","src":"66642:81:16","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"66737:8:16","parameters":{"id":17682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17679,"mutability":"mutable","name":"left","nameLocation":"66754:4:16","nodeType":"VariableDeclaration","scope":17684,"src":"66746:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17678,"name":"uint256","nodeType":"ElementaryTypeName","src":"66746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17681,"mutability":"mutable","name":"right","nameLocation":"66768:5:16","nodeType":"VariableDeclaration","scope":17684,"src":"66760:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17680,"name":"uint256","nodeType":"ElementaryTypeName","src":"66760:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66745:29:16"},"returnParameters":{"id":17683,"nodeType":"ParameterList","parameters":[],"src":"66788:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17694,"nodeType":"FunctionDefinition","src":"66943:84:16","nodes":[],"documentation":{"id":17685,"nodeType":"StructuredDocumentation","src":"66795:143:16","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"66952:8:16","parameters":{"id":17692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17687,"mutability":"mutable","name":"left","nameLocation":"66969:4:16","nodeType":"VariableDeclaration","scope":17694,"src":"66961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17686,"name":"uint256","nodeType":"ElementaryTypeName","src":"66961:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17689,"mutability":"mutable","name":"right","nameLocation":"66983:5:16","nodeType":"VariableDeclaration","scope":17694,"src":"66975:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17688,"name":"uint256","nodeType":"ElementaryTypeName","src":"66975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17691,"mutability":"mutable","name":"error","nameLocation":"67006:5:16","nodeType":"VariableDeclaration","scope":17694,"src":"66990:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17690,"name":"string","nodeType":"ElementaryTypeName","src":"66990:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66960:52:16"},"returnParameters":{"id":17693,"nodeType":"ParameterList","parameters":[],"src":"67026:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17702,"nodeType":"FunctionDefinition","src":"67118:59:16","nodes":[],"documentation":{"id":17695,"nodeType":"StructuredDocumentation","src":"67033:80:16","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"67127:8:16","parameters":{"id":17700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17697,"mutability":"mutable","name":"left","nameLocation":"67143:4:16","nodeType":"VariableDeclaration","scope":17702,"src":"67136:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17696,"name":"int256","nodeType":"ElementaryTypeName","src":"67136:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17699,"mutability":"mutable","name":"right","nameLocation":"67156:5:16","nodeType":"VariableDeclaration","scope":17702,"src":"67149:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17698,"name":"int256","nodeType":"ElementaryTypeName","src":"67149:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67135:27:16"},"returnParameters":{"id":17701,"nodeType":"ParameterList","parameters":[],"src":"67176:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17712,"nodeType":"FunctionDefinition","src":"67330:82:16","nodes":[],"documentation":{"id":17703,"nodeType":"StructuredDocumentation","src":"67183:142:16","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"67339:8:16","parameters":{"id":17710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17705,"mutability":"mutable","name":"left","nameLocation":"67355:4:16","nodeType":"VariableDeclaration","scope":17712,"src":"67348:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17704,"name":"int256","nodeType":"ElementaryTypeName","src":"67348:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17707,"mutability":"mutable","name":"right","nameLocation":"67368:5:16","nodeType":"VariableDeclaration","scope":17712,"src":"67361:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17706,"name":"int256","nodeType":"ElementaryTypeName","src":"67361:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17709,"mutability":"mutable","name":"error","nameLocation":"67391:5:16","nodeType":"VariableDeclaration","scope":17712,"src":"67375:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17708,"name":"string","nodeType":"ElementaryTypeName","src":"67375:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67347:50:16"},"returnParameters":{"id":17711,"nodeType":"ParameterList","parameters":[],"src":"67411:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17722,"nodeType":"FunctionDefinition","src":"67570:86:16","nodes":[],"documentation":{"id":17713,"nodeType":"StructuredDocumentation","src":"67418:147:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"67579:15:16","parameters":{"id":17720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17715,"mutability":"mutable","name":"left","nameLocation":"67603:4:16","nodeType":"VariableDeclaration","scope":17722,"src":"67595:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17714,"name":"uint256","nodeType":"ElementaryTypeName","src":"67595:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17717,"mutability":"mutable","name":"right","nameLocation":"67617:5:16","nodeType":"VariableDeclaration","scope":17722,"src":"67609:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17716,"name":"uint256","nodeType":"ElementaryTypeName","src":"67609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17719,"mutability":"mutable","name":"decimals","nameLocation":"67632:8:16","nodeType":"VariableDeclaration","scope":17722,"src":"67624:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17718,"name":"uint256","nodeType":"ElementaryTypeName","src":"67624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67594:47:16"},"returnParameters":{"id":17721,"nodeType":"ParameterList","parameters":[],"src":"67655:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17734,"nodeType":"FunctionDefinition","src":"67868:109:16","nodes":[],"documentation":{"id":17723,"nodeType":"StructuredDocumentation","src":"67662:201:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"67877:15:16","parameters":{"id":17732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17725,"mutability":"mutable","name":"left","nameLocation":"67901:4:16","nodeType":"VariableDeclaration","scope":17734,"src":"67893:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17724,"name":"uint256","nodeType":"ElementaryTypeName","src":"67893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17727,"mutability":"mutable","name":"right","nameLocation":"67915:5:16","nodeType":"VariableDeclaration","scope":17734,"src":"67907:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17726,"name":"uint256","nodeType":"ElementaryTypeName","src":"67907:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17729,"mutability":"mutable","name":"decimals","nameLocation":"67930:8:16","nodeType":"VariableDeclaration","scope":17734,"src":"67922:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17728,"name":"uint256","nodeType":"ElementaryTypeName","src":"67922:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17731,"mutability":"mutable","name":"error","nameLocation":"67956:5:16","nodeType":"VariableDeclaration","scope":17734,"src":"67940:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17730,"name":"string","nodeType":"ElementaryTypeName","src":"67940:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67892:70:16"},"returnParameters":{"id":17733,"nodeType":"ParameterList","parameters":[],"src":"67976:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17744,"nodeType":"FunctionDefinition","src":"68134:84:16","nodes":[],"documentation":{"id":17735,"nodeType":"StructuredDocumentation","src":"67983:146:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"68143:15:16","parameters":{"id":17742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17737,"mutability":"mutable","name":"left","nameLocation":"68166:4:16","nodeType":"VariableDeclaration","scope":17744,"src":"68159:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17736,"name":"int256","nodeType":"ElementaryTypeName","src":"68159:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17739,"mutability":"mutable","name":"right","nameLocation":"68179:5:16","nodeType":"VariableDeclaration","scope":17744,"src":"68172:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17738,"name":"int256","nodeType":"ElementaryTypeName","src":"68172:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17741,"mutability":"mutable","name":"decimals","nameLocation":"68194:8:16","nodeType":"VariableDeclaration","scope":17744,"src":"68186:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17740,"name":"uint256","nodeType":"ElementaryTypeName","src":"68186:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68158:45:16"},"returnParameters":{"id":17743,"nodeType":"ParameterList","parameters":[],"src":"68217:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17756,"nodeType":"FunctionDefinition","src":"68429:107:16","nodes":[],"documentation":{"id":17745,"nodeType":"StructuredDocumentation","src":"68224:200:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"68438:15:16","parameters":{"id":17754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17747,"mutability":"mutable","name":"left","nameLocation":"68461:4:16","nodeType":"VariableDeclaration","scope":17756,"src":"68454:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17746,"name":"int256","nodeType":"ElementaryTypeName","src":"68454:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17749,"mutability":"mutable","name":"right","nameLocation":"68474:5:16","nodeType":"VariableDeclaration","scope":17756,"src":"68467:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17748,"name":"int256","nodeType":"ElementaryTypeName","src":"68467:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17751,"mutability":"mutable","name":"decimals","nameLocation":"68489:8:16","nodeType":"VariableDeclaration","scope":17756,"src":"68481:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17750,"name":"uint256","nodeType":"ElementaryTypeName","src":"68481:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17753,"mutability":"mutable","name":"error","nameLocation":"68515:5:16","nodeType":"VariableDeclaration","scope":17756,"src":"68499:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17752,"name":"string","nodeType":"ElementaryTypeName","src":"68499:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68453:68:16"},"returnParameters":{"id":17755,"nodeType":"ParameterList","parameters":[],"src":"68535:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17764,"nodeType":"FunctionDefinition","src":"68637:61:16","nodes":[],"documentation":{"id":17757,"nodeType":"StructuredDocumentation","src":"68542:90:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"68646:8:16","parameters":{"id":17762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17759,"mutability":"mutable","name":"left","nameLocation":"68663:4:16","nodeType":"VariableDeclaration","scope":17764,"src":"68655:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17758,"name":"uint256","nodeType":"ElementaryTypeName","src":"68655:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17761,"mutability":"mutable","name":"right","nameLocation":"68677:5:16","nodeType":"VariableDeclaration","scope":17764,"src":"68669:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17760,"name":"uint256","nodeType":"ElementaryTypeName","src":"68669:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68654:29:16"},"returnParameters":{"id":17763,"nodeType":"ParameterList","parameters":[],"src":"68697:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17774,"nodeType":"FunctionDefinition","src":"68861:84:16","nodes":[],"documentation":{"id":17765,"nodeType":"StructuredDocumentation","src":"68704:152:16","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"68870:8:16","parameters":{"id":17772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17767,"mutability":"mutable","name":"left","nameLocation":"68887:4:16","nodeType":"VariableDeclaration","scope":17774,"src":"68879:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17766,"name":"uint256","nodeType":"ElementaryTypeName","src":"68879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17769,"mutability":"mutable","name":"right","nameLocation":"68901:5:16","nodeType":"VariableDeclaration","scope":17774,"src":"68893:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17768,"name":"uint256","nodeType":"ElementaryTypeName","src":"68893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17771,"mutability":"mutable","name":"error","nameLocation":"68924:5:16","nodeType":"VariableDeclaration","scope":17774,"src":"68908:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17770,"name":"string","nodeType":"ElementaryTypeName","src":"68908:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68878:52:16"},"returnParameters":{"id":17773,"nodeType":"ParameterList","parameters":[],"src":"68944:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17782,"nodeType":"FunctionDefinition","src":"69045:59:16","nodes":[],"documentation":{"id":17775,"nodeType":"StructuredDocumentation","src":"68951:89:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"69054:8:16","parameters":{"id":17780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17777,"mutability":"mutable","name":"left","nameLocation":"69070:4:16","nodeType":"VariableDeclaration","scope":17782,"src":"69063:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17776,"name":"int256","nodeType":"ElementaryTypeName","src":"69063:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17779,"mutability":"mutable","name":"right","nameLocation":"69083:5:16","nodeType":"VariableDeclaration","scope":17782,"src":"69076:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17778,"name":"int256","nodeType":"ElementaryTypeName","src":"69076:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"69062:27:16"},"returnParameters":{"id":17781,"nodeType":"ParameterList","parameters":[],"src":"69103:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17792,"nodeType":"FunctionDefinition","src":"69266:82:16","nodes":[],"documentation":{"id":17783,"nodeType":"StructuredDocumentation","src":"69110:151:16","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"69275:8:16","parameters":{"id":17790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17785,"mutability":"mutable","name":"left","nameLocation":"69291:4:16","nodeType":"VariableDeclaration","scope":17792,"src":"69284:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17784,"name":"int256","nodeType":"ElementaryTypeName","src":"69284:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17787,"mutability":"mutable","name":"right","nameLocation":"69304:5:16","nodeType":"VariableDeclaration","scope":17792,"src":"69297:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17786,"name":"int256","nodeType":"ElementaryTypeName","src":"69297:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17789,"mutability":"mutable","name":"error","nameLocation":"69327:5:16","nodeType":"VariableDeclaration","scope":17792,"src":"69311:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17788,"name":"string","nodeType":"ElementaryTypeName","src":"69311:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69283:50:16"},"returnParameters":{"id":17791,"nodeType":"ParameterList","parameters":[],"src":"69347:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17802,"nodeType":"FunctionDefinition","src":"69494:86:16","nodes":[],"documentation":{"id":17793,"nodeType":"StructuredDocumentation","src":"69354:135:16","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"69503:15:16","parameters":{"id":17800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17795,"mutability":"mutable","name":"left","nameLocation":"69527:4:16","nodeType":"VariableDeclaration","scope":17802,"src":"69519:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17794,"name":"uint256","nodeType":"ElementaryTypeName","src":"69519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17797,"mutability":"mutable","name":"right","nameLocation":"69541:5:16","nodeType":"VariableDeclaration","scope":17802,"src":"69533:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17796,"name":"uint256","nodeType":"ElementaryTypeName","src":"69533:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17799,"mutability":"mutable","name":"decimals","nameLocation":"69556:8:16","nodeType":"VariableDeclaration","scope":17802,"src":"69548:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17798,"name":"uint256","nodeType":"ElementaryTypeName","src":"69548:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69518:47:16"},"returnParameters":{"id":17801,"nodeType":"ParameterList","parameters":[],"src":"69579:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17814,"nodeType":"FunctionDefinition","src":"69780:109:16","nodes":[],"documentation":{"id":17803,"nodeType":"StructuredDocumentation","src":"69586:189:16","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"69789:15:16","parameters":{"id":17812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17805,"mutability":"mutable","name":"left","nameLocation":"69813:4:16","nodeType":"VariableDeclaration","scope":17814,"src":"69805:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17804,"name":"uint256","nodeType":"ElementaryTypeName","src":"69805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17807,"mutability":"mutable","name":"right","nameLocation":"69827:5:16","nodeType":"VariableDeclaration","scope":17814,"src":"69819:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17806,"name":"uint256","nodeType":"ElementaryTypeName","src":"69819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17809,"mutability":"mutable","name":"decimals","nameLocation":"69842:8:16","nodeType":"VariableDeclaration","scope":17814,"src":"69834:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17808,"name":"uint256","nodeType":"ElementaryTypeName","src":"69834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17811,"mutability":"mutable","name":"error","nameLocation":"69868:5:16","nodeType":"VariableDeclaration","scope":17814,"src":"69852:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17810,"name":"string","nodeType":"ElementaryTypeName","src":"69852:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69804:70:16"},"returnParameters":{"id":17813,"nodeType":"ParameterList","parameters":[],"src":"69888:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17824,"nodeType":"FunctionDefinition","src":"70034:84:16","nodes":[],"documentation":{"id":17815,"nodeType":"StructuredDocumentation","src":"69895:134:16","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"70043:15:16","parameters":{"id":17822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17817,"mutability":"mutable","name":"left","nameLocation":"70066:4:16","nodeType":"VariableDeclaration","scope":17824,"src":"70059:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17816,"name":"int256","nodeType":"ElementaryTypeName","src":"70059:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17819,"mutability":"mutable","name":"right","nameLocation":"70079:5:16","nodeType":"VariableDeclaration","scope":17824,"src":"70072:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17818,"name":"int256","nodeType":"ElementaryTypeName","src":"70072:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17821,"mutability":"mutable","name":"decimals","nameLocation":"70094:8:16","nodeType":"VariableDeclaration","scope":17824,"src":"70086:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17820,"name":"uint256","nodeType":"ElementaryTypeName","src":"70086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70058:45:16"},"returnParameters":{"id":17823,"nodeType":"ParameterList","parameters":[],"src":"70117:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17836,"nodeType":"FunctionDefinition","src":"70317:107:16","nodes":[],"documentation":{"id":17825,"nodeType":"StructuredDocumentation","src":"70124:188:16","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"70326:15:16","parameters":{"id":17834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17827,"mutability":"mutable","name":"left","nameLocation":"70349:4:16","nodeType":"VariableDeclaration","scope":17836,"src":"70342:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17826,"name":"int256","nodeType":"ElementaryTypeName","src":"70342:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17829,"mutability":"mutable","name":"right","nameLocation":"70362:5:16","nodeType":"VariableDeclaration","scope":17836,"src":"70355:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17828,"name":"int256","nodeType":"ElementaryTypeName","src":"70355:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17831,"mutability":"mutable","name":"decimals","nameLocation":"70377:8:16","nodeType":"VariableDeclaration","scope":17836,"src":"70369:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17830,"name":"uint256","nodeType":"ElementaryTypeName","src":"70369:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17833,"mutability":"mutable","name":"error","nameLocation":"70403:5:16","nodeType":"VariableDeclaration","scope":17836,"src":"70387:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17832,"name":"string","nodeType":"ElementaryTypeName","src":"70387:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70341:68:16"},"returnParameters":{"id":17835,"nodeType":"ParameterList","parameters":[],"src":"70423:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17844,"nodeType":"FunctionDefinition","src":"70513:61:16","nodes":[],"documentation":{"id":17837,"nodeType":"StructuredDocumentation","src":"70430:78:16","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"70522:8:16","parameters":{"id":17842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17839,"mutability":"mutable","name":"left","nameLocation":"70539:4:16","nodeType":"VariableDeclaration","scope":17844,"src":"70531:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17838,"name":"uint256","nodeType":"ElementaryTypeName","src":"70531:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17841,"mutability":"mutable","name":"right","nameLocation":"70553:5:16","nodeType":"VariableDeclaration","scope":17844,"src":"70545:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17840,"name":"uint256","nodeType":"ElementaryTypeName","src":"70545:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70530:29:16"},"returnParameters":{"id":17843,"nodeType":"ParameterList","parameters":[],"src":"70573:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17854,"nodeType":"FunctionDefinition","src":"70725:84:16","nodes":[],"documentation":{"id":17845,"nodeType":"StructuredDocumentation","src":"70580:140:16","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"70734:8:16","parameters":{"id":17852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17847,"mutability":"mutable","name":"left","nameLocation":"70751:4:16","nodeType":"VariableDeclaration","scope":17854,"src":"70743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17846,"name":"uint256","nodeType":"ElementaryTypeName","src":"70743:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17849,"mutability":"mutable","name":"right","nameLocation":"70765:5:16","nodeType":"VariableDeclaration","scope":17854,"src":"70757:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17848,"name":"uint256","nodeType":"ElementaryTypeName","src":"70757:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17851,"mutability":"mutable","name":"error","nameLocation":"70788:5:16","nodeType":"VariableDeclaration","scope":17854,"src":"70772:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17850,"name":"string","nodeType":"ElementaryTypeName","src":"70772:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70742:52:16"},"returnParameters":{"id":17853,"nodeType":"ParameterList","parameters":[],"src":"70808:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17862,"nodeType":"FunctionDefinition","src":"70897:59:16","nodes":[],"documentation":{"id":17855,"nodeType":"StructuredDocumentation","src":"70815:77:16","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"70906:8:16","parameters":{"id":17860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17857,"mutability":"mutable","name":"left","nameLocation":"70922:4:16","nodeType":"VariableDeclaration","scope":17862,"src":"70915:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17856,"name":"int256","nodeType":"ElementaryTypeName","src":"70915:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17859,"mutability":"mutable","name":"right","nameLocation":"70935:5:16","nodeType":"VariableDeclaration","scope":17862,"src":"70928:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17858,"name":"int256","nodeType":"ElementaryTypeName","src":"70928:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70914:27:16"},"returnParameters":{"id":17861,"nodeType":"ParameterList","parameters":[],"src":"70955:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17872,"nodeType":"FunctionDefinition","src":"71106:82:16","nodes":[],"documentation":{"id":17863,"nodeType":"StructuredDocumentation","src":"70962:139:16","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"71115:8:16","parameters":{"id":17870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17865,"mutability":"mutable","name":"left","nameLocation":"71131:4:16","nodeType":"VariableDeclaration","scope":17872,"src":"71124:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17864,"name":"int256","nodeType":"ElementaryTypeName","src":"71124:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17867,"mutability":"mutable","name":"right","nameLocation":"71144:5:16","nodeType":"VariableDeclaration","scope":17872,"src":"71137:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17866,"name":"int256","nodeType":"ElementaryTypeName","src":"71137:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17869,"mutability":"mutable","name":"error","nameLocation":"71167:5:16","nodeType":"VariableDeclaration","scope":17872,"src":"71151:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17868,"name":"string","nodeType":"ElementaryTypeName","src":"71151:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71123:50:16"},"returnParameters":{"id":17871,"nodeType":"ParameterList","parameters":[],"src":"71187:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17882,"nodeType":"FunctionDefinition","src":"71301:89:16","nodes":[],"documentation":{"id":17873,"nodeType":"StructuredDocumentation","src":"71194:102:16","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"71310:18:16","parameters":{"id":17880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17875,"mutability":"mutable","name":"left","nameLocation":"71337:4:16","nodeType":"VariableDeclaration","scope":17882,"src":"71329:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17874,"name":"uint256","nodeType":"ElementaryTypeName","src":"71329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17877,"mutability":"mutable","name":"right","nameLocation":"71351:5:16","nodeType":"VariableDeclaration","scope":17882,"src":"71343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17876,"name":"uint256","nodeType":"ElementaryTypeName","src":"71343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17879,"mutability":"mutable","name":"decimals","nameLocation":"71366:8:16","nodeType":"VariableDeclaration","scope":17882,"src":"71358:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17878,"name":"uint256","nodeType":"ElementaryTypeName","src":"71358:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71328:47:16"},"returnParameters":{"id":17881,"nodeType":"ParameterList","parameters":[],"src":"71389:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17894,"nodeType":"FunctionDefinition","src":"71565:112:16","nodes":[],"documentation":{"id":17883,"nodeType":"StructuredDocumentation","src":"71396:164:16","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"71574:18:16","parameters":{"id":17892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17885,"mutability":"mutable","name":"left","nameLocation":"71601:4:16","nodeType":"VariableDeclaration","scope":17894,"src":"71593:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17884,"name":"uint256","nodeType":"ElementaryTypeName","src":"71593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17887,"mutability":"mutable","name":"right","nameLocation":"71615:5:16","nodeType":"VariableDeclaration","scope":17894,"src":"71607:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17886,"name":"uint256","nodeType":"ElementaryTypeName","src":"71607:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17889,"mutability":"mutable","name":"decimals","nameLocation":"71630:8:16","nodeType":"VariableDeclaration","scope":17894,"src":"71622:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17888,"name":"uint256","nodeType":"ElementaryTypeName","src":"71622:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17891,"mutability":"mutable","name":"error","nameLocation":"71656:5:16","nodeType":"VariableDeclaration","scope":17894,"src":"71640:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17890,"name":"string","nodeType":"ElementaryTypeName","src":"71640:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71592:70:16"},"returnParameters":{"id":17893,"nodeType":"ParameterList","parameters":[],"src":"71676:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17904,"nodeType":"FunctionDefinition","src":"71789:87:16","nodes":[],"documentation":{"id":17895,"nodeType":"StructuredDocumentation","src":"71683:101:16","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"71798:18:16","parameters":{"id":17902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17897,"mutability":"mutable","name":"left","nameLocation":"71824:4:16","nodeType":"VariableDeclaration","scope":17904,"src":"71817:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17896,"name":"int256","nodeType":"ElementaryTypeName","src":"71817:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17899,"mutability":"mutable","name":"right","nameLocation":"71837:5:16","nodeType":"VariableDeclaration","scope":17904,"src":"71830:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17898,"name":"int256","nodeType":"ElementaryTypeName","src":"71830:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17901,"mutability":"mutable","name":"decimals","nameLocation":"71852:8:16","nodeType":"VariableDeclaration","scope":17904,"src":"71844:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17900,"name":"uint256","nodeType":"ElementaryTypeName","src":"71844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71816:45:16"},"returnParameters":{"id":17903,"nodeType":"ParameterList","parameters":[],"src":"71875:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17916,"nodeType":"FunctionDefinition","src":"72050:110:16","nodes":[],"documentation":{"id":17905,"nodeType":"StructuredDocumentation","src":"71882:163:16","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"72059:18:16","parameters":{"id":17914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17907,"mutability":"mutable","name":"left","nameLocation":"72085:4:16","nodeType":"VariableDeclaration","scope":17916,"src":"72078:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17906,"name":"int256","nodeType":"ElementaryTypeName","src":"72078:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17909,"mutability":"mutable","name":"right","nameLocation":"72098:5:16","nodeType":"VariableDeclaration","scope":17916,"src":"72091:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17908,"name":"int256","nodeType":"ElementaryTypeName","src":"72091:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17911,"mutability":"mutable","name":"decimals","nameLocation":"72113:8:16","nodeType":"VariableDeclaration","scope":17916,"src":"72105:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17910,"name":"uint256","nodeType":"ElementaryTypeName","src":"72105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17913,"mutability":"mutable","name":"error","nameLocation":"72139:5:16","nodeType":"VariableDeclaration","scope":17916,"src":"72123:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17912,"name":"string","nodeType":"ElementaryTypeName","src":"72123:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72077:68:16"},"returnParameters":{"id":17915,"nodeType":"ParameterList","parameters":[],"src":"72159:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17924,"nodeType":"FunctionDefinition","src":"72220:58:16","nodes":[],"documentation":{"id":17917,"nodeType":"StructuredDocumentation","src":"72166:49:16","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72229:11:16","parameters":{"id":17922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17919,"mutability":"mutable","name":"left","nameLocation":"72246:4:16","nodeType":"VariableDeclaration","scope":17924,"src":"72241:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17918,"name":"bool","nodeType":"ElementaryTypeName","src":"72241:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17921,"mutability":"mutable","name":"right","nameLocation":"72257:5:16","nodeType":"VariableDeclaration","scope":17924,"src":"72252:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17920,"name":"bool","nodeType":"ElementaryTypeName","src":"72252:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"72240:23:16"},"returnParameters":{"id":17923,"nodeType":"ParameterList","parameters":[],"src":"72277:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17934,"nodeType":"FunctionDefinition","src":"72395:81:16","nodes":[],"documentation":{"id":17925,"nodeType":"StructuredDocumentation","src":"72284:106:16","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72404:11:16","parameters":{"id":17932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17927,"mutability":"mutable","name":"left","nameLocation":"72421:4:16","nodeType":"VariableDeclaration","scope":17934,"src":"72416:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17926,"name":"bool","nodeType":"ElementaryTypeName","src":"72416:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17929,"mutability":"mutable","name":"right","nameLocation":"72432:5:16","nodeType":"VariableDeclaration","scope":17934,"src":"72427:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17928,"name":"bool","nodeType":"ElementaryTypeName","src":"72427:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17931,"mutability":"mutable","name":"error","nameLocation":"72455:5:16","nodeType":"VariableDeclaration","scope":17934,"src":"72439:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17930,"name":"string","nodeType":"ElementaryTypeName","src":"72439:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72415:46:16"},"returnParameters":{"id":17933,"nodeType":"ParameterList","parameters":[],"src":"72475:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17942,"nodeType":"FunctionDefinition","src":"72538:80:16","nodes":[],"documentation":{"id":17935,"nodeType":"StructuredDocumentation","src":"72482:51:16","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72547:11:16","parameters":{"id":17940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17937,"mutability":"mutable","name":"left","nameLocation":"72575:4:16","nodeType":"VariableDeclaration","scope":17942,"src":"72559:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17936,"name":"string","nodeType":"ElementaryTypeName","src":"72559:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17939,"mutability":"mutable","name":"right","nameLocation":"72597:5:16","nodeType":"VariableDeclaration","scope":17942,"src":"72581:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17938,"name":"string","nodeType":"ElementaryTypeName","src":"72581:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72558:45:16"},"returnParameters":{"id":17941,"nodeType":"ParameterList","parameters":[],"src":"72617:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17952,"nodeType":"FunctionDefinition","src":"72737:103:16","nodes":[],"documentation":{"id":17943,"nodeType":"StructuredDocumentation","src":"72624:108:16","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72746:11:16","parameters":{"id":17950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17945,"mutability":"mutable","name":"left","nameLocation":"72774:4:16","nodeType":"VariableDeclaration","scope":17952,"src":"72758:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17944,"name":"string","nodeType":"ElementaryTypeName","src":"72758:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17947,"mutability":"mutable","name":"right","nameLocation":"72796:5:16","nodeType":"VariableDeclaration","scope":17952,"src":"72780:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17946,"name":"string","nodeType":"ElementaryTypeName","src":"72780:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17949,"mutability":"mutable","name":"error","nameLocation":"72819:5:16","nodeType":"VariableDeclaration","scope":17952,"src":"72803:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17948,"name":"string","nodeType":"ElementaryTypeName","src":"72803:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72757:68:16"},"returnParameters":{"id":17951,"nodeType":"ParameterList","parameters":[],"src":"72839:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17960,"nodeType":"FunctionDefinition","src":"72901:78:16","nodes":[],"documentation":{"id":17953,"nodeType":"StructuredDocumentation","src":"72846:50:16","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72910:11:16","parameters":{"id":17958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17955,"mutability":"mutable","name":"left","nameLocation":"72937:4:16","nodeType":"VariableDeclaration","scope":17960,"src":"72922:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17954,"name":"bytes","nodeType":"ElementaryTypeName","src":"72922:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17957,"mutability":"mutable","name":"right","nameLocation":"72958:5:16","nodeType":"VariableDeclaration","scope":17960,"src":"72943:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17956,"name":"bytes","nodeType":"ElementaryTypeName","src":"72943:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"72921:43:16"},"returnParameters":{"id":17959,"nodeType":"ParameterList","parameters":[],"src":"72978:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17970,"nodeType":"FunctionDefinition","src":"73097:101:16","nodes":[],"documentation":{"id":17961,"nodeType":"StructuredDocumentation","src":"72985:107:16","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73106:11:16","parameters":{"id":17968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17963,"mutability":"mutable","name":"left","nameLocation":"73133:4:16","nodeType":"VariableDeclaration","scope":17970,"src":"73118:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17962,"name":"bytes","nodeType":"ElementaryTypeName","src":"73118:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17965,"mutability":"mutable","name":"right","nameLocation":"73154:5:16","nodeType":"VariableDeclaration","scope":17970,"src":"73139:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17964,"name":"bytes","nodeType":"ElementaryTypeName","src":"73139:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17967,"mutability":"mutable","name":"error","nameLocation":"73177:5:16","nodeType":"VariableDeclaration","scope":17970,"src":"73161:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17966,"name":"string","nodeType":"ElementaryTypeName","src":"73161:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73117:66:16"},"returnParameters":{"id":17969,"nodeType":"ParameterList","parameters":[],"src":"73197:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17980,"nodeType":"FunctionDefinition","src":"73268:80:16","nodes":[],"documentation":{"id":17971,"nodeType":"StructuredDocumentation","src":"73204:59:16","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73277:11:16","parameters":{"id":17978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17974,"mutability":"mutable","name":"left","nameLocation":"73305:4:16","nodeType":"VariableDeclaration","scope":17980,"src":"73289:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17972,"name":"bool","nodeType":"ElementaryTypeName","src":"73289:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17973,"nodeType":"ArrayTypeName","src":"73289:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17977,"mutability":"mutable","name":"right","nameLocation":"73327:5:16","nodeType":"VariableDeclaration","scope":17980,"src":"73311:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17975,"name":"bool","nodeType":"ElementaryTypeName","src":"73311:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17976,"nodeType":"ArrayTypeName","src":"73311:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"73288:45:16"},"returnParameters":{"id":17979,"nodeType":"ParameterList","parameters":[],"src":"73347:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17992,"nodeType":"FunctionDefinition","src":"73475:103:16","nodes":[],"documentation":{"id":17981,"nodeType":"StructuredDocumentation","src":"73354:116:16","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73484:11:16","parameters":{"id":17990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17984,"mutability":"mutable","name":"left","nameLocation":"73512:4:16","nodeType":"VariableDeclaration","scope":17992,"src":"73496:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17982,"name":"bool","nodeType":"ElementaryTypeName","src":"73496:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17983,"nodeType":"ArrayTypeName","src":"73496:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17987,"mutability":"mutable","name":"right","nameLocation":"73534:5:16","nodeType":"VariableDeclaration","scope":17992,"src":"73518:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17985,"name":"bool","nodeType":"ElementaryTypeName","src":"73518:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17986,"nodeType":"ArrayTypeName","src":"73518:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17989,"mutability":"mutable","name":"error","nameLocation":"73557:5:16","nodeType":"VariableDeclaration","scope":17992,"src":"73541:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17988,"name":"string","nodeType":"ElementaryTypeName","src":"73541:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73495:68:16"},"returnParameters":{"id":17991,"nodeType":"ParameterList","parameters":[],"src":"73577:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18002,"nodeType":"FunctionDefinition","src":"73651:86:16","nodes":[],"documentation":{"id":17993,"nodeType":"StructuredDocumentation","src":"73584:62:16","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73660:11:16","parameters":{"id":18000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17996,"mutability":"mutable","name":"left","nameLocation":"73691:4:16","nodeType":"VariableDeclaration","scope":18002,"src":"73672:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17994,"name":"uint256","nodeType":"ElementaryTypeName","src":"73672:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17995,"nodeType":"ArrayTypeName","src":"73672:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17999,"mutability":"mutable","name":"right","nameLocation":"73716:5:16","nodeType":"VariableDeclaration","scope":18002,"src":"73697:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17997,"name":"uint256","nodeType":"ElementaryTypeName","src":"73697:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17998,"nodeType":"ArrayTypeName","src":"73697:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"73671:51:16"},"returnParameters":{"id":18001,"nodeType":"ParameterList","parameters":[],"src":"73736:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18014,"nodeType":"FunctionDefinition","src":"73867:109:16","nodes":[],"documentation":{"id":18003,"nodeType":"StructuredDocumentation","src":"73743:119:16","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73876:11:16","parameters":{"id":18012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18006,"mutability":"mutable","name":"left","nameLocation":"73907:4:16","nodeType":"VariableDeclaration","scope":18014,"src":"73888:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18004,"name":"uint256","nodeType":"ElementaryTypeName","src":"73888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18005,"nodeType":"ArrayTypeName","src":"73888:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18009,"mutability":"mutable","name":"right","nameLocation":"73932:5:16","nodeType":"VariableDeclaration","scope":18014,"src":"73913:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18007,"name":"uint256","nodeType":"ElementaryTypeName","src":"73913:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18008,"nodeType":"ArrayTypeName","src":"73913:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18011,"mutability":"mutable","name":"error","nameLocation":"73955:5:16","nodeType":"VariableDeclaration","scope":18014,"src":"73939:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18010,"name":"string","nodeType":"ElementaryTypeName","src":"73939:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73887:74:16"},"returnParameters":{"id":18013,"nodeType":"ParameterList","parameters":[],"src":"73975:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18024,"nodeType":"FunctionDefinition","src":"74048:84:16","nodes":[],"documentation":{"id":18015,"nodeType":"StructuredDocumentation","src":"73982:61:16","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74057:11:16","parameters":{"id":18022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18018,"mutability":"mutable","name":"left","nameLocation":"74087:4:16","nodeType":"VariableDeclaration","scope":18024,"src":"74069:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18016,"name":"int256","nodeType":"ElementaryTypeName","src":"74069:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18017,"nodeType":"ArrayTypeName","src":"74069:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18021,"mutability":"mutable","name":"right","nameLocation":"74111:5:16","nodeType":"VariableDeclaration","scope":18024,"src":"74093:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18019,"name":"int256","nodeType":"ElementaryTypeName","src":"74093:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18020,"nodeType":"ArrayTypeName","src":"74093:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"74068:49:16"},"returnParameters":{"id":18023,"nodeType":"ParameterList","parameters":[],"src":"74131:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18036,"nodeType":"FunctionDefinition","src":"74261:107:16","nodes":[],"documentation":{"id":18025,"nodeType":"StructuredDocumentation","src":"74138:118:16","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74270:11:16","parameters":{"id":18034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18028,"mutability":"mutable","name":"left","nameLocation":"74300:4:16","nodeType":"VariableDeclaration","scope":18036,"src":"74282:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18026,"name":"int256","nodeType":"ElementaryTypeName","src":"74282:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18027,"nodeType":"ArrayTypeName","src":"74282:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18031,"mutability":"mutable","name":"right","nameLocation":"74324:5:16","nodeType":"VariableDeclaration","scope":18036,"src":"74306:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18029,"name":"int256","nodeType":"ElementaryTypeName","src":"74306:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18030,"nodeType":"ArrayTypeName","src":"74306:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18033,"mutability":"mutable","name":"error","nameLocation":"74347:5:16","nodeType":"VariableDeclaration","scope":18036,"src":"74331:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18032,"name":"string","nodeType":"ElementaryTypeName","src":"74331:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74281:72:16"},"returnParameters":{"id":18035,"nodeType":"ParameterList","parameters":[],"src":"74367:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18044,"nodeType":"FunctionDefinition","src":"74431:64:16","nodes":[],"documentation":{"id":18037,"nodeType":"StructuredDocumentation","src":"74374:52:16","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74440:11:16","parameters":{"id":18042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18039,"mutability":"mutable","name":"left","nameLocation":"74460:4:16","nodeType":"VariableDeclaration","scope":18044,"src":"74452:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18038,"name":"uint256","nodeType":"ElementaryTypeName","src":"74452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18041,"mutability":"mutable","name":"right","nameLocation":"74474:5:16","nodeType":"VariableDeclaration","scope":18044,"src":"74466:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18040,"name":"uint256","nodeType":"ElementaryTypeName","src":"74466:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74451:29:16"},"returnParameters":{"id":18043,"nodeType":"ParameterList","parameters":[],"src":"74494:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18054,"nodeType":"FunctionDefinition","src":"74568:86:16","nodes":[],"documentation":{"id":18045,"nodeType":"StructuredDocumentation","src":"74501:62:16","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74577:11:16","parameters":{"id":18052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18048,"mutability":"mutable","name":"left","nameLocation":"74608:4:16","nodeType":"VariableDeclaration","scope":18054,"src":"74589:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18046,"name":"address","nodeType":"ElementaryTypeName","src":"74589:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18047,"nodeType":"ArrayTypeName","src":"74589:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18051,"mutability":"mutable","name":"right","nameLocation":"74633:5:16","nodeType":"VariableDeclaration","scope":18054,"src":"74614:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18049,"name":"address","nodeType":"ElementaryTypeName","src":"74614:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18050,"nodeType":"ArrayTypeName","src":"74614:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"74588:51:16"},"returnParameters":{"id":18053,"nodeType":"ParameterList","parameters":[],"src":"74653:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18066,"nodeType":"FunctionDefinition","src":"74784:109:16","nodes":[],"documentation":{"id":18055,"nodeType":"StructuredDocumentation","src":"74660:119:16","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74793:11:16","parameters":{"id":18064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18058,"mutability":"mutable","name":"left","nameLocation":"74824:4:16","nodeType":"VariableDeclaration","scope":18066,"src":"74805:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18056,"name":"address","nodeType":"ElementaryTypeName","src":"74805:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18057,"nodeType":"ArrayTypeName","src":"74805:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18061,"mutability":"mutable","name":"right","nameLocation":"74849:5:16","nodeType":"VariableDeclaration","scope":18066,"src":"74830:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18059,"name":"address","nodeType":"ElementaryTypeName","src":"74830:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18060,"nodeType":"ArrayTypeName","src":"74830:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18063,"mutability":"mutable","name":"error","nameLocation":"74872:5:16","nodeType":"VariableDeclaration","scope":18066,"src":"74856:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18062,"name":"string","nodeType":"ElementaryTypeName","src":"74856:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74804:74:16"},"returnParameters":{"id":18065,"nodeType":"ParameterList","parameters":[],"src":"74892:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18076,"nodeType":"FunctionDefinition","src":"74966:86:16","nodes":[],"documentation":{"id":18067,"nodeType":"StructuredDocumentation","src":"74899:62:16","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74975:11:16","parameters":{"id":18074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18070,"mutability":"mutable","name":"left","nameLocation":"75006:4:16","nodeType":"VariableDeclaration","scope":18076,"src":"74987:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74987:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18069,"nodeType":"ArrayTypeName","src":"74987:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18073,"mutability":"mutable","name":"right","nameLocation":"75031:5:16","nodeType":"VariableDeclaration","scope":18076,"src":"75012:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75012:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18072,"nodeType":"ArrayTypeName","src":"75012:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"74986:51:16"},"returnParameters":{"id":18075,"nodeType":"ParameterList","parameters":[],"src":"75051:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18088,"nodeType":"FunctionDefinition","src":"75182:109:16","nodes":[],"documentation":{"id":18077,"nodeType":"StructuredDocumentation","src":"75058:119:16","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"75191:11:16","parameters":{"id":18086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18080,"mutability":"mutable","name":"left","nameLocation":"75222:4:16","nodeType":"VariableDeclaration","scope":18088,"src":"75203:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75203:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18079,"nodeType":"ArrayTypeName","src":"75203:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18083,"mutability":"mutable","name":"right","nameLocation":"75247:5:16","nodeType":"VariableDeclaration","scope":18088,"src":"75228:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75228:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18082,"nodeType":"ArrayTypeName","src":"75228:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18085,"mutability":"mutable","name":"error","nameLocation":"75270:5:16","nodeType":"VariableDeclaration","scope":18088,"src":"75254:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18084,"name":"string","nodeType":"ElementaryTypeName","src":"75254:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75202:74:16"},"returnParameters":{"id":18087,"nodeType":"ParameterList","parameters":[],"src":"75290:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18098,"nodeType":"FunctionDefinition","src":"75363:84:16","nodes":[],"documentation":{"id":18089,"nodeType":"StructuredDocumentation","src":"75297:61:16","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"75372:11:16","parameters":{"id":18096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18092,"mutability":"mutable","name":"left","nameLocation":"75402:4:16","nodeType":"VariableDeclaration","scope":18098,"src":"75384:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18090,"name":"string","nodeType":"ElementaryTypeName","src":"75384:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18091,"nodeType":"ArrayTypeName","src":"75384:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18095,"mutability":"mutable","name":"right","nameLocation":"75426:5:16","nodeType":"VariableDeclaration","scope":18098,"src":"75408:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18093,"name":"string","nodeType":"ElementaryTypeName","src":"75408:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18094,"nodeType":"ArrayTypeName","src":"75408:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"75383:49:16"},"returnParameters":{"id":18097,"nodeType":"ParameterList","parameters":[],"src":"75446:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18110,"nodeType":"FunctionDefinition","src":"75576:107:16","nodes":[],"documentation":{"id":18099,"nodeType":"StructuredDocumentation","src":"75453:118:16","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"75585:11:16","parameters":{"id":18108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18102,"mutability":"mutable","name":"left","nameLocation":"75615:4:16","nodeType":"VariableDeclaration","scope":18110,"src":"75597:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18100,"name":"string","nodeType":"ElementaryTypeName","src":"75597:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18101,"nodeType":"ArrayTypeName","src":"75597:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18105,"mutability":"mutable","name":"right","nameLocation":"75639:5:16","nodeType":"VariableDeclaration","scope":18110,"src":"75621:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18103,"name":"string","nodeType":"ElementaryTypeName","src":"75621:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18104,"nodeType":"ArrayTypeName","src":"75621:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18107,"mutability":"mutable","name":"error","nameLocation":"75662:5:16","nodeType":"VariableDeclaration","scope":18110,"src":"75646:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18106,"name":"string","nodeType":"ElementaryTypeName","src":"75646:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75596:72:16"},"returnParameters":{"id":18109,"nodeType":"ParameterList","parameters":[],"src":"75682:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18120,"nodeType":"FunctionDefinition","src":"75754:82:16","nodes":[],"documentation":{"id":18111,"nodeType":"StructuredDocumentation","src":"75689:60:16","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"75763:11:16","parameters":{"id":18118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18114,"mutability":"mutable","name":"left","nameLocation":"75792:4:16","nodeType":"VariableDeclaration","scope":18120,"src":"75775:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18112,"name":"bytes","nodeType":"ElementaryTypeName","src":"75775:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18113,"nodeType":"ArrayTypeName","src":"75775:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18117,"mutability":"mutable","name":"right","nameLocation":"75815:5:16","nodeType":"VariableDeclaration","scope":18120,"src":"75798:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18115,"name":"bytes","nodeType":"ElementaryTypeName","src":"75798:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18116,"nodeType":"ArrayTypeName","src":"75798:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"75774:47:16"},"returnParameters":{"id":18119,"nodeType":"ParameterList","parameters":[],"src":"75835:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18132,"nodeType":"FunctionDefinition","src":"75964:105:16","nodes":[],"documentation":{"id":18121,"nodeType":"StructuredDocumentation","src":"75842:117:16","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"75973:11:16","parameters":{"id":18130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18124,"mutability":"mutable","name":"left","nameLocation":"76002:4:16","nodeType":"VariableDeclaration","scope":18132,"src":"75985:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18122,"name":"bytes","nodeType":"ElementaryTypeName","src":"75985:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18123,"nodeType":"ArrayTypeName","src":"75985:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18127,"mutability":"mutable","name":"right","nameLocation":"76025:5:16","nodeType":"VariableDeclaration","scope":18132,"src":"76008:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18125,"name":"bytes","nodeType":"ElementaryTypeName","src":"76008:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18126,"nodeType":"ArrayTypeName","src":"76008:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18129,"mutability":"mutable","name":"error","nameLocation":"76048:5:16","nodeType":"VariableDeclaration","scope":18132,"src":"76032:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18128,"name":"string","nodeType":"ElementaryTypeName","src":"76032:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75984:70:16"},"returnParameters":{"id":18131,"nodeType":"ParameterList","parameters":[],"src":"76068:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18142,"nodeType":"FunctionDefinition","src":"76189:87:16","nodes":[],"documentation":{"id":18133,"nodeType":"StructuredDocumentation","src":"76075:109:16","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"76198:11:16","parameters":{"id":18140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18135,"mutability":"mutable","name":"left","nameLocation":"76218:4:16","nodeType":"VariableDeclaration","scope":18142,"src":"76210:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18134,"name":"uint256","nodeType":"ElementaryTypeName","src":"76210:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18137,"mutability":"mutable","name":"right","nameLocation":"76232:5:16","nodeType":"VariableDeclaration","scope":18142,"src":"76224:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18136,"name":"uint256","nodeType":"ElementaryTypeName","src":"76224:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18139,"mutability":"mutable","name":"error","nameLocation":"76255:5:16","nodeType":"VariableDeclaration","scope":18142,"src":"76239:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18138,"name":"string","nodeType":"ElementaryTypeName","src":"76239:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76209:52:16"},"returnParameters":{"id":18141,"nodeType":"ParameterList","parameters":[],"src":"76275:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18150,"nodeType":"FunctionDefinition","src":"76338:62:16","nodes":[],"documentation":{"id":18143,"nodeType":"StructuredDocumentation","src":"76282:51:16","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"76347:11:16","parameters":{"id":18148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18145,"mutability":"mutable","name":"left","nameLocation":"76366:4:16","nodeType":"VariableDeclaration","scope":18150,"src":"76359:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18144,"name":"int256","nodeType":"ElementaryTypeName","src":"76359:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18147,"mutability":"mutable","name":"right","nameLocation":"76379:5:16","nodeType":"VariableDeclaration","scope":18150,"src":"76372:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18146,"name":"int256","nodeType":"ElementaryTypeName","src":"76372:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"76358:27:16"},"returnParameters":{"id":18149,"nodeType":"ParameterList","parameters":[],"src":"76399:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18160,"nodeType":"FunctionDefinition","src":"76519:85:16","nodes":[],"documentation":{"id":18151,"nodeType":"StructuredDocumentation","src":"76406:108:16","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"76528:11:16","parameters":{"id":18158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18153,"mutability":"mutable","name":"left","nameLocation":"76547:4:16","nodeType":"VariableDeclaration","scope":18160,"src":"76540:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18152,"name":"int256","nodeType":"ElementaryTypeName","src":"76540:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18155,"mutability":"mutable","name":"right","nameLocation":"76560:5:16","nodeType":"VariableDeclaration","scope":18160,"src":"76553:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18154,"name":"int256","nodeType":"ElementaryTypeName","src":"76553:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18157,"mutability":"mutable","name":"error","nameLocation":"76583:5:16","nodeType":"VariableDeclaration","scope":18160,"src":"76567:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18156,"name":"string","nodeType":"ElementaryTypeName","src":"76567:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76539:50:16"},"returnParameters":{"id":18159,"nodeType":"ParameterList","parameters":[],"src":"76603:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18168,"nodeType":"FunctionDefinition","src":"76667:64:16","nodes":[],"documentation":{"id":18161,"nodeType":"StructuredDocumentation","src":"76610:52:16","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"76676:11:16","parameters":{"id":18166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18163,"mutability":"mutable","name":"left","nameLocation":"76696:4:16","nodeType":"VariableDeclaration","scope":18168,"src":"76688:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18162,"name":"address","nodeType":"ElementaryTypeName","src":"76688:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18165,"mutability":"mutable","name":"right","nameLocation":"76710:5:16","nodeType":"VariableDeclaration","scope":18168,"src":"76702:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18164,"name":"address","nodeType":"ElementaryTypeName","src":"76702:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76687:29:16"},"returnParameters":{"id":18167,"nodeType":"ParameterList","parameters":[],"src":"76730:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18178,"nodeType":"FunctionDefinition","src":"76851:87:16","nodes":[],"documentation":{"id":18169,"nodeType":"StructuredDocumentation","src":"76737:109:16","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"76860:11:16","parameters":{"id":18176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18171,"mutability":"mutable","name":"left","nameLocation":"76880:4:16","nodeType":"VariableDeclaration","scope":18178,"src":"76872:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18170,"name":"address","nodeType":"ElementaryTypeName","src":"76872:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18173,"mutability":"mutable","name":"right","nameLocation":"76894:5:16","nodeType":"VariableDeclaration","scope":18178,"src":"76886:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18172,"name":"address","nodeType":"ElementaryTypeName","src":"76886:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18175,"mutability":"mutable","name":"error","nameLocation":"76917:5:16","nodeType":"VariableDeclaration","scope":18178,"src":"76901:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18174,"name":"string","nodeType":"ElementaryTypeName","src":"76901:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76871:52:16"},"returnParameters":{"id":18177,"nodeType":"ParameterList","parameters":[],"src":"76937:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18186,"nodeType":"FunctionDefinition","src":"77001:64:16","nodes":[],"documentation":{"id":18179,"nodeType":"StructuredDocumentation","src":"76944:52:16","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77010:11:16","parameters":{"id":18184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18181,"mutability":"mutable","name":"left","nameLocation":"77030:4:16","nodeType":"VariableDeclaration","scope":18186,"src":"77022:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77022:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18183,"mutability":"mutable","name":"right","nameLocation":"77044:5:16","nodeType":"VariableDeclaration","scope":18186,"src":"77036:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77036:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77021:29:16"},"returnParameters":{"id":18185,"nodeType":"ParameterList","parameters":[],"src":"77064:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18196,"nodeType":"FunctionDefinition","src":"77185:87:16","nodes":[],"documentation":{"id":18187,"nodeType":"StructuredDocumentation","src":"77071:109:16","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77194:11:16","parameters":{"id":18194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18189,"mutability":"mutable","name":"left","nameLocation":"77214:4:16","nodeType":"VariableDeclaration","scope":18196,"src":"77206:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77206:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18191,"mutability":"mutable","name":"right","nameLocation":"77228:5:16","nodeType":"VariableDeclaration","scope":18196,"src":"77220:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77220:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18193,"mutability":"mutable","name":"error","nameLocation":"77251:5:16","nodeType":"VariableDeclaration","scope":18196,"src":"77235:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18192,"name":"string","nodeType":"ElementaryTypeName","src":"77235:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77205:52:16"},"returnParameters":{"id":18195,"nodeType":"ParameterList","parameters":[],"src":"77271:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18202,"nodeType":"FunctionDefinition","src":"77328:50:16","nodes":[],"documentation":{"id":18197,"nodeType":"StructuredDocumentation","src":"77278:45:16","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"77337:10:16","parameters":{"id":18200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18199,"mutability":"mutable","name":"condition","nameLocation":"77353:9:16","nodeType":"VariableDeclaration","scope":18202,"src":"77348:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18198,"name":"bool","nodeType":"ElementaryTypeName","src":"77348:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77347:16:16"},"returnParameters":{"id":18201,"nodeType":"ParameterList","parameters":[],"src":"77377:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18210,"nodeType":"FunctionDefinition","src":"77491:73:16","nodes":[],"documentation":{"id":18203,"nodeType":"StructuredDocumentation","src":"77384:102:16","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"77500:10:16","parameters":{"id":18208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18205,"mutability":"mutable","name":"condition","nameLocation":"77516:9:16","nodeType":"VariableDeclaration","scope":18210,"src":"77511:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18204,"name":"bool","nodeType":"ElementaryTypeName","src":"77511:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18207,"mutability":"mutable","name":"error","nameLocation":"77543:5:16","nodeType":"VariableDeclaration","scope":18210,"src":"77527:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18206,"name":"string","nodeType":"ElementaryTypeName","src":"77527:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77510:39:16"},"returnParameters":{"id":18209,"nodeType":"ParameterList","parameters":[],"src":"77563:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18216,"nodeType":"FunctionDefinition","src":"77659:46:16","nodes":[],"documentation":{"id":18211,"nodeType":"StructuredDocumentation","src":"77570:84:16","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"77668:6:16","parameters":{"id":18214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18213,"mutability":"mutable","name":"condition","nameLocation":"77680:9:16","nodeType":"VariableDeclaration","scope":18216,"src":"77675:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18212,"name":"bool","nodeType":"ElementaryTypeName","src":"77675:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77674:16:16"},"returnParameters":{"id":18215,"nodeType":"ParameterList","parameters":[],"src":"77704:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18220,"nodeType":"FunctionDefinition","src":"77795:40:16","nodes":[],"documentation":{"id":18217,"nodeType":"StructuredDocumentation","src":"77711:79:16","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"77804:14:16","parameters":{"id":18218,"nodeType":"ParameterList","parameters":[],"src":"77818:2:16"},"returnParameters":{"id":18219,"nodeType":"ParameterList","parameters":[],"src":"77834:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18226,"nodeType":"FunctionDefinition","src":"77897:56:16","nodes":[],"documentation":{"id":18221,"nodeType":"StructuredDocumentation","src":"77841:51:16","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"77906:10:16","parameters":{"id":18224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18223,"mutability":"mutable","name":"char","nameLocation":"77933:4:16","nodeType":"VariableDeclaration","scope":18226,"src":"77917:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18222,"name":"string","nodeType":"ElementaryTypeName","src":"77917:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77916:22:16"},"returnParameters":{"id":18225,"nodeType":"ParameterList","parameters":[],"src":"77952:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18234,"nodeType":"FunctionDefinition","src":"78027:68:16","nodes":[],"documentation":{"id":18227,"nodeType":"StructuredDocumentation","src":"77959:63:16","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"78036:10:16","parameters":{"id":18232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18229,"mutability":"mutable","name":"char","nameLocation":"78063:4:16","nodeType":"VariableDeclaration","scope":18234,"src":"78047:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18228,"name":"string","nodeType":"ElementaryTypeName","src":"78047:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18231,"mutability":"mutable","name":"value","nameLocation":"78074:5:16","nodeType":"VariableDeclaration","scope":18234,"src":"78069:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18230,"name":"bool","nodeType":"ElementaryTypeName","src":"78069:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"78046:34:16"},"returnParameters":{"id":18233,"nodeType":"ParameterList","parameters":[],"src":"78094:0:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18240,"nodeType":"FunctionDefinition","src":"78500:75:16","nodes":[],"documentation":{"id":18235,"nodeType":"StructuredDocumentation","src":"78101:394:16","text":"Returns the Foundry version.\n Format: <cargo_version>+<git_sha>+<build_timestamp>\n Sample output: 0.2.0+faa94c384+202407110019\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"78509:17:16","parameters":{"id":18236,"nodeType":"ParameterList","parameters":[],"src":"78526:2:16"},"returnParameters":{"id":18239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18238,"mutability":"mutable","name":"version","nameLocation":"78566:7:16","nodeType":"VariableDeclaration","scope":18240,"src":"78552:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18237,"name":"string","nodeType":"ElementaryTypeName","src":"78552:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78551:23:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18248,"nodeType":"FunctionDefinition","src":"78630:85:16","nodes":[],"documentation":{"id":18241,"nodeType":"StructuredDocumentation","src":"78581:44:16","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"78639:6:16","parameters":{"id":18244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18243,"mutability":"mutable","name":"rpcAlias","nameLocation":"78662:8:16","nodeType":"VariableDeclaration","scope":18248,"src":"78646:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18242,"name":"string","nodeType":"ElementaryTypeName","src":"78646:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78645:26:16"},"returnParameters":{"id":18247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18246,"mutability":"mutable","name":"json","nameLocation":"78709:4:16","nodeType":"VariableDeclaration","scope":18248,"src":"78695:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18245,"name":"string","nodeType":"ElementaryTypeName","src":"78695:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78694:20:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18256,"nodeType":"FunctionDefinition","src":"78780:67:16","nodes":[],"documentation":{"id":18249,"nodeType":"StructuredDocumentation","src":"78721:54:16","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"78789:13:16","parameters":{"id":18250,"nodeType":"ParameterList","parameters":[],"src":"78802:2:16"},"returnParameters":{"id":18255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18254,"mutability":"mutable","name":"urls","nameLocation":"78841:4:16","nodeType":"VariableDeclaration","scope":18256,"src":"78828:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$15144_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":18252,"nodeType":"UserDefinedTypeName","pathNode":{"id":18251,"name":"Rpc","nameLocations":["78828:3:16"],"nodeType":"IdentifierPath","referencedDeclaration":15144,"src":"78828:3:16"},"referencedDeclaration":15144,"src":"78828:3:16","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$15144_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":18253,"nodeType":"ArrayTypeName","src":"78828:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$15144_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"78827:19:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18265,"nodeType":"FunctionDefinition","src":"78918:67:16","nodes":[],"documentation":{"id":18257,"nodeType":"StructuredDocumentation","src":"78853:60:16","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"78927:7:16","parameters":{"id":18258,"nodeType":"ParameterList","parameters":[],"src":"78934:2:16"},"returnParameters":{"id":18264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18263,"mutability":"mutable","name":"urls","nameLocation":"78979:4:16","nodeType":"VariableDeclaration","scope":18265,"src":"78960:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":18259,"name":"string","nodeType":"ElementaryTypeName","src":"78960:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18261,"length":{"hexValue":"32","id":18260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78967:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"78960:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":18262,"nodeType":"ArrayTypeName","src":"78960:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"78959:25:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18271,"nodeType":"FunctionDefinition","src":"79066:42:16","nodes":[],"documentation":{"id":18266,"nodeType":"StructuredDocumentation","src":"78991:70:16","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"79075:5:16","parameters":{"id":18269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18268,"mutability":"mutable","name":"duration","nameLocation":"79089:8:16","nodeType":"VariableDeclaration","scope":18271,"src":"79081:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18267,"name":"uint256","nodeType":"ElementaryTypeName","src":"79081:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79080:18:16"},"returnParameters":{"id":18270,"nodeType":"ParameterList","parameters":[],"src":"79107:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18281,"nodeType":"FunctionDefinition","src":"79193:95:16","nodes":[],"documentation":{"id":18272,"nodeType":"StructuredDocumentation","src":"79145:43:16","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"79202:13:16","parameters":{"id":18277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18274,"mutability":"mutable","name":"toml","nameLocation":"79232:4:16","nodeType":"VariableDeclaration","scope":18281,"src":"79216:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18273,"name":"string","nodeType":"ElementaryTypeName","src":"79216:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18276,"mutability":"mutable","name":"key","nameLocation":"79254:3:16","nodeType":"VariableDeclaration","scope":18281,"src":"79238:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18275,"name":"string","nodeType":"ElementaryTypeName","src":"79238:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79215:43:16"},"returnParameters":{"id":18280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18281,"src":"79282:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18278,"name":"bool","nodeType":"ElementaryTypeName","src":"79282:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79281:6:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18291,"nodeType":"FunctionDefinition","src":"79369:101:16","nodes":[],"documentation":{"id":18282,"nodeType":"StructuredDocumentation","src":"79294:70:16","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"79378:16:16","parameters":{"id":18287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18284,"mutability":"mutable","name":"toml","nameLocation":"79411:4:16","nodeType":"VariableDeclaration","scope":18291,"src":"79395:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18283,"name":"string","nodeType":"ElementaryTypeName","src":"79395:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18286,"mutability":"mutable","name":"key","nameLocation":"79433:3:16","nodeType":"VariableDeclaration","scope":18291,"src":"79417:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18285,"name":"string","nodeType":"ElementaryTypeName","src":"79417:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79394:43:16"},"returnParameters":{"id":18290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18291,"src":"79461:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18288,"name":"address","nodeType":"ElementaryTypeName","src":"79461:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79460:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18302,"nodeType":"FunctionDefinition","src":"79553:139:16","nodes":[],"documentation":{"id":18292,"nodeType":"StructuredDocumentation","src":"79476:72:16","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"79562:21:16","parameters":{"id":18297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18294,"mutability":"mutable","name":"toml","nameLocation":"79600:4:16","nodeType":"VariableDeclaration","scope":18302,"src":"79584:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18293,"name":"string","nodeType":"ElementaryTypeName","src":"79584:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18296,"mutability":"mutable","name":"key","nameLocation":"79622:3:16","nodeType":"VariableDeclaration","scope":18302,"src":"79606:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18295,"name":"string","nodeType":"ElementaryTypeName","src":"79606:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79583:43:16"},"returnParameters":{"id":18301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18302,"src":"79674:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18298,"name":"address","nodeType":"ElementaryTypeName","src":"79674:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18299,"nodeType":"ArrayTypeName","src":"79674:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"79673:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18312,"nodeType":"FunctionDefinition","src":"79770:95:16","nodes":[],"documentation":{"id":18303,"nodeType":"StructuredDocumentation","src":"79698:67:16","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"79779:13:16","parameters":{"id":18308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18305,"mutability":"mutable","name":"toml","nameLocation":"79809:4:16","nodeType":"VariableDeclaration","scope":18312,"src":"79793:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18304,"name":"string","nodeType":"ElementaryTypeName","src":"79793:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18307,"mutability":"mutable","name":"key","nameLocation":"79831:3:16","nodeType":"VariableDeclaration","scope":18312,"src":"79815:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18306,"name":"string","nodeType":"ElementaryTypeName","src":"79815:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79792:43:16"},"returnParameters":{"id":18311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18312,"src":"79859:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18309,"name":"bool","nodeType":"ElementaryTypeName","src":"79859:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79858:6:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18323,"nodeType":"FunctionDefinition","src":"79945:109:16","nodes":[],"documentation":{"id":18313,"nodeType":"StructuredDocumentation","src":"79871:69:16","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"79954:18:16","parameters":{"id":18318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18315,"mutability":"mutable","name":"toml","nameLocation":"79989:4:16","nodeType":"VariableDeclaration","scope":18323,"src":"79973:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18314,"name":"string","nodeType":"ElementaryTypeName","src":"79973:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18317,"mutability":"mutable","name":"key","nameLocation":"80011:3:16","nodeType":"VariableDeclaration","scope":18323,"src":"79995:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18316,"name":"string","nodeType":"ElementaryTypeName","src":"79995:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79972:43:16"},"returnParameters":{"id":18322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18323,"src":"80039:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18319,"name":"bool","nodeType":"ElementaryTypeName","src":"80039:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18320,"nodeType":"ArrayTypeName","src":"80039:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"80038:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18333,"nodeType":"FunctionDefinition","src":"80133:104:16","nodes":[],"documentation":{"id":18324,"nodeType":"StructuredDocumentation","src":"80060:68:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"80142:14:16","parameters":{"id":18329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18326,"mutability":"mutable","name":"toml","nameLocation":"80173:4:16","nodeType":"VariableDeclaration","scope":18333,"src":"80157:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18325,"name":"string","nodeType":"ElementaryTypeName","src":"80157:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18328,"mutability":"mutable","name":"key","nameLocation":"80195:3:16","nodeType":"VariableDeclaration","scope":18333,"src":"80179:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18327,"name":"string","nodeType":"ElementaryTypeName","src":"80179:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80156:43:16"},"returnParameters":{"id":18332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18333,"src":"80223:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18330,"name":"bytes","nodeType":"ElementaryTypeName","src":"80223:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80222:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18343,"nodeType":"FunctionDefinition","src":"80318:101:16","nodes":[],"documentation":{"id":18334,"nodeType":"StructuredDocumentation","src":"80243:70:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"80327:16:16","parameters":{"id":18339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18336,"mutability":"mutable","name":"toml","nameLocation":"80360:4:16","nodeType":"VariableDeclaration","scope":18343,"src":"80344:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18335,"name":"string","nodeType":"ElementaryTypeName","src":"80344:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18338,"mutability":"mutable","name":"key","nameLocation":"80382:3:16","nodeType":"VariableDeclaration","scope":18343,"src":"80366:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18337,"name":"string","nodeType":"ElementaryTypeName","src":"80366:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80343:43:16"},"returnParameters":{"id":18342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18343,"src":"80410:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80410:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80409:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18354,"nodeType":"FunctionDefinition","src":"80502:139:16","nodes":[],"documentation":{"id":18344,"nodeType":"StructuredDocumentation","src":"80425:72:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"80511:21:16","parameters":{"id":18349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18346,"mutability":"mutable","name":"toml","nameLocation":"80549:4:16","nodeType":"VariableDeclaration","scope":18354,"src":"80533:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18345,"name":"string","nodeType":"ElementaryTypeName","src":"80533:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18348,"mutability":"mutable","name":"key","nameLocation":"80571:3:16","nodeType":"VariableDeclaration","scope":18354,"src":"80555:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18347,"name":"string","nodeType":"ElementaryTypeName","src":"80555:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80532:43:16"},"returnParameters":{"id":18353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18354,"src":"80623:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80623:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18351,"nodeType":"ArrayTypeName","src":"80623:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80622:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18365,"nodeType":"FunctionDefinition","src":"80722:111:16","nodes":[],"documentation":{"id":18355,"nodeType":"StructuredDocumentation","src":"80647:70:16","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"80731:19:16","parameters":{"id":18360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18357,"mutability":"mutable","name":"toml","nameLocation":"80767:4:16","nodeType":"VariableDeclaration","scope":18365,"src":"80751:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18356,"name":"string","nodeType":"ElementaryTypeName","src":"80751:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18359,"mutability":"mutable","name":"key","nameLocation":"80789:3:16","nodeType":"VariableDeclaration","scope":18365,"src":"80773:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18358,"name":"string","nodeType":"ElementaryTypeName","src":"80773:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80750:43:16"},"returnParameters":{"id":18364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18365,"src":"80817:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18361,"name":"bytes","nodeType":"ElementaryTypeName","src":"80817:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18362,"nodeType":"ArrayTypeName","src":"80817:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"80816:16:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18375,"nodeType":"FunctionDefinition","src":"80913:96:16","nodes":[],"documentation":{"id":18366,"nodeType":"StructuredDocumentation","src":"80839:69:16","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"80922:12:16","parameters":{"id":18371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18368,"mutability":"mutable","name":"toml","nameLocation":"80951:4:16","nodeType":"VariableDeclaration","scope":18375,"src":"80935:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18367,"name":"string","nodeType":"ElementaryTypeName","src":"80935:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18370,"mutability":"mutable","name":"key","nameLocation":"80973:3:16","nodeType":"VariableDeclaration","scope":18375,"src":"80957:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18369,"name":"string","nodeType":"ElementaryTypeName","src":"80957:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80934:43:16"},"returnParameters":{"id":18374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18375,"src":"81001:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18372,"name":"int256","nodeType":"ElementaryTypeName","src":"81001:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"81000:8:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18386,"nodeType":"FunctionDefinition","src":"81091:110:16","nodes":[],"documentation":{"id":18376,"nodeType":"StructuredDocumentation","src":"81015:71:16","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"81100:17:16","parameters":{"id":18381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18378,"mutability":"mutable","name":"toml","nameLocation":"81134:4:16","nodeType":"VariableDeclaration","scope":18386,"src":"81118:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18377,"name":"string","nodeType":"ElementaryTypeName","src":"81118:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18380,"mutability":"mutable","name":"key","nameLocation":"81156:3:16","nodeType":"VariableDeclaration","scope":18386,"src":"81140:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18379,"name":"string","nodeType":"ElementaryTypeName","src":"81140:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81117:43:16"},"returnParameters":{"id":18385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18386,"src":"81184:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18382,"name":"int256","nodeType":"ElementaryTypeName","src":"81184:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18383,"nodeType":"ArrayTypeName","src":"81184:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"81183:17:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18397,"nodeType":"FunctionDefinition","src":"81265:111:16","nodes":[],"documentation":{"id":18387,"nodeType":"StructuredDocumentation","src":"81207:53:16","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"81274:13:16","parameters":{"id":18392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18389,"mutability":"mutable","name":"toml","nameLocation":"81304:4:16","nodeType":"VariableDeclaration","scope":18397,"src":"81288:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18388,"name":"string","nodeType":"ElementaryTypeName","src":"81288:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18391,"mutability":"mutable","name":"key","nameLocation":"81326:3:16","nodeType":"VariableDeclaration","scope":18397,"src":"81310:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18390,"name":"string","nodeType":"ElementaryTypeName","src":"81310:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81287:43:16"},"returnParameters":{"id":18396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18395,"mutability":"mutable","name":"keys","nameLocation":"81370:4:16","nodeType":"VariableDeclaration","scope":18397,"src":"81354:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18393,"name":"string","nodeType":"ElementaryTypeName","src":"81354:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18394,"nodeType":"ArrayTypeName","src":"81354:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"81353:22:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18407,"nodeType":"FunctionDefinition","src":"81456:106:16","nodes":[],"documentation":{"id":18398,"nodeType":"StructuredDocumentation","src":"81382:69:16","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"81465:15:16","parameters":{"id":18403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18400,"mutability":"mutable","name":"toml","nameLocation":"81497:4:16","nodeType":"VariableDeclaration","scope":18407,"src":"81481:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18399,"name":"string","nodeType":"ElementaryTypeName","src":"81481:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18402,"mutability":"mutable","name":"key","nameLocation":"81519:3:16","nodeType":"VariableDeclaration","scope":18407,"src":"81503:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18401,"name":"string","nodeType":"ElementaryTypeName","src":"81503:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81480:43:16"},"returnParameters":{"id":18406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18407,"src":"81547:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18404,"name":"string","nodeType":"ElementaryTypeName","src":"81547:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81546:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18418,"nodeType":"FunctionDefinition","src":"81644:113:16","nodes":[],"documentation":{"id":18408,"nodeType":"StructuredDocumentation","src":"81568:71:16","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"81653:20:16","parameters":{"id":18413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18410,"mutability":"mutable","name":"toml","nameLocation":"81690:4:16","nodeType":"VariableDeclaration","scope":18418,"src":"81674:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18409,"name":"string","nodeType":"ElementaryTypeName","src":"81674:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18412,"mutability":"mutable","name":"key","nameLocation":"81712:3:16","nodeType":"VariableDeclaration","scope":18418,"src":"81696:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18411,"name":"string","nodeType":"ElementaryTypeName","src":"81696:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81673:43:16"},"returnParameters":{"id":18417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18418,"src":"81740:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18414,"name":"string","nodeType":"ElementaryTypeName","src":"81740:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18415,"nodeType":"ArrayTypeName","src":"81740:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"81739:17:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18430,"nodeType":"FunctionDefinition","src":"81874:165:16","nodes":[],"documentation":{"id":18419,"nodeType":"StructuredDocumentation","src":"81763:106:16","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"81883:18:16","parameters":{"id":18426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18421,"mutability":"mutable","name":"toml","nameLocation":"81918:4:16","nodeType":"VariableDeclaration","scope":18430,"src":"81902:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18420,"name":"string","nodeType":"ElementaryTypeName","src":"81902:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18423,"mutability":"mutable","name":"key","nameLocation":"81940:3:16","nodeType":"VariableDeclaration","scope":18430,"src":"81924:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18422,"name":"string","nodeType":"ElementaryTypeName","src":"81924:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18425,"mutability":"mutable","name":"typeDescription","nameLocation":"81961:15:16","nodeType":"VariableDeclaration","scope":18430,"src":"81945:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18424,"name":"string","nodeType":"ElementaryTypeName","src":"81945:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81901:76:16"},"returnParameters":{"id":18429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18430,"src":"82025:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18427,"name":"bytes","nodeType":"ElementaryTypeName","src":"82025:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82024:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18440,"nodeType":"FunctionDefinition","src":"82141:139:16","nodes":[],"documentation":{"id":18431,"nodeType":"StructuredDocumentation","src":"82045:91:16","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"82150:13:16","parameters":{"id":18436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18433,"mutability":"mutable","name":"toml","nameLocation":"82180:4:16","nodeType":"VariableDeclaration","scope":18440,"src":"82164:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18432,"name":"string","nodeType":"ElementaryTypeName","src":"82164:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18435,"mutability":"mutable","name":"typeDescription","nameLocation":"82202:15:16","nodeType":"VariableDeclaration","scope":18440,"src":"82186:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18434,"name":"string","nodeType":"ElementaryTypeName","src":"82186:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82163:55:16"},"returnParameters":{"id":18439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18440,"src":"82266:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18437,"name":"bytes","nodeType":"ElementaryTypeName","src":"82266:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82265:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18452,"nodeType":"FunctionDefinition","src":"82391:160:16","nodes":[],"documentation":{"id":18441,"nodeType":"StructuredDocumentation","src":"82286:100:16","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"82400:13:16","parameters":{"id":18448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18443,"mutability":"mutable","name":"toml","nameLocation":"82430:4:16","nodeType":"VariableDeclaration","scope":18452,"src":"82414:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18442,"name":"string","nodeType":"ElementaryTypeName","src":"82414:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18445,"mutability":"mutable","name":"key","nameLocation":"82452:3:16","nodeType":"VariableDeclaration","scope":18452,"src":"82436:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18444,"name":"string","nodeType":"ElementaryTypeName","src":"82436:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18447,"mutability":"mutable","name":"typeDescription","nameLocation":"82473:15:16","nodeType":"VariableDeclaration","scope":18452,"src":"82457:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18446,"name":"string","nodeType":"ElementaryTypeName","src":"82457:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82413:76:16"},"returnParameters":{"id":18451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18452,"src":"82537:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18449,"name":"bytes","nodeType":"ElementaryTypeName","src":"82537:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82536:14:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18462,"nodeType":"FunctionDefinition","src":"82632:98:16","nodes":[],"documentation":{"id":18453,"nodeType":"StructuredDocumentation","src":"82557:70:16","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"82641:13:16","parameters":{"id":18458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18455,"mutability":"mutable","name":"toml","nameLocation":"82671:4:16","nodeType":"VariableDeclaration","scope":18462,"src":"82655:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18454,"name":"string","nodeType":"ElementaryTypeName","src":"82655:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18457,"mutability":"mutable","name":"key","nameLocation":"82693:3:16","nodeType":"VariableDeclaration","scope":18462,"src":"82677:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18456,"name":"string","nodeType":"ElementaryTypeName","src":"82677:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82654:43:16"},"returnParameters":{"id":18461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18462,"src":"82721:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18459,"name":"uint256","nodeType":"ElementaryTypeName","src":"82721:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82720:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18473,"nodeType":"FunctionDefinition","src":"82813:112:16","nodes":[],"documentation":{"id":18463,"nodeType":"StructuredDocumentation","src":"82736:72:16","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"82822:18:16","parameters":{"id":18468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18465,"mutability":"mutable","name":"toml","nameLocation":"82857:4:16","nodeType":"VariableDeclaration","scope":18473,"src":"82841:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18464,"name":"string","nodeType":"ElementaryTypeName","src":"82841:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18467,"mutability":"mutable","name":"key","nameLocation":"82879:3:16","nodeType":"VariableDeclaration","scope":18473,"src":"82863:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18466,"name":"string","nodeType":"ElementaryTypeName","src":"82863:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82840:43:16"},"returnParameters":{"id":18472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18473,"src":"82907:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18469,"name":"uint256","nodeType":"ElementaryTypeName","src":"82907:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18470,"nodeType":"ArrayTypeName","src":"82907:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"82906:18:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18481,"nodeType":"FunctionDefinition","src":"82965:93:16","nodes":[],"documentation":{"id":18474,"nodeType":"StructuredDocumentation","src":"82931:29:16","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"82974:9:16","parameters":{"id":18477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18476,"mutability":"mutable","name":"toml","nameLocation":"83000:4:16","nodeType":"VariableDeclaration","scope":18481,"src":"82984:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18475,"name":"string","nodeType":"ElementaryTypeName","src":"82984:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82983:22:16"},"returnParameters":{"id":18480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18479,"mutability":"mutable","name":"abiEncodedData","nameLocation":"83042:14:16","nodeType":"VariableDeclaration","scope":18481,"src":"83029:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18478,"name":"bytes","nodeType":"ElementaryTypeName","src":"83029:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83028:29:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18491,"nodeType":"FunctionDefinition","src":"83107:114:16","nodes":[],"documentation":{"id":18482,"nodeType":"StructuredDocumentation","src":"83064:38:16","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"83116:9:16","parameters":{"id":18487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18484,"mutability":"mutable","name":"toml","nameLocation":"83142:4:16","nodeType":"VariableDeclaration","scope":18491,"src":"83126:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18483,"name":"string","nodeType":"ElementaryTypeName","src":"83126:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18486,"mutability":"mutable","name":"key","nameLocation":"83164:3:16","nodeType":"VariableDeclaration","scope":18491,"src":"83148:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18485,"name":"string","nodeType":"ElementaryTypeName","src":"83148:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83125:43:16"},"returnParameters":{"id":18490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18489,"mutability":"mutable","name":"abiEncodedData","nameLocation":"83205:14:16","nodeType":"VariableDeclaration","scope":18491,"src":"83192:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18488,"name":"bytes","nodeType":"ElementaryTypeName","src":"83192:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83191:29:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18499,"nodeType":"FunctionDefinition","src":"83314:72:16","nodes":[],"documentation":{"id":18492,"nodeType":"StructuredDocumentation","src":"83227:82:16","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"83323:9:16","parameters":{"id":18497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18494,"mutability":"mutable","name":"json","nameLocation":"83349:4:16","nodeType":"VariableDeclaration","scope":18499,"src":"83333:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18493,"name":"string","nodeType":"ElementaryTypeName","src":"83333:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18496,"mutability":"mutable","name":"path","nameLocation":"83371:4:16","nodeType":"VariableDeclaration","scope":18499,"src":"83355:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18495,"name":"string","nodeType":"ElementaryTypeName","src":"83355:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83332:44:16"},"returnParameters":{"id":18498,"nodeType":"ParameterList","parameters":[],"src":"83385:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18509,"nodeType":"FunctionDefinition","src":"83655:98:16","nodes":[],"documentation":{"id":18500,"nodeType":"StructuredDocumentation","src":"83392:258:16","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"83664:9:16","parameters":{"id":18507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18502,"mutability":"mutable","name":"json","nameLocation":"83690:4:16","nodeType":"VariableDeclaration","scope":18509,"src":"83674:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18501,"name":"string","nodeType":"ElementaryTypeName","src":"83674:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18504,"mutability":"mutable","name":"path","nameLocation":"83712:4:16","nodeType":"VariableDeclaration","scope":18509,"src":"83696:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18503,"name":"string","nodeType":"ElementaryTypeName","src":"83696:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18506,"mutability":"mutable","name":"valueKey","nameLocation":"83734:8:16","nodeType":"VariableDeclaration","scope":18509,"src":"83718:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18505,"name":"string","nodeType":"ElementaryTypeName","src":"83718:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83673:70:16"},"returnParameters":{"id":18508,"nodeType":"ParameterList","parameters":[],"src":"83752:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18521,"nodeType":"FunctionDefinition","src":"83892:141:16","nodes":[],"documentation":{"id":18510,"nodeType":"StructuredDocumentation","src":"83795:92:16","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"83901:21:16","parameters":{"id":18517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18512,"mutability":"mutable","name":"salt","nameLocation":"83931:4:16","nodeType":"VariableDeclaration","scope":18521,"src":"83923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18514,"mutability":"mutable","name":"initCodeHash","nameLocation":"83945:12:16","nodeType":"VariableDeclaration","scope":18521,"src":"83937:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83937:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18516,"mutability":"mutable","name":"deployer","nameLocation":"83967:8:16","nodeType":"VariableDeclaration","scope":18521,"src":"83959:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18515,"name":"address","nodeType":"ElementaryTypeName","src":"83959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83922:54:16"},"returnParameters":{"id":18520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18521,"src":"84024:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18518,"name":"address","nodeType":"ElementaryTypeName","src":"84024:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84023:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18531,"nodeType":"FunctionDefinition","src":"84138:99:16","nodes":[],"documentation":{"id":18522,"nodeType":"StructuredDocumentation","src":"84039:94:16","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"84147:21:16","parameters":{"id":18527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18524,"mutability":"mutable","name":"salt","nameLocation":"84177:4:16","nodeType":"VariableDeclaration","scope":18531,"src":"84169:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84169:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18526,"mutability":"mutable","name":"initCodeHash","nameLocation":"84191:12:16","nodeType":"VariableDeclaration","scope":18531,"src":"84183:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84183:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84168:36:16"},"returnParameters":{"id":18530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18531,"src":"84228:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18528,"name":"address","nodeType":"ElementaryTypeName","src":"84228:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84227:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18541,"nodeType":"FunctionDefinition","src":"84342:95:16","nodes":[],"documentation":{"id":18532,"nodeType":"StructuredDocumentation","src":"84243:94:16","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"84351:20:16","parameters":{"id":18537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18534,"mutability":"mutable","name":"deployer","nameLocation":"84380:8:16","nodeType":"VariableDeclaration","scope":18541,"src":"84372:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18533,"name":"address","nodeType":"ElementaryTypeName","src":"84372:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18536,"mutability":"mutable","name":"nonce","nameLocation":"84398:5:16","nodeType":"VariableDeclaration","scope":18541,"src":"84390:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18535,"name":"uint256","nodeType":"ElementaryTypeName","src":"84390:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84371:33:16"},"returnParameters":{"id":18540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18541,"src":"84428:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18538,"name":"address","nodeType":"ElementaryTypeName","src":"84428:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84427:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18549,"nodeType":"FunctionDefinition","src":"84530:56:16","nodes":[],"documentation":{"id":18542,"nodeType":"StructuredDocumentation","src":"84443:82:16","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"84539:11:16","parameters":{"id":18547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18544,"mutability":"mutable","name":"from","nameLocation":"84559:4:16","nodeType":"VariableDeclaration","scope":18549,"src":"84551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18543,"name":"address","nodeType":"ElementaryTypeName","src":"84551:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18546,"mutability":"mutable","name":"to","nameLocation":"84573:2:16","nodeType":"VariableDeclaration","scope":18549,"src":"84565:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18545,"name":"address","nodeType":"ElementaryTypeName","src":"84565:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84550:26:16"},"returnParameters":{"id":18548,"nodeType":"ParameterList","parameters":[],"src":"84585:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18557,"nodeType":"FunctionDefinition","src":"84642:75:16","nodes":[],"documentation":{"id":18550,"nodeType":"StructuredDocumentation","src":"84592:45:16","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"84651:11:16","parameters":{"id":18553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18552,"mutability":"mutable","name":"name","nameLocation":"84679:4:16","nodeType":"VariableDeclaration","scope":18557,"src":"84663:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18551,"name":"string","nodeType":"ElementaryTypeName","src":"84663:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84662:22:16"},"returnParameters":{"id":18556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18557,"src":"84708:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84708:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84707:9:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18565,"nodeType":"FunctionDefinition","src":"84773:86:16","nodes":[],"documentation":{"id":18558,"nodeType":"StructuredDocumentation","src":"84723:45:16","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"84782:8:16","parameters":{"id":18561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18560,"mutability":"mutable","name":"account","nameLocation":"84799:7:16","nodeType":"VariableDeclaration","scope":18565,"src":"84791:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18559,"name":"address","nodeType":"ElementaryTypeName","src":"84791:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84790:17:16"},"returnParameters":{"id":18564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18563,"mutability":"mutable","name":"currentLabel","nameLocation":"84845:12:16","nodeType":"VariableDeclaration","scope":18565,"src":"84831:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18562,"name":"string","nodeType":"ElementaryTypeName","src":"84831:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84830:28:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18573,"nodeType":"FunctionDefinition","src":"84907:67:16","nodes":[],"documentation":{"id":18566,"nodeType":"StructuredDocumentation","src":"84865:37:16","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"84916:5:16","parameters":{"id":18571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18568,"mutability":"mutable","name":"account","nameLocation":"84930:7:16","nodeType":"VariableDeclaration","scope":18573,"src":"84922:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18567,"name":"address","nodeType":"ElementaryTypeName","src":"84922:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18570,"mutability":"mutable","name":"newLabel","nameLocation":"84955:8:16","nodeType":"VariableDeclaration","scope":18573,"src":"84939:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18569,"name":"string","nodeType":"ElementaryTypeName","src":"84939:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84921:43:16"},"returnParameters":{"id":18572,"nodeType":"ParameterList","parameters":[],"src":"84973:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18577,"nodeType":"FunctionDefinition","src":"85129:38:16","nodes":[],"documentation":{"id":18574,"nodeType":"StructuredDocumentation","src":"84980:144:16","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"85138:12:16","parameters":{"id":18575,"nodeType":"ParameterList","parameters":[],"src":"85150:2:16"},"returnParameters":{"id":18576,"nodeType":"ParameterList","parameters":[],"src":"85166:0:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18583,"nodeType":"FunctionDefinition","src":"85209:52:16","nodes":[],"documentation":{"id":18578,"nodeType":"StructuredDocumentation","src":"85173:31:16","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"85218:13:16","parameters":{"id":18579,"nodeType":"ParameterList","parameters":[],"src":"85231:2:16"},"returnParameters":{"id":18582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18583,"src":"85252:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18580,"name":"address","nodeType":"ElementaryTypeName","src":"85252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85251:9:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18589,"nodeType":"FunctionDefinition","src":"85300:51:16","nodes":[],"documentation":{"id":18584,"nodeType":"StructuredDocumentation","src":"85267:28:16","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"85309:10:16","parameters":{"id":18585,"nodeType":"ParameterList","parameters":[],"src":"85319:2:16"},"returnParameters":{"id":18588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18589,"src":"85345:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18586,"name":"bool","nodeType":"ElementaryTypeName","src":"85345:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85344:6:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18597,"nodeType":"FunctionDefinition","src":"85420:71:16","nodes":[],"documentation":{"id":18590,"nodeType":"StructuredDocumentation","src":"85357:58:16","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"85429:11:16","parameters":{"id":18593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18592,"mutability":"mutable","name":"len","nameLocation":"85449:3:16","nodeType":"VariableDeclaration","scope":18597,"src":"85441:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18591,"name":"uint256","nodeType":"ElementaryTypeName","src":"85441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85440:13:16"},"returnParameters":{"id":18596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18597,"src":"85477:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18594,"name":"bytes","nodeType":"ElementaryTypeName","src":"85477:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85476:14:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18603,"nodeType":"FunctionDefinition","src":"85557:55:16","nodes":[],"documentation":{"id":18598,"nodeType":"StructuredDocumentation","src":"85497:55:16","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"85566:12:16","parameters":{"id":18599,"nodeType":"ParameterList","parameters":[],"src":"85578:2:16"},"returnParameters":{"id":18602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18603,"src":"85604:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18600,"name":"bytes4","nodeType":"ElementaryTypeName","src":"85604:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"85603:8:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18609,"nodeType":"FunctionDefinition","src":"85678:55:16","nodes":[],"documentation":{"id":18604,"nodeType":"StructuredDocumentation","src":"85618:55:16","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"85687:12:16","parameters":{"id":18605,"nodeType":"ParameterList","parameters":[],"src":"85699:2:16"},"returnParameters":{"id":18608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18609,"src":"85725:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":18606,"name":"bytes8","nodeType":"ElementaryTypeName","src":"85725:6:16","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"85724:8:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18615,"nodeType":"FunctionDefinition","src":"85780:52:16","nodes":[],"documentation":{"id":18610,"nodeType":"StructuredDocumentation","src":"85739:36:16","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"85789:9:16","parameters":{"id":18611,"nodeType":"ParameterList","parameters":[],"src":"85798:2:16"},"returnParameters":{"id":18614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18615,"src":"85824:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18612,"name":"int256","nodeType":"ElementaryTypeName","src":"85824:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"85823:8:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18623,"nodeType":"FunctionDefinition","src":"85893:64:16","nodes":[],"documentation":{"id":18616,"nodeType":"StructuredDocumentation","src":"85838:50:16","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"85902:9:16","parameters":{"id":18619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18618,"mutability":"mutable","name":"bits","nameLocation":"85920:4:16","nodeType":"VariableDeclaration","scope":18623,"src":"85912:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18617,"name":"uint256","nodeType":"ElementaryTypeName","src":"85912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85911:14:16"},"returnParameters":{"id":18622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18623,"src":"85949:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18620,"name":"int256","nodeType":"ElementaryTypeName","src":"85949:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"85948:8:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18629,"nodeType":"FunctionDefinition","src":"86003:49:16","nodes":[],"documentation":{"id":18624,"nodeType":"StructuredDocumentation","src":"85963:35:16","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"86012:10:16","parameters":{"id":18625,"nodeType":"ParameterList","parameters":[],"src":"86022:2:16"},"returnParameters":{"id":18628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18629,"src":"86043:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18626,"name":"uint256","nodeType":"ElementaryTypeName","src":"86043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86042:9:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18639,"nodeType":"FunctionDefinition","src":"86136:73:16","nodes":[],"documentation":{"id":18630,"nodeType":"StructuredDocumentation","src":"86058:73:16","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"86145:10:16","parameters":{"id":18635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18632,"mutability":"mutable","name":"min","nameLocation":"86164:3:16","nodeType":"VariableDeclaration","scope":18639,"src":"86156:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18631,"name":"uint256","nodeType":"ElementaryTypeName","src":"86156:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18634,"mutability":"mutable","name":"max","nameLocation":"86177:3:16","nodeType":"VariableDeclaration","scope":18639,"src":"86169:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18633,"name":"uint256","nodeType":"ElementaryTypeName","src":"86169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86155:26:16"},"returnParameters":{"id":18638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18639,"src":"86200:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18636,"name":"uint256","nodeType":"ElementaryTypeName","src":"86200:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86199:9:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18647,"nodeType":"FunctionDefinition","src":"86271:66:16","nodes":[],"documentation":{"id":18640,"nodeType":"StructuredDocumentation","src":"86215:51:16","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"86280:10:16","parameters":{"id":18643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18642,"mutability":"mutable","name":"bits","nameLocation":"86299:4:16","nodeType":"VariableDeclaration","scope":18647,"src":"86291:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18641,"name":"uint256","nodeType":"ElementaryTypeName","src":"86291:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86290:14:16"},"returnParameters":{"id":18646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18647,"src":"86328:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18644,"name":"uint256","nodeType":"ElementaryTypeName","src":"86328:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86327:9:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18651,"nodeType":"FunctionDefinition","src":"86387:39:16","nodes":[],"documentation":{"id":18648,"nodeType":"StructuredDocumentation","src":"86343:39:16","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"86396:13:16","parameters":{"id":18649,"nodeType":"ParameterList","parameters":[],"src":"86409:2:16"},"returnParameters":{"id":18650,"nodeType":"ParameterList","parameters":[],"src":"86425:0:16"},"scope":18690,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18657,"nodeType":"FunctionDefinition","src":"86509:54:16","nodes":[],"documentation":{"id":18652,"nodeType":"StructuredDocumentation","src":"86432:72:16","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"86518:19:16","parameters":{"id":18655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18654,"mutability":"mutable","name":"target","nameLocation":"86546:6:16","nodeType":"VariableDeclaration","scope":18657,"src":"86538:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18653,"name":"address","nodeType":"ElementaryTypeName","src":"86538:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86537:16:16"},"returnParameters":{"id":18656,"nodeType":"ParameterList","parameters":[],"src":"86562:0:16"},"scope":18690,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18665,"nodeType":"FunctionDefinition","src":"86624:80:16","nodes":[],"documentation":{"id":18658,"nodeType":"StructuredDocumentation","src":"86569:50:16","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"86633:11:16","parameters":{"id":18661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18660,"mutability":"mutable","name":"data","nameLocation":"86660:4:16","nodeType":"VariableDeclaration","scope":18665,"src":"86645:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18659,"name":"bytes","nodeType":"ElementaryTypeName","src":"86645:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86644:21:16"},"returnParameters":{"id":18664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18665,"src":"86689:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18662,"name":"string","nodeType":"ElementaryTypeName","src":"86689:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86688:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18673,"nodeType":"FunctionDefinition","src":"86766:81:16","nodes":[],"documentation":{"id":18666,"nodeType":"StructuredDocumentation","src":"86710:51:16","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"86775:11:16","parameters":{"id":18669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18668,"mutability":"mutable","name":"data","nameLocation":"86803:4:16","nodeType":"VariableDeclaration","scope":18673,"src":"86787:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18667,"name":"string","nodeType":"ElementaryTypeName","src":"86787:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86786:22:16"},"returnParameters":{"id":18672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18673,"src":"86832:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18670,"name":"string","nodeType":"ElementaryTypeName","src":"86832:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86831:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18681,"nodeType":"FunctionDefinition","src":"86905:77:16","nodes":[],"documentation":{"id":18674,"nodeType":"StructuredDocumentation","src":"86853:47:16","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"86914:8:16","parameters":{"id":18677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18676,"mutability":"mutable","name":"data","nameLocation":"86938:4:16","nodeType":"VariableDeclaration","scope":18681,"src":"86923:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18675,"name":"bytes","nodeType":"ElementaryTypeName","src":"86923:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"86922:21:16"},"returnParameters":{"id":18680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18681,"src":"86967:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18678,"name":"string","nodeType":"ElementaryTypeName","src":"86967:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86966:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18689,"nodeType":"FunctionDefinition","src":"87041:78:16","nodes":[],"documentation":{"id":18682,"nodeType":"StructuredDocumentation","src":"86988:48:16","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"87050:8:16","parameters":{"id":18685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18684,"mutability":"mutable","name":"data","nameLocation":"87075:4:16","nodeType":"VariableDeclaration","scope":18689,"src":"87059:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18683,"name":"string","nodeType":"ElementaryTypeName","src":"87059:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87058:22:16"},"returnParameters":{"id":18688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18689,"src":"87104:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18686,"name":"string","nodeType":"ElementaryTypeName","src":"87104:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87103:15:16"},"scope":18690,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":15098,"nodeType":"StructuredDocumentation","src":"184:225:16","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[18690],"name":"VmSafe","nameLocation":"419:6:16","scope":19534,"usedErrors":[],"usedEvents":[]},{"id":19533,"nodeType":"ContractDefinition","src":"87294:20781:16","nodes":[{"id":18699,"nodeType":"FunctionDefinition","src":"87454:61:16","nodes":[],"documentation":{"id":18694,"nodeType":"StructuredDocumentation","src":"87353:96:16","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"87463:10:16","parameters":{"id":18695,"nodeType":"ParameterList","parameters":[],"src":"87473:2:16"},"returnParameters":{"id":18698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18697,"mutability":"mutable","name":"forkId","nameLocation":"87507:6:16","nodeType":"VariableDeclaration","scope":18699,"src":"87499:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18696,"name":"uint256","nodeType":"ElementaryTypeName","src":"87499:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87498:16:16"},"scope":19533,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18705,"nodeType":"FunctionDefinition","src":"87599:51:16","nodes":[],"documentation":{"id":18700,"nodeType":"StructuredDocumentation","src":"87521:73:16","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"87608:15:16","parameters":{"id":18703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18702,"mutability":"mutable","name":"account","nameLocation":"87632:7:16","nodeType":"VariableDeclaration","scope":18705,"src":"87624:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18701,"name":"address","nodeType":"ElementaryTypeName","src":"87624:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87623:17:16"},"returnParameters":{"id":18704,"nodeType":"ParameterList","parameters":[],"src":"87649:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18711,"nodeType":"FunctionDefinition","src":"87689:54:16","nodes":[],"documentation":{"id":18706,"nodeType":"StructuredDocumentation","src":"87656:28:16","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"87698:11:16","parameters":{"id":18709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18708,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"87718:14:16","nodeType":"VariableDeclaration","scope":18711,"src":"87710:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18707,"name":"uint256","nodeType":"ElementaryTypeName","src":"87710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87709:24:16"},"returnParameters":{"id":18710,"nodeType":"ParameterList","parameters":[],"src":"87742:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18718,"nodeType":"FunctionDefinition","src":"87910:56:16","nodes":[],"documentation":{"id":18712,"nodeType":"StructuredDocumentation","src":"87749:156:16","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"87919:10:16","parameters":{"id":18716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18715,"mutability":"mutable","name":"hashes","nameLocation":"87949:6:16","nodeType":"VariableDeclaration","scope":18718,"src":"87930:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87930:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18714,"nodeType":"ArrayTypeName","src":"87930:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"87929:27:16"},"returnParameters":{"id":18717,"nodeType":"ParameterList","parameters":[],"src":"87965:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18724,"nodeType":"FunctionDefinition","src":"88002:46:16","nodes":[],"documentation":{"id":18719,"nodeType":"StructuredDocumentation","src":"87972:25:16","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"88011:7:16","parameters":{"id":18722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18721,"mutability":"mutable","name":"newChainId","nameLocation":"88027:10:16","nodeType":"VariableDeclaration","scope":18724,"src":"88019:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18720,"name":"uint256","nodeType":"ElementaryTypeName","src":"88019:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88018:20:16"},"returnParameters":{"id":18723,"nodeType":"ParameterList","parameters":[],"src":"88047:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18728,"nodeType":"FunctionDefinition","src":"88087:37:16","nodes":[],"documentation":{"id":18725,"nodeType":"StructuredDocumentation","src":"88054:28:16","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"88096:16:16","parameters":{"id":18726,"nodeType":"ParameterList","parameters":[],"src":"88112:2:16"},"returnParameters":{"id":18727,"nodeType":"ParameterList","parameters":[],"src":"88123:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18736,"nodeType":"FunctionDefinition","src":"88246:63:16","nodes":[],"documentation":{"id":18729,"nodeType":"StructuredDocumentation","src":"88130:111:16","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"88255:12:16","parameters":{"id":18734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18731,"mutability":"mutable","name":"source","nameLocation":"88276:6:16","nodeType":"VariableDeclaration","scope":18736,"src":"88268:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18730,"name":"address","nodeType":"ElementaryTypeName","src":"88268:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18733,"mutability":"mutable","name":"target","nameLocation":"88292:6:16","nodeType":"VariableDeclaration","scope":18736,"src":"88284:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18732,"name":"address","nodeType":"ElementaryTypeName","src":"88284:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88267:32:16"},"returnParameters":{"id":18735,"nodeType":"ParameterList","parameters":[],"src":"88308:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18742,"nodeType":"FunctionDefinition","src":"88346:48:16","nodes":[],"documentation":{"id":18737,"nodeType":"StructuredDocumentation","src":"88315:26:16","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"88355:8:16","parameters":{"id":18740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18739,"mutability":"mutable","name":"newCoinbase","nameLocation":"88372:11:16","nodeType":"VariableDeclaration","scope":18742,"src":"88364:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18738,"name":"address","nodeType":"ElementaryTypeName","src":"88364:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88363:21:16"},"returnParameters":{"id":18741,"nodeType":"ParameterList","parameters":[],"src":"88393:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18750,"nodeType":"FunctionDefinition","src":"88514:82:16","nodes":[],"documentation":{"id":18743,"nodeType":"StructuredDocumentation","src":"88400:109:16","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"88523:10:16","parameters":{"id":18746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18745,"mutability":"mutable","name":"urlOrAlias","nameLocation":"88550:10:16","nodeType":"VariableDeclaration","scope":18750,"src":"88534:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18744,"name":"string","nodeType":"ElementaryTypeName","src":"88534:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88533:28:16"},"returnParameters":{"id":18749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18748,"mutability":"mutable","name":"forkId","nameLocation":"88588:6:16","nodeType":"VariableDeclaration","scope":18750,"src":"88580:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18747,"name":"uint256","nodeType":"ElementaryTypeName","src":"88580:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88579:16:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18760,"nodeType":"FunctionDefinition","src":"88703:103:16","nodes":[],"documentation":{"id":18751,"nodeType":"StructuredDocumentation","src":"88602:96:16","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"88712:10:16","parameters":{"id":18756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18753,"mutability":"mutable","name":"urlOrAlias","nameLocation":"88739:10:16","nodeType":"VariableDeclaration","scope":18760,"src":"88723:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18752,"name":"string","nodeType":"ElementaryTypeName","src":"88723:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18755,"mutability":"mutable","name":"blockNumber","nameLocation":"88759:11:16","nodeType":"VariableDeclaration","scope":18760,"src":"88751:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18754,"name":"uint256","nodeType":"ElementaryTypeName","src":"88751:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88722:49:16"},"returnParameters":{"id":18759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18758,"mutability":"mutable","name":"forkId","nameLocation":"88798:6:16","nodeType":"VariableDeclaration","scope":18760,"src":"88790:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18757,"name":"uint256","nodeType":"ElementaryTypeName","src":"88790:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88789:16:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18770,"nodeType":"FunctionDefinition","src":"89031:98:16","nodes":[],"documentation":{"id":18761,"nodeType":"StructuredDocumentation","src":"88812:214:16","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"89040:10:16","parameters":{"id":18766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18763,"mutability":"mutable","name":"urlOrAlias","nameLocation":"89067:10:16","nodeType":"VariableDeclaration","scope":18770,"src":"89051:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18762,"name":"string","nodeType":"ElementaryTypeName","src":"89051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18765,"mutability":"mutable","name":"txHash","nameLocation":"89087:6:16","nodeType":"VariableDeclaration","scope":18770,"src":"89079:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89079:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89050:44:16"},"returnParameters":{"id":18769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18768,"mutability":"mutable","name":"forkId","nameLocation":"89121:6:16","nodeType":"VariableDeclaration","scope":18770,"src":"89113:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18767,"name":"uint256","nodeType":"ElementaryTypeName","src":"89113:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89112:16:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18778,"nodeType":"FunctionDefinition","src":"89264:88:16","nodes":[],"documentation":{"id":18771,"nodeType":"StructuredDocumentation","src":"89135:124:16","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"89273:16:16","parameters":{"id":18774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18773,"mutability":"mutable","name":"urlOrAlias","nameLocation":"89306:10:16","nodeType":"VariableDeclaration","scope":18778,"src":"89290:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18772,"name":"string","nodeType":"ElementaryTypeName","src":"89290:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89289:28:16"},"returnParameters":{"id":18777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18776,"mutability":"mutable","name":"forkId","nameLocation":"89344:6:16","nodeType":"VariableDeclaration","scope":18778,"src":"89336:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18775,"name":"uint256","nodeType":"ElementaryTypeName","src":"89336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89335:16:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18788,"nodeType":"FunctionDefinition","src":"89476:109:16","nodes":[],"documentation":{"id":18779,"nodeType":"StructuredDocumentation","src":"89358:113:16","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"89485:16:16","parameters":{"id":18784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18781,"mutability":"mutable","name":"urlOrAlias","nameLocation":"89518:10:16","nodeType":"VariableDeclaration","scope":18788,"src":"89502:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18780,"name":"string","nodeType":"ElementaryTypeName","src":"89502:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18783,"mutability":"mutable","name":"blockNumber","nameLocation":"89538:11:16","nodeType":"VariableDeclaration","scope":18788,"src":"89530:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18782,"name":"uint256","nodeType":"ElementaryTypeName","src":"89530:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89501:49:16"},"returnParameters":{"id":18787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18786,"mutability":"mutable","name":"forkId","nameLocation":"89577:6:16","nodeType":"VariableDeclaration","scope":18788,"src":"89569:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18785,"name":"uint256","nodeType":"ElementaryTypeName","src":"89569:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89568:16:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18798,"nodeType":"FunctionDefinition","src":"89821:104:16","nodes":[],"documentation":{"id":18789,"nodeType":"StructuredDocumentation","src":"89591:225:16","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"89830:16:16","parameters":{"id":18794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18791,"mutability":"mutable","name":"urlOrAlias","nameLocation":"89863:10:16","nodeType":"VariableDeclaration","scope":18798,"src":"89847:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18790,"name":"string","nodeType":"ElementaryTypeName","src":"89847:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18793,"mutability":"mutable","name":"txHash","nameLocation":"89883:6:16","nodeType":"VariableDeclaration","scope":18798,"src":"89875:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89875:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89846:44:16"},"returnParameters":{"id":18797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18796,"mutability":"mutable","name":"forkId","nameLocation":"89917:6:16","nodeType":"VariableDeclaration","scope":18798,"src":"89909:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18795,"name":"uint256","nodeType":"ElementaryTypeName","src":"89909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89908:16:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18806,"nodeType":"FunctionDefinition","src":"89965:60:16","nodes":[],"documentation":{"id":18799,"nodeType":"StructuredDocumentation","src":"89931:29:16","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"89974:4:16","parameters":{"id":18804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18801,"mutability":"mutable","name":"account","nameLocation":"89987:7:16","nodeType":"VariableDeclaration","scope":18806,"src":"89979:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18800,"name":"address","nodeType":"ElementaryTypeName","src":"89979:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18803,"mutability":"mutable","name":"newBalance","nameLocation":"90004:10:16","nodeType":"VariableDeclaration","scope":18806,"src":"89996:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18802,"name":"uint256","nodeType":"ElementaryTypeName","src":"89996:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89978:37:16"},"returnParameters":{"id":18805,"nodeType":"ParameterList","parameters":[],"src":"90024:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18814,"nodeType":"FunctionDefinition","src":"90263:81:16","nodes":[],"documentation":{"id":18807,"nodeType":"StructuredDocumentation","src":"90031:227:16","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"90272:19:16","parameters":{"id":18810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18809,"mutability":"mutable","name":"snapshotId","nameLocation":"90300:10:16","nodeType":"VariableDeclaration","scope":18814,"src":"90292:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18808,"name":"uint256","nodeType":"ElementaryTypeName","src":"90292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90291:20:16"},"returnParameters":{"id":18813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18812,"mutability":"mutable","name":"success","nameLocation":"90335:7:16","nodeType":"VariableDeclaration","scope":18814,"src":"90330:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18811,"name":"bool","nodeType":"ElementaryTypeName","src":"90330:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90329:14:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18818,"nodeType":"FunctionDefinition","src":"90416:41:16","nodes":[],"documentation":{"id":18815,"nodeType":"StructuredDocumentation","src":"90350:61:16","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"90425:20:16","parameters":{"id":18816,"nodeType":"ParameterList","parameters":[],"src":"90445:2:16"},"returnParameters":{"id":18817,"nodeType":"ParameterList","parameters":[],"src":"90456:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18824,"nodeType":"FunctionDefinition","src":"90633:52:16","nodes":[],"documentation":{"id":18819,"nodeType":"StructuredDocumentation","src":"90463:165:16","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"90642:10:16","parameters":{"id":18822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18821,"mutability":"mutable","name":"newDifficulty","nameLocation":"90661:13:16","nodeType":"VariableDeclaration","scope":18824,"src":"90653:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18820,"name":"uint256","nodeType":"ElementaryTypeName","src":"90653:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90652:23:16"},"returnParameters":{"id":18823,"nodeType":"ParameterList","parameters":[],"src":"90684:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18830,"nodeType":"FunctionDefinition","src":"90744:61:16","nodes":[],"documentation":{"id":18825,"nodeType":"StructuredDocumentation","src":"90691:48:16","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"90753:9:16","parameters":{"id":18828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18827,"mutability":"mutable","name":"pathToStateJson","nameLocation":"90779:15:16","nodeType":"VariableDeclaration","scope":18830,"src":"90763:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18826,"name":"string","nodeType":"ElementaryTypeName","src":"90763:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90762:33:16"},"returnParameters":{"id":18829,"nodeType":"ParameterList","parameters":[],"src":"90804:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18838,"nodeType":"FunctionDefinition","src":"90842:74:16","nodes":[],"documentation":{"id":18831,"nodeType":"StructuredDocumentation","src":"90811:26:16","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"90851:4:16","parameters":{"id":18836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18833,"mutability":"mutable","name":"target","nameLocation":"90864:6:16","nodeType":"VariableDeclaration","scope":18838,"src":"90856:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18832,"name":"address","nodeType":"ElementaryTypeName","src":"90856:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18835,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"90887:18:16","nodeType":"VariableDeclaration","scope":18838,"src":"90872:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18834,"name":"bytes","nodeType":"ElementaryTypeName","src":"90872:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90855:51:16"},"returnParameters":{"id":18837,"nodeType":"ParameterList","parameters":[],"src":"90915:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18844,"nodeType":"FunctionDefinition","src":"90952:42:16","nodes":[],"documentation":{"id":18839,"nodeType":"StructuredDocumentation","src":"90922:25:16","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"90961:3:16","parameters":{"id":18842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18841,"mutability":"mutable","name":"newBasefee","nameLocation":"90973:10:16","nodeType":"VariableDeclaration","scope":18844,"src":"90965:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18840,"name":"uint256","nodeType":"ElementaryTypeName","src":"90965:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90964:20:16"},"returnParameters":{"id":18843,"nodeType":"ParameterList","parameters":[],"src":"90993:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18851,"nodeType":"FunctionDefinition","src":"91172:73:16","nodes":[],"documentation":{"id":18845,"nodeType":"StructuredDocumentation","src":"91000:167:16","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"91181:13:16","parameters":{"id":18846,"nodeType":"ParameterList","parameters":[],"src":"91194:2:16"},"returnParameters":{"id":18850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18849,"mutability":"mutable","name":"hashes","nameLocation":"91237:6:16","nodeType":"VariableDeclaration","scope":18851,"src":"91220:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91220:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18848,"nodeType":"ArrayTypeName","src":"91220:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"91219:25:16"},"scope":19533,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18859,"nodeType":"FunctionDefinition","src":"91312:79:16","nodes":[],"documentation":{"id":18852,"nodeType":"StructuredDocumentation","src":"91251:56:16","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"91321:12:16","parameters":{"id":18855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18854,"mutability":"mutable","name":"account","nameLocation":"91342:7:16","nodeType":"VariableDeclaration","scope":18859,"src":"91334:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18853,"name":"address","nodeType":"ElementaryTypeName","src":"91334:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91333:17:16"},"returnParameters":{"id":18858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18857,"mutability":"mutable","name":"persistent","nameLocation":"91379:10:16","nodeType":"VariableDeclaration","scope":18859,"src":"91374:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18856,"name":"bool","nodeType":"ElementaryTypeName","src":"91374:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91373:17:16"},"scope":19533,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18865,"nodeType":"FunctionDefinition","src":"91471:63:16","nodes":[],"documentation":{"id":18860,"nodeType":"StructuredDocumentation","src":"91397:69:16","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"91480:10:16","parameters":{"id":18863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18862,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"91507:16:16","nodeType":"VariableDeclaration","scope":18865,"src":"91491:32:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18861,"name":"string","nodeType":"ElementaryTypeName","src":"91491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91490:34:16"},"returnParameters":{"id":18864,"nodeType":"ParameterList","parameters":[],"src":"91533:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18871,"nodeType":"FunctionDefinition","src":"91737:50:16","nodes":[],"documentation":{"id":18866,"nodeType":"StructuredDocumentation","src":"91540:192:16","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"91746:14:16","parameters":{"id":18869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18868,"mutability":"mutable","name":"account","nameLocation":"91769:7:16","nodeType":"VariableDeclaration","scope":18871,"src":"91761:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18867,"name":"address","nodeType":"ElementaryTypeName","src":"91761:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91760:17:16"},"returnParameters":{"id":18870,"nodeType":"ParameterList","parameters":[],"src":"91786:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18879,"nodeType":"FunctionDefinition","src":"91832:69:16","nodes":[],"documentation":{"id":18872,"nodeType":"StructuredDocumentation","src":"91793:34:16","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"91841:14:16","parameters":{"id":18877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18874,"mutability":"mutable","name":"account0","nameLocation":"91864:8:16","nodeType":"VariableDeclaration","scope":18879,"src":"91856:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18873,"name":"address","nodeType":"ElementaryTypeName","src":"91856:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18876,"mutability":"mutable","name":"account1","nameLocation":"91882:8:16","nodeType":"VariableDeclaration","scope":18879,"src":"91874:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18875,"name":"address","nodeType":"ElementaryTypeName","src":"91874:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91855:36:16"},"returnParameters":{"id":18878,"nodeType":"ParameterList","parameters":[],"src":"91900:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18889,"nodeType":"FunctionDefinition","src":"91946:87:16","nodes":[],"documentation":{"id":18880,"nodeType":"StructuredDocumentation","src":"91907:34:16","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"91955:14:16","parameters":{"id":18887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18882,"mutability":"mutable","name":"account0","nameLocation":"91978:8:16","nodeType":"VariableDeclaration","scope":18889,"src":"91970:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18881,"name":"address","nodeType":"ElementaryTypeName","src":"91970:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18884,"mutability":"mutable","name":"account1","nameLocation":"91996:8:16","nodeType":"VariableDeclaration","scope":18889,"src":"91988:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18883,"name":"address","nodeType":"ElementaryTypeName","src":"91988:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18886,"mutability":"mutable","name":"account2","nameLocation":"92014:8:16","nodeType":"VariableDeclaration","scope":18889,"src":"92006:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18885,"name":"address","nodeType":"ElementaryTypeName","src":"92006:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91969:54:16"},"returnParameters":{"id":18888,"nodeType":"ParameterList","parameters":[],"src":"92032:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18896,"nodeType":"FunctionDefinition","src":"92078:62:16","nodes":[],"documentation":{"id":18890,"nodeType":"StructuredDocumentation","src":"92039:34:16","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"92087:14:16","parameters":{"id":18894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18893,"mutability":"mutable","name":"accounts","nameLocation":"92121:8:16","nodeType":"VariableDeclaration","scope":18896,"src":"92102:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18891,"name":"address","nodeType":"ElementaryTypeName","src":"92102:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18892,"nodeType":"ArrayTypeName","src":"92102:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"92101:29:16"},"returnParameters":{"id":18895,"nodeType":"ParameterList","parameters":[],"src":"92139:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18906,"nodeType":"FunctionDefinition","src":"92211:97:16","nodes":[],"documentation":{"id":18897,"nodeType":"StructuredDocumentation","src":"92146:60:16","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"92220:14:16","parameters":{"id":18904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18899,"mutability":"mutable","name":"callee","nameLocation":"92243:6:16","nodeType":"VariableDeclaration","scope":18906,"src":"92235:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18898,"name":"address","nodeType":"ElementaryTypeName","src":"92235:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18901,"mutability":"mutable","name":"data","nameLocation":"92266:4:16","nodeType":"VariableDeclaration","scope":18906,"src":"92251:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18900,"name":"bytes","nodeType":"ElementaryTypeName","src":"92251:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18903,"mutability":"mutable","name":"revertData","nameLocation":"92287:10:16","nodeType":"VariableDeclaration","scope":18906,"src":"92272:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18902,"name":"bytes","nodeType":"ElementaryTypeName","src":"92272:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92234:64:16"},"returnParameters":{"id":18905,"nodeType":"ParameterList","parameters":[],"src":"92307:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18918,"nodeType":"FunctionDefinition","src":"92408:123:16","nodes":[],"documentation":{"id":18907,"nodeType":"StructuredDocumentation","src":"92314:89:16","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"92417:14:16","parameters":{"id":18916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18909,"mutability":"mutable","name":"callee","nameLocation":"92440:6:16","nodeType":"VariableDeclaration","scope":18918,"src":"92432:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18908,"name":"address","nodeType":"ElementaryTypeName","src":"92432:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18911,"mutability":"mutable","name":"msgValue","nameLocation":"92456:8:16","nodeType":"VariableDeclaration","scope":18918,"src":"92448:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18910,"name":"uint256","nodeType":"ElementaryTypeName","src":"92448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18913,"mutability":"mutable","name":"data","nameLocation":"92481:4:16","nodeType":"VariableDeclaration","scope":18918,"src":"92466:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18912,"name":"bytes","nodeType":"ElementaryTypeName","src":"92466:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18915,"mutability":"mutable","name":"revertData","nameLocation":"92502:10:16","nodeType":"VariableDeclaration","scope":18918,"src":"92487:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18914,"name":"bytes","nodeType":"ElementaryTypeName","src":"92487:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92431:82:16"},"returnParameters":{"id":18917,"nodeType":"ParameterList","parameters":[],"src":"92530:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18928,"nodeType":"FunctionDefinition","src":"92791:91:16","nodes":[],"documentation":{"id":18919,"nodeType":"StructuredDocumentation","src":"92537:249:16","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"92800:8:16","parameters":{"id":18926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18921,"mutability":"mutable","name":"callee","nameLocation":"92817:6:16","nodeType":"VariableDeclaration","scope":18928,"src":"92809:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18920,"name":"address","nodeType":"ElementaryTypeName","src":"92809:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18923,"mutability":"mutable","name":"data","nameLocation":"92840:4:16","nodeType":"VariableDeclaration","scope":18928,"src":"92825:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18922,"name":"bytes","nodeType":"ElementaryTypeName","src":"92825:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18925,"mutability":"mutable","name":"returnData","nameLocation":"92861:10:16","nodeType":"VariableDeclaration","scope":18928,"src":"92846:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18924,"name":"bytes","nodeType":"ElementaryTypeName","src":"92846:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92808:64:16"},"returnParameters":{"id":18927,"nodeType":"ParameterList","parameters":[],"src":"92881:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18940,"nodeType":"FunctionDefinition","src":"93057:109:16","nodes":[],"documentation":{"id":18929,"nodeType":"StructuredDocumentation","src":"92888:164:16","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"93066:8:16","parameters":{"id":18938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18931,"mutability":"mutable","name":"callee","nameLocation":"93083:6:16","nodeType":"VariableDeclaration","scope":18940,"src":"93075:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18930,"name":"address","nodeType":"ElementaryTypeName","src":"93075:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18933,"mutability":"mutable","name":"msgValue","nameLocation":"93099:8:16","nodeType":"VariableDeclaration","scope":18940,"src":"93091:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18932,"name":"uint256","nodeType":"ElementaryTypeName","src":"93091:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18935,"mutability":"mutable","name":"data","nameLocation":"93124:4:16","nodeType":"VariableDeclaration","scope":18940,"src":"93109:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18934,"name":"bytes","nodeType":"ElementaryTypeName","src":"93109:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18937,"mutability":"mutable","name":"returnData","nameLocation":"93145:10:16","nodeType":"VariableDeclaration","scope":18940,"src":"93130:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18936,"name":"bytes","nodeType":"ElementaryTypeName","src":"93130:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93074:82:16"},"returnParameters":{"id":18939,"nodeType":"ParameterList","parameters":[],"src":"93165:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18951,"nodeType":"FunctionDefinition","src":"93256:94:16","nodes":[],"documentation":{"id":18941,"nodeType":"StructuredDocumentation","src":"93172:79:16","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"93265:9:16","parameters":{"id":18949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18943,"mutability":"mutable","name":"callee","nameLocation":"93283:6:16","nodeType":"VariableDeclaration","scope":18951,"src":"93275:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18942,"name":"address","nodeType":"ElementaryTypeName","src":"93275:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18945,"mutability":"mutable","name":"data","nameLocation":"93306:4:16","nodeType":"VariableDeclaration","scope":18951,"src":"93291:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18944,"name":"bytes","nodeType":"ElementaryTypeName","src":"93291:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18948,"mutability":"mutable","name":"returnData","nameLocation":"93329:10:16","nodeType":"VariableDeclaration","scope":18951,"src":"93312:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18946,"name":"bytes","nodeType":"ElementaryTypeName","src":"93312:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18947,"nodeType":"ArrayTypeName","src":"93312:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"93274:66:16"},"returnParameters":{"id":18950,"nodeType":"ParameterList","parameters":[],"src":"93349:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18964,"nodeType":"FunctionDefinition","src":"93468:112:16","nodes":[],"documentation":{"id":18952,"nodeType":"StructuredDocumentation","src":"93356:107:16","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"93477:9:16","parameters":{"id":18962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18954,"mutability":"mutable","name":"callee","nameLocation":"93495:6:16","nodeType":"VariableDeclaration","scope":18964,"src":"93487:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18953,"name":"address","nodeType":"ElementaryTypeName","src":"93487:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18956,"mutability":"mutable","name":"msgValue","nameLocation":"93511:8:16","nodeType":"VariableDeclaration","scope":18964,"src":"93503:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18955,"name":"uint256","nodeType":"ElementaryTypeName","src":"93503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18958,"mutability":"mutable","name":"data","nameLocation":"93536:4:16","nodeType":"VariableDeclaration","scope":18964,"src":"93521:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18957,"name":"bytes","nodeType":"ElementaryTypeName","src":"93521:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18961,"mutability":"mutable","name":"returnData","nameLocation":"93559:10:16","nodeType":"VariableDeclaration","scope":18964,"src":"93542:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18959,"name":"bytes","nodeType":"ElementaryTypeName","src":"93542:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18960,"nodeType":"ArrayTypeName","src":"93542:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"93486:84:16"},"returnParameters":{"id":18963,"nodeType":"ParameterList","parameters":[],"src":"93579:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18974,"nodeType":"FunctionDefinition","src":"94086:84:16","nodes":[],"documentation":{"id":18965,"nodeType":"StructuredDocumentation","src":"93586:495:16","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"94095:12:16","parameters":{"id":18972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18967,"mutability":"mutable","name":"callee","nameLocation":"94116:6:16","nodeType":"VariableDeclaration","scope":18974,"src":"94108:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18966,"name":"address","nodeType":"ElementaryTypeName","src":"94108:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18969,"mutability":"mutable","name":"target","nameLocation":"94132:6:16","nodeType":"VariableDeclaration","scope":18974,"src":"94124:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18968,"name":"address","nodeType":"ElementaryTypeName","src":"94124:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18971,"mutability":"mutable","name":"data","nameLocation":"94155:4:16","nodeType":"VariableDeclaration","scope":18974,"src":"94140:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18970,"name":"bytes","nodeType":"ElementaryTypeName","src":"94140:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94107:53:16"},"returnParameters":{"id":18973,"nodeType":"ParameterList","parameters":[],"src":"94169:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18980,"nodeType":"FunctionDefinition","src":"94245:43:16","nodes":[],"documentation":{"id":18975,"nodeType":"StructuredDocumentation","src":"94176:64:16","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"94254:5:16","parameters":{"id":18978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18977,"mutability":"mutable","name":"msgSender","nameLocation":"94268:9:16","nodeType":"VariableDeclaration","scope":18980,"src":"94260:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18976,"name":"address","nodeType":"ElementaryTypeName","src":"94260:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94259:19:16"},"returnParameters":{"id":18979,"nodeType":"ParameterList","parameters":[],"src":"94287:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18988,"nodeType":"FunctionDefinition","src":"94407:61:16","nodes":[],"documentation":{"id":18981,"nodeType":"StructuredDocumentation","src":"94294:108:16","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"94416:5:16","parameters":{"id":18986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18983,"mutability":"mutable","name":"msgSender","nameLocation":"94430:9:16","nodeType":"VariableDeclaration","scope":18988,"src":"94422:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18982,"name":"address","nodeType":"ElementaryTypeName","src":"94422:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18985,"mutability":"mutable","name":"txOrigin","nameLocation":"94449:8:16","nodeType":"VariableDeclaration","scope":18988,"src":"94441:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18984,"name":"address","nodeType":"ElementaryTypeName","src":"94441:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94421:37:16"},"returnParameters":{"id":18987,"nodeType":"ParameterList","parameters":[],"src":"94467:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18994,"nodeType":"FunctionDefinition","src":"94645:52:16","nodes":[],"documentation":{"id":18989,"nodeType":"StructuredDocumentation","src":"94474:166:16","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"94654:10:16","parameters":{"id":18992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18991,"mutability":"mutable","name":"newPrevrandao","nameLocation":"94673:13:16","nodeType":"VariableDeclaration","scope":18994,"src":"94665:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94665:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"94664:23:16"},"returnParameters":{"id":18993,"nodeType":"ParameterList","parameters":[],"src":"94696:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19000,"nodeType":"FunctionDefinition","src":"94874:52:16","nodes":[],"documentation":{"id":18995,"nodeType":"StructuredDocumentation","src":"94703:166:16","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"94883:10:16","parameters":{"id":18998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18997,"mutability":"mutable","name":"newPrevrandao","nameLocation":"94902:13:16","nodeType":"VariableDeclaration","scope":19000,"src":"94894:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18996,"name":"uint256","nodeType":"ElementaryTypeName","src":"94894:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94893:23:16"},"returnParameters":{"id":18999,"nodeType":"ParameterList","parameters":[],"src":"94925:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19011,"nodeType":"FunctionDefinition","src":"95054:101:16","nodes":[],"documentation":{"id":19001,"nodeType":"StructuredDocumentation","src":"94932:117:16","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"95063:11:16","parameters":{"id":19002,"nodeType":"ParameterList","parameters":[],"src":"95074:2:16"},"returnParameters":{"id":19010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19005,"mutability":"mutable","name":"callerMode","nameLocation":"95106:10:16","nodeType":"VariableDeclaration","scope":19011,"src":"95095:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15105","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":19004,"nodeType":"UserDefinedTypeName","pathNode":{"id":19003,"name":"CallerMode","nameLocations":["95095:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":15105,"src":"95095:10:16"},"referencedDeclaration":15105,"src":"95095:10:16","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15105","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":19007,"mutability":"mutable","name":"msgSender","nameLocation":"95126:9:16","nodeType":"VariableDeclaration","scope":19011,"src":"95118:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19006,"name":"address","nodeType":"ElementaryTypeName","src":"95118:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19009,"mutability":"mutable","name":"txOrigin","nameLocation":"95145:8:16","nodeType":"VariableDeclaration","scope":19011,"src":"95137:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19008,"name":"address","nodeType":"ElementaryTypeName","src":"95137:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95094:60:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19017,"nodeType":"FunctionDefinition","src":"95243:46:16","nodes":[],"documentation":{"id":19012,"nodeType":"StructuredDocumentation","src":"95161:77:16","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"95252:10:16","parameters":{"id":19015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19014,"mutability":"mutable","name":"account","nameLocation":"95271:7:16","nodeType":"VariableDeclaration","scope":19017,"src":"95263:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19013,"name":"address","nodeType":"ElementaryTypeName","src":"95263:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95262:17:16"},"returnParameters":{"id":19016,"nodeType":"ParameterList","parameters":[],"src":"95288:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19025,"nodeType":"FunctionDefinition","src":"95637:75:16","nodes":[],"documentation":{"id":19018,"nodeType":"StructuredDocumentation","src":"95295:337:16","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"95646:13:16","parameters":{"id":19021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19020,"mutability":"mutable","name":"snapshotId","nameLocation":"95668:10:16","nodeType":"VariableDeclaration","scope":19025,"src":"95660:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19019,"name":"uint256","nodeType":"ElementaryTypeName","src":"95660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95659:20:16"},"returnParameters":{"id":19024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19023,"mutability":"mutable","name":"success","nameLocation":"95703:7:16","nodeType":"VariableDeclaration","scope":19025,"src":"95698:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19022,"name":"bool","nodeType":"ElementaryTypeName","src":"95698:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"95697:14:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19033,"nodeType":"FunctionDefinition","src":"95995:84:16","nodes":[],"documentation":{"id":19026,"nodeType":"StructuredDocumentation","src":"95718:272:16","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"96004:22:16","parameters":{"id":19029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19028,"mutability":"mutable","name":"snapshotId","nameLocation":"96035:10:16","nodeType":"VariableDeclaration","scope":19033,"src":"96027:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19027,"name":"uint256","nodeType":"ElementaryTypeName","src":"96027:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96026:20:16"},"returnParameters":{"id":19032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19031,"mutability":"mutable","name":"success","nameLocation":"96070:7:16","nodeType":"VariableDeclaration","scope":19033,"src":"96065:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19030,"name":"bool","nodeType":"ElementaryTypeName","src":"96065:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96064:14:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19039,"nodeType":"FunctionDefinition","src":"96176:52:16","nodes":[],"documentation":{"id":19034,"nodeType":"StructuredDocumentation","src":"96085:86:16","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"96185:16:16","parameters":{"id":19037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19036,"mutability":"mutable","name":"account","nameLocation":"96210:7:16","nodeType":"VariableDeclaration","scope":19039,"src":"96202:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19035,"name":"address","nodeType":"ElementaryTypeName","src":"96202:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96201:17:16"},"returnParameters":{"id":19038,"nodeType":"ParameterList","parameters":[],"src":"96227:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19046,"nodeType":"FunctionDefinition","src":"96275:64:16","nodes":[],"documentation":{"id":19040,"nodeType":"StructuredDocumentation","src":"96234:36:16","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"96284:16:16","parameters":{"id":19044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19043,"mutability":"mutable","name":"accounts","nameLocation":"96320:8:16","nodeType":"VariableDeclaration","scope":19046,"src":"96301:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19041,"name":"address","nodeType":"ElementaryTypeName","src":"96301:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19042,"nodeType":"ArrayTypeName","src":"96301:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"96300:29:16"},"returnParameters":{"id":19045,"nodeType":"ParameterList","parameters":[],"src":"96338:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19052,"nodeType":"FunctionDefinition","src":"96374:42:16","nodes":[],"documentation":{"id":19047,"nodeType":"StructuredDocumentation","src":"96345:24:16","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"96383:4:16","parameters":{"id":19050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19049,"mutability":"mutable","name":"newHeight","nameLocation":"96396:9:16","nodeType":"VariableDeclaration","scope":19052,"src":"96388:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19048,"name":"uint256","nodeType":"ElementaryTypeName","src":"96388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96387:19:16"},"returnParameters":{"id":19051,"nodeType":"ParameterList","parameters":[],"src":"96415:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19058,"nodeType":"FunctionDefinition","src":"96555:48:16","nodes":[],"documentation":{"id":19053,"nodeType":"StructuredDocumentation","src":"96422:128:16","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"96564:8:16","parameters":{"id":19056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19055,"mutability":"mutable","name":"blockNumber","nameLocation":"96581:11:16","nodeType":"VariableDeclaration","scope":19058,"src":"96573:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19054,"name":"uint256","nodeType":"ElementaryTypeName","src":"96573:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96572:21:16"},"returnParameters":{"id":19057,"nodeType":"ParameterList","parameters":[],"src":"96602:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19064,"nodeType":"FunctionDefinition","src":"96818:43:16","nodes":[],"documentation":{"id":19059,"nodeType":"StructuredDocumentation","src":"96609:204:16","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"96827:8:16","parameters":{"id":19062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19061,"mutability":"mutable","name":"txHash","nameLocation":"96844:6:16","nodeType":"VariableDeclaration","scope":19064,"src":"96836:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96836:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"96835:16:16"},"returnParameters":{"id":19063,"nodeType":"ParameterList","parameters":[],"src":"96860:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19072,"nodeType":"FunctionDefinition","src":"96921:64:16","nodes":[],"documentation":{"id":19065,"nodeType":"StructuredDocumentation","src":"96867:49:16","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"96930:8:16","parameters":{"id":19070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19067,"mutability":"mutable","name":"forkId","nameLocation":"96947:6:16","nodeType":"VariableDeclaration","scope":19072,"src":"96939:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19066,"name":"uint256","nodeType":"ElementaryTypeName","src":"96939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19069,"mutability":"mutable","name":"blockNumber","nameLocation":"96963:11:16","nodeType":"VariableDeclaration","scope":19072,"src":"96955:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19068,"name":"uint256","nodeType":"ElementaryTypeName","src":"96955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96938:37:16"},"returnParameters":{"id":19071,"nodeType":"ParameterList","parameters":[],"src":"96984:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19080,"nodeType":"FunctionDefinition","src":"97121:59:16","nodes":[],"documentation":{"id":19073,"nodeType":"StructuredDocumentation","src":"96991:125:16","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"97130:8:16","parameters":{"id":19078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19075,"mutability":"mutable","name":"forkId","nameLocation":"97147:6:16","nodeType":"VariableDeclaration","scope":19080,"src":"97139:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19074,"name":"uint256","nodeType":"ElementaryTypeName","src":"97139:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19077,"mutability":"mutable","name":"txHash","nameLocation":"97163:6:16","nodeType":"VariableDeclaration","scope":19080,"src":"97155:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"97155:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"97138:32:16"},"returnParameters":{"id":19079,"nodeType":"ParameterList","parameters":[],"src":"97179:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19086,"nodeType":"FunctionDefinition","src":"97293:45:16","nodes":[],"documentation":{"id":19081,"nodeType":"StructuredDocumentation","src":"97186:102:16","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"97302:10:16","parameters":{"id":19084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19083,"mutability":"mutable","name":"forkId","nameLocation":"97321:6:16","nodeType":"VariableDeclaration","scope":19086,"src":"97313:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19082,"name":"uint256","nodeType":"ElementaryTypeName","src":"97313:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97312:16:16"},"returnParameters":{"id":19085,"nodeType":"ParameterList","parameters":[],"src":"97337:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19094,"nodeType":"FunctionDefinition","src":"97488:71:16","nodes":[],"documentation":{"id":19087,"nodeType":"StructuredDocumentation","src":"97344:139:16","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"97497:12:16","parameters":{"id":19092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19089,"mutability":"mutable","name":"blockNumber","nameLocation":"97518:11:16","nodeType":"VariableDeclaration","scope":19094,"src":"97510:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19088,"name":"uint256","nodeType":"ElementaryTypeName","src":"97510:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19091,"mutability":"mutable","name":"blockHash","nameLocation":"97539:9:16","nodeType":"VariableDeclaration","scope":19094,"src":"97531:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"97531:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"97509:40:16"},"returnParameters":{"id":19093,"nodeType":"ParameterList","parameters":[],"src":"97558:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19102,"nodeType":"FunctionDefinition","src":"97657:61:16","nodes":[],"documentation":{"id":19095,"nodeType":"StructuredDocumentation","src":"97565:87:16","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"97666:8:16","parameters":{"id":19100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19097,"mutability":"mutable","name":"account","nameLocation":"97683:7:16","nodeType":"VariableDeclaration","scope":19102,"src":"97675:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19096,"name":"address","nodeType":"ElementaryTypeName","src":"97675:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19099,"mutability":"mutable","name":"newNonce","nameLocation":"97699:8:16","nodeType":"VariableDeclaration","scope":19102,"src":"97692:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19098,"name":"uint64","nodeType":"ElementaryTypeName","src":"97692:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97674:34:16"},"returnParameters":{"id":19101,"nodeType":"ParameterList","parameters":[],"src":"97717:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19110,"nodeType":"FunctionDefinition","src":"97784:67:16","nodes":[],"documentation":{"id":19103,"nodeType":"StructuredDocumentation","src":"97724:55:16","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"97793:14:16","parameters":{"id":19108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19105,"mutability":"mutable","name":"account","nameLocation":"97816:7:16","nodeType":"VariableDeclaration","scope":19110,"src":"97808:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19104,"name":"address","nodeType":"ElementaryTypeName","src":"97808:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19107,"mutability":"mutable","name":"newNonce","nameLocation":"97832:8:16","nodeType":"VariableDeclaration","scope":19110,"src":"97825:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19106,"name":"uint64","nodeType":"ElementaryTypeName","src":"97825:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97807:34:16"},"returnParameters":{"id":19109,"nodeType":"ParameterList","parameters":[],"src":"97850:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19118,"nodeType":"FunctionDefinition","src":"97950:86:16","nodes":[],"documentation":{"id":19111,"nodeType":"StructuredDocumentation","src":"97857:88:16","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"97959:19:16","parameters":{"id":19114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19113,"mutability":"mutable","name":"name","nameLocation":"97995:4:16","nodeType":"VariableDeclaration","scope":19118,"src":"97979:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19112,"name":"string","nodeType":"ElementaryTypeName","src":"97979:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97978:22:16"},"returnParameters":{"id":19117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19116,"mutability":"mutable","name":"gasUsed","nameLocation":"98027:7:16","nodeType":"VariableDeclaration","scope":19118,"src":"98019:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19115,"name":"uint256","nodeType":"ElementaryTypeName","src":"98019:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98018:17:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19128,"nodeType":"FunctionDefinition","src":"98146:109:16","nodes":[],"documentation":{"id":19119,"nodeType":"StructuredDocumentation","src":"98042:99:16","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"98155:19:16","parameters":{"id":19124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19121,"mutability":"mutable","name":"group","nameLocation":"98191:5:16","nodeType":"VariableDeclaration","scope":19128,"src":"98175:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19120,"name":"string","nodeType":"ElementaryTypeName","src":"98175:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19123,"mutability":"mutable","name":"name","nameLocation":"98214:4:16","nodeType":"VariableDeclaration","scope":19128,"src":"98198:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19122,"name":"string","nodeType":"ElementaryTypeName","src":"98198:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98174:45:16"},"returnParameters":{"id":19127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19126,"mutability":"mutable","name":"gasUsed","nameLocation":"98246:7:16","nodeType":"VariableDeclaration","scope":19128,"src":"98238:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19125,"name":"uint256","nodeType":"ElementaryTypeName","src":"98238:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98237:17:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19134,"nodeType":"FunctionDefinition","src":"98415:63:16","nodes":[],"documentation":{"id":19129,"nodeType":"StructuredDocumentation","src":"98261:149:16","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"98424:13:16","parameters":{"id":19130,"nodeType":"ParameterList","parameters":[],"src":"98437:2:16"},"returnParameters":{"id":19133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19132,"mutability":"mutable","name":"snapshotId","nameLocation":"98466:10:16","nodeType":"VariableDeclaration","scope":19134,"src":"98458:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19131,"name":"uint256","nodeType":"ElementaryTypeName","src":"98458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98457:20:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19142,"nodeType":"FunctionDefinition","src":"98605:69:16","nodes":[],"documentation":{"id":19135,"nodeType":"StructuredDocumentation","src":"98484:116:16","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"98614:13:16","parameters":{"id":19140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19137,"mutability":"mutable","name":"name","nameLocation":"98644:4:16","nodeType":"VariableDeclaration","scope":19142,"src":"98628:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19136,"name":"string","nodeType":"ElementaryTypeName","src":"98628:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19139,"mutability":"mutable","name":"value","nameLocation":"98658:5:16","nodeType":"VariableDeclaration","scope":19142,"src":"98650:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19138,"name":"uint256","nodeType":"ElementaryTypeName","src":"98650:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98627:37:16"},"returnParameters":{"id":19141,"nodeType":"ParameterList","parameters":[],"src":"98673:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19152,"nodeType":"FunctionDefinition","src":"98754:92:16","nodes":[],"documentation":{"id":19143,"nodeType":"StructuredDocumentation","src":"98680:69:16","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"98763:13:16","parameters":{"id":19150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19145,"mutability":"mutable","name":"group","nameLocation":"98793:5:16","nodeType":"VariableDeclaration","scope":19152,"src":"98777:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19144,"name":"string","nodeType":"ElementaryTypeName","src":"98777:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19147,"mutability":"mutable","name":"name","nameLocation":"98816:4:16","nodeType":"VariableDeclaration","scope":19152,"src":"98800:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19146,"name":"string","nodeType":"ElementaryTypeName","src":"98800:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19149,"mutability":"mutable","name":"value","nameLocation":"98830:5:16","nodeType":"VariableDeclaration","scope":19152,"src":"98822:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19148,"name":"uint256","nodeType":"ElementaryTypeName","src":"98822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98776:60:16"},"returnParameters":{"id":19151,"nodeType":"ParameterList","parameters":[],"src":"98845:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19158,"nodeType":"FunctionDefinition","src":"98953:48:16","nodes":[],"documentation":{"id":19153,"nodeType":"StructuredDocumentation","src":"98852:96:16","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"98962:10:16","parameters":{"id":19156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19155,"mutability":"mutable","name":"msgSender","nameLocation":"98981:9:16","nodeType":"VariableDeclaration","scope":19158,"src":"98973:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19154,"name":"address","nodeType":"ElementaryTypeName","src":"98973:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98972:19:16"},"returnParameters":{"id":19157,"nodeType":"ParameterList","parameters":[],"src":"99000:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19166,"nodeType":"FunctionDefinition","src":"99152:66:16","nodes":[],"documentation":{"id":19159,"nodeType":"StructuredDocumentation","src":"99007:140:16","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"99161:10:16","parameters":{"id":19164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19161,"mutability":"mutable","name":"msgSender","nameLocation":"99180:9:16","nodeType":"VariableDeclaration","scope":19166,"src":"99172:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19160,"name":"address","nodeType":"ElementaryTypeName","src":"99172:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19163,"mutability":"mutable","name":"txOrigin","nameLocation":"99199:8:16","nodeType":"VariableDeclaration","scope":19166,"src":"99191:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19162,"name":"address","nodeType":"ElementaryTypeName","src":"99191:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99171:37:16"},"returnParameters":{"id":19165,"nodeType":"ParameterList","parameters":[],"src":"99217:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19172,"nodeType":"FunctionDefinition","src":"99349:57:16","nodes":[],"documentation":{"id":19167,"nodeType":"StructuredDocumentation","src":"99224:120:16","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"99358:16:16","parameters":{"id":19170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19169,"mutability":"mutable","name":"name","nameLocation":"99391:4:16","nodeType":"VariableDeclaration","scope":19172,"src":"99375:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19168,"name":"string","nodeType":"ElementaryTypeName","src":"99375:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99374:22:16"},"returnParameters":{"id":19171,"nodeType":"ParameterList","parameters":[],"src":"99405:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19180,"nodeType":"FunctionDefinition","src":"99490:80:16","nodes":[],"documentation":{"id":19173,"nodeType":"StructuredDocumentation","src":"99412:73:16","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"99499:16:16","parameters":{"id":19178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19175,"mutability":"mutable","name":"group","nameLocation":"99532:5:16","nodeType":"VariableDeclaration","scope":19180,"src":"99516:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19174,"name":"string","nodeType":"ElementaryTypeName","src":"99516:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19177,"mutability":"mutable","name":"name","nameLocation":"99555:4:16","nodeType":"VariableDeclaration","scope":19180,"src":"99539:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19176,"name":"string","nodeType":"ElementaryTypeName","src":"99539:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99515:45:16"},"returnParameters":{"id":19179,"nodeType":"ParameterList","parameters":[],"src":"99569:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19184,"nodeType":"FunctionDefinition","src":"99645:30:16","nodes":[],"documentation":{"id":19181,"nodeType":"StructuredDocumentation","src":"99576:64:16","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"99654:9:16","parameters":{"id":19182,"nodeType":"ParameterList","parameters":[],"src":"99663:2:16"},"returnParameters":{"id":19183,"nodeType":"ParameterList","parameters":[],"src":"99674:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19190,"nodeType":"FunctionDefinition","src":"99799:62:16","nodes":[],"documentation":{"id":19185,"nodeType":"StructuredDocumentation","src":"99681:113:16","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"99808:15:16","parameters":{"id":19186,"nodeType":"ParameterList","parameters":[],"src":"99823:2:16"},"returnParameters":{"id":19189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19188,"mutability":"mutable","name":"gasUsed","nameLocation":"99852:7:16","nodeType":"VariableDeclaration","scope":19190,"src":"99844:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19187,"name":"uint256","nodeType":"ElementaryTypeName","src":"99844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"99843:17:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19198,"nodeType":"FunctionDefinition","src":"100033:82:16","nodes":[],"documentation":{"id":19191,"nodeType":"StructuredDocumentation","src":"99867:161:16","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"100042:15:16","parameters":{"id":19194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19193,"mutability":"mutable","name":"name","nameLocation":"100074:4:16","nodeType":"VariableDeclaration","scope":19198,"src":"100058:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19192,"name":"string","nodeType":"ElementaryTypeName","src":"100058:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100057:22:16"},"returnParameters":{"id":19197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19196,"mutability":"mutable","name":"gasUsed","nameLocation":"100106:7:16","nodeType":"VariableDeclaration","scope":19198,"src":"100098:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19195,"name":"uint256","nodeType":"ElementaryTypeName","src":"100098:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100097:17:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19208,"nodeType":"FunctionDefinition","src":"100240:105:16","nodes":[],"documentation":{"id":19199,"nodeType":"StructuredDocumentation","src":"100121:114:16","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"100249:15:16","parameters":{"id":19204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19201,"mutability":"mutable","name":"group","nameLocation":"100281:5:16","nodeType":"VariableDeclaration","scope":19208,"src":"100265:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19200,"name":"string","nodeType":"ElementaryTypeName","src":"100265:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19203,"mutability":"mutable","name":"name","nameLocation":"100304:4:16","nodeType":"VariableDeclaration","scope":19208,"src":"100288:20:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19202,"name":"string","nodeType":"ElementaryTypeName","src":"100288:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100264:45:16"},"returnParameters":{"id":19207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19206,"mutability":"mutable","name":"gasUsed","nameLocation":"100336:7:16","nodeType":"VariableDeclaration","scope":19208,"src":"100328:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19205,"name":"uint256","nodeType":"ElementaryTypeName","src":"100328:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100327:17:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19218,"nodeType":"FunctionDefinition","src":"100403:69:16","nodes":[],"documentation":{"id":19209,"nodeType":"StructuredDocumentation","src":"100351:47:16","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"100412:5:16","parameters":{"id":19216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19211,"mutability":"mutable","name":"target","nameLocation":"100426:6:16","nodeType":"VariableDeclaration","scope":19218,"src":"100418:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19210,"name":"address","nodeType":"ElementaryTypeName","src":"100418:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19213,"mutability":"mutable","name":"slot","nameLocation":"100442:4:16","nodeType":"VariableDeclaration","scope":19218,"src":"100434:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100434:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19215,"mutability":"mutable","name":"value","nameLocation":"100456:5:16","nodeType":"VariableDeclaration","scope":19218,"src":"100448:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100448:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100417:45:16"},"returnParameters":{"id":19217,"nodeType":"ParameterList","parameters":[],"src":"100471:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19224,"nodeType":"FunctionDefinition","src":"100575:43:16","nodes":[],"documentation":{"id":19219,"nodeType":"StructuredDocumentation","src":"100478:92:16","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"100584:8:16","parameters":{"id":19222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19221,"mutability":"mutable","name":"txHash","nameLocation":"100601:6:16","nodeType":"VariableDeclaration","scope":19224,"src":"100593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100593:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100592:16:16"},"returnParameters":{"id":19223,"nodeType":"ParameterList","parameters":[],"src":"100617:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19232,"nodeType":"FunctionDefinition","src":"100720:59:16","nodes":[],"documentation":{"id":19225,"nodeType":"StructuredDocumentation","src":"100624:91:16","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"100729:8:16","parameters":{"id":19230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19227,"mutability":"mutable","name":"forkId","nameLocation":"100746:6:16","nodeType":"VariableDeclaration","scope":19232,"src":"100738:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19226,"name":"uint256","nodeType":"ElementaryTypeName","src":"100738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19229,"mutability":"mutable","name":"txHash","nameLocation":"100762:6:16","nodeType":"VariableDeclaration","scope":19232,"src":"100754:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100754:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100737:32:16"},"returnParameters":{"id":19231,"nodeType":"ParameterList","parameters":[],"src":"100778:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19238,"nodeType":"FunctionDefinition","src":"100813:50:16","nodes":[],"documentation":{"id":19233,"nodeType":"StructuredDocumentation","src":"100785:23:16","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"100822:10:16","parameters":{"id":19236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19235,"mutability":"mutable","name":"newGasPrice","nameLocation":"100841:11:16","nodeType":"VariableDeclaration","scope":19238,"src":"100833:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19234,"name":"uint256","nodeType":"ElementaryTypeName","src":"100833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100832:21:16"},"returnParameters":{"id":19237,"nodeType":"ParameterList","parameters":[],"src":"100862:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19244,"nodeType":"FunctionDefinition","src":"100901:45:16","nodes":[],"documentation":{"id":19239,"nodeType":"StructuredDocumentation","src":"100869:27:16","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"100910:4:16","parameters":{"id":19242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19241,"mutability":"mutable","name":"newTimestamp","nameLocation":"100923:12:16","nodeType":"VariableDeclaration","scope":19244,"src":"100915:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19240,"name":"uint256","nodeType":"ElementaryTypeName","src":"100915:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100914:22:16"},"returnParameters":{"id":19243,"nodeType":"ParameterList","parameters":[],"src":"100945:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19252,"nodeType":"FunctionDefinition","src":"101071:76:16","nodes":[],"documentation":{"id":19245,"nodeType":"StructuredDocumentation","src":"100952:114:16","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"101080:14:16","parameters":{"id":19248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19247,"mutability":"mutable","name":"snapshotId","nameLocation":"101103:10:16","nodeType":"VariableDeclaration","scope":19252,"src":"101095:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19246,"name":"uint256","nodeType":"ElementaryTypeName","src":"101095:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101094:20:16"},"returnParameters":{"id":19251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19250,"mutability":"mutable","name":"success","nameLocation":"101138:7:16","nodeType":"VariableDeclaration","scope":19252,"src":"101133:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19249,"name":"bool","nodeType":"ElementaryTypeName","src":"101133:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101132:14:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19256,"nodeType":"FunctionDefinition","src":"101274:36:16","nodes":[],"documentation":{"id":19253,"nodeType":"StructuredDocumentation","src":"101153:116:16","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"101283:15:16","parameters":{"id":19254,"nodeType":"ParameterList","parameters":[],"src":"101298:2:16"},"returnParameters":{"id":19255,"nodeType":"ParameterList","parameters":[],"src":"101309:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19264,"nodeType":"FunctionDefinition","src":"101441:79:16","nodes":[],"documentation":{"id":19257,"nodeType":"StructuredDocumentation","src":"101316:120:16","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"101450:17:16","parameters":{"id":19260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19259,"mutability":"mutable","name":"snapshotId","nameLocation":"101476:10:16","nodeType":"VariableDeclaration","scope":19264,"src":"101468:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19258,"name":"uint256","nodeType":"ElementaryTypeName","src":"101468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101467:20:16"},"returnParameters":{"id":19263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19262,"mutability":"mutable","name":"success","nameLocation":"101511:7:16","nodeType":"VariableDeclaration","scope":19264,"src":"101506:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19261,"name":"bool","nodeType":"ElementaryTypeName","src":"101506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101505:14:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19272,"nodeType":"FunctionDefinition","src":"101633:70:16","nodes":[],"documentation":{"id":19265,"nodeType":"StructuredDocumentation","src":"101526:102:16","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"101642:8:16","parameters":{"id":19268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19267,"mutability":"mutable","name":"snapshotId","nameLocation":"101659:10:16","nodeType":"VariableDeclaration","scope":19272,"src":"101651:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19266,"name":"uint256","nodeType":"ElementaryTypeName","src":"101651:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101650:20:16"},"returnParameters":{"id":19271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19270,"mutability":"mutable","name":"success","nameLocation":"101694:7:16","nodeType":"VariableDeclaration","scope":19272,"src":"101689:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19269,"name":"bool","nodeType":"ElementaryTypeName","src":"101689:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101688:14:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19278,"nodeType":"FunctionDefinition","src":"101816:58:16","nodes":[],"documentation":{"id":19273,"nodeType":"StructuredDocumentation","src":"101709:102:16","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"101825:8:16","parameters":{"id":19274,"nodeType":"ParameterList","parameters":[],"src":"101833:2:16"},"returnParameters":{"id":19277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19276,"mutability":"mutable","name":"snapshotId","nameLocation":"101862:10:16","nodeType":"VariableDeclaration","scope":19278,"src":"101854:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19275,"name":"uint256","nodeType":"ElementaryTypeName","src":"101854:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101853:20:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19290,"nodeType":"FunctionDefinition","src":"102026:105:16","nodes":[],"documentation":{"id":19279,"nodeType":"StructuredDocumentation","src":"101914:107:16","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"102035:16:16","parameters":{"id":19288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19281,"mutability":"mutable","name":"callee","nameLocation":"102060:6:16","nodeType":"VariableDeclaration","scope":19290,"src":"102052:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19280,"name":"address","nodeType":"ElementaryTypeName","src":"102052:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19283,"mutability":"mutable","name":"msgValue","nameLocation":"102076:8:16","nodeType":"VariableDeclaration","scope":19290,"src":"102068:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19282,"name":"uint256","nodeType":"ElementaryTypeName","src":"102068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19285,"mutability":"mutable","name":"minGas","nameLocation":"102093:6:16","nodeType":"VariableDeclaration","scope":19290,"src":"102086:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19284,"name":"uint64","nodeType":"ElementaryTypeName","src":"102086:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19287,"mutability":"mutable","name":"data","nameLocation":"102116:4:16","nodeType":"VariableDeclaration","scope":19290,"src":"102101:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19286,"name":"bytes","nodeType":"ElementaryTypeName","src":"102101:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102051:70:16"},"returnParameters":{"id":19289,"nodeType":"ParameterList","parameters":[],"src":"102130:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19304,"nodeType":"FunctionDefinition","src":"102264:127:16","nodes":[],"documentation":{"id":19291,"nodeType":"StructuredDocumentation","src":"102137:122:16","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"102273:16:16","parameters":{"id":19302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19293,"mutability":"mutable","name":"callee","nameLocation":"102298:6:16","nodeType":"VariableDeclaration","scope":19304,"src":"102290:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19292,"name":"address","nodeType":"ElementaryTypeName","src":"102290:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19295,"mutability":"mutable","name":"msgValue","nameLocation":"102314:8:16","nodeType":"VariableDeclaration","scope":19304,"src":"102306:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19294,"name":"uint256","nodeType":"ElementaryTypeName","src":"102306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19297,"mutability":"mutable","name":"minGas","nameLocation":"102331:6:16","nodeType":"VariableDeclaration","scope":19304,"src":"102324:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19296,"name":"uint64","nodeType":"ElementaryTypeName","src":"102324:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19299,"mutability":"mutable","name":"data","nameLocation":"102354:4:16","nodeType":"VariableDeclaration","scope":19304,"src":"102339:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19298,"name":"bytes","nodeType":"ElementaryTypeName","src":"102339:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19301,"mutability":"mutable","name":"count","nameLocation":"102367:5:16","nodeType":"VariableDeclaration","scope":19304,"src":"102360:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19300,"name":"uint64","nodeType":"ElementaryTypeName","src":"102360:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"102289:84:16"},"returnParameters":{"id":19303,"nodeType":"ParameterList","parameters":[],"src":"102390:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19312,"nodeType":"FunctionDefinition","src":"102523:66:16","nodes":[],"documentation":{"id":19305,"nodeType":"StructuredDocumentation","src":"102397:121:16","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"102532:10:16","parameters":{"id":19310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19307,"mutability":"mutable","name":"callee","nameLocation":"102551:6:16","nodeType":"VariableDeclaration","scope":19312,"src":"102543:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19306,"name":"address","nodeType":"ElementaryTypeName","src":"102543:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19309,"mutability":"mutable","name":"data","nameLocation":"102574:4:16","nodeType":"VariableDeclaration","scope":19312,"src":"102559:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19308,"name":"bytes","nodeType":"ElementaryTypeName","src":"102559:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102542:37:16"},"returnParameters":{"id":19311,"nodeType":"ParameterList","parameters":[],"src":"102588:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19322,"nodeType":"FunctionDefinition","src":"102676:80:16","nodes":[],"documentation":{"id":19313,"nodeType":"StructuredDocumentation","src":"102595:76:16","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"102685:10:16","parameters":{"id":19320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19315,"mutability":"mutable","name":"callee","nameLocation":"102704:6:16","nodeType":"VariableDeclaration","scope":19322,"src":"102696:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19314,"name":"address","nodeType":"ElementaryTypeName","src":"102696:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19317,"mutability":"mutable","name":"data","nameLocation":"102727:4:16","nodeType":"VariableDeclaration","scope":19322,"src":"102712:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19316,"name":"bytes","nodeType":"ElementaryTypeName","src":"102712:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19319,"mutability":"mutable","name":"count","nameLocation":"102740:5:16","nodeType":"VariableDeclaration","scope":19322,"src":"102733:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19318,"name":"uint64","nodeType":"ElementaryTypeName","src":"102733:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"102695:51:16"},"returnParameters":{"id":19321,"nodeType":"ParameterList","parameters":[],"src":"102755:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19332,"nodeType":"FunctionDefinition","src":"102844:84:16","nodes":[],"documentation":{"id":19323,"nodeType":"StructuredDocumentation","src":"102762:77:16","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"102853:10:16","parameters":{"id":19330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19325,"mutability":"mutable","name":"callee","nameLocation":"102872:6:16","nodeType":"VariableDeclaration","scope":19332,"src":"102864:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19324,"name":"address","nodeType":"ElementaryTypeName","src":"102864:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19327,"mutability":"mutable","name":"msgValue","nameLocation":"102888:8:16","nodeType":"VariableDeclaration","scope":19332,"src":"102880:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19326,"name":"uint256","nodeType":"ElementaryTypeName","src":"102880:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19329,"mutability":"mutable","name":"data","nameLocation":"102913:4:16","nodeType":"VariableDeclaration","scope":19332,"src":"102898:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19328,"name":"bytes","nodeType":"ElementaryTypeName","src":"102898:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102863:55:16"},"returnParameters":{"id":19331,"nodeType":"ParameterList","parameters":[],"src":"102927:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19344,"nodeType":"FunctionDefinition","src":"103031:98:16","nodes":[],"documentation":{"id":19333,"nodeType":"StructuredDocumentation","src":"102934:92:16","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"103040:10:16","parameters":{"id":19342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19335,"mutability":"mutable","name":"callee","nameLocation":"103059:6:16","nodeType":"VariableDeclaration","scope":19344,"src":"103051:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19334,"name":"address","nodeType":"ElementaryTypeName","src":"103051:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19337,"mutability":"mutable","name":"msgValue","nameLocation":"103075:8:16","nodeType":"VariableDeclaration","scope":19344,"src":"103067:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19336,"name":"uint256","nodeType":"ElementaryTypeName","src":"103067:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19339,"mutability":"mutable","name":"data","nameLocation":"103100:4:16","nodeType":"VariableDeclaration","scope":19344,"src":"103085:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19338,"name":"bytes","nodeType":"ElementaryTypeName","src":"103085:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19341,"mutability":"mutable","name":"count","nameLocation":"103113:5:16","nodeType":"VariableDeclaration","scope":19344,"src":"103106:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19340,"name":"uint64","nodeType":"ElementaryTypeName","src":"103106:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"103050:69:16"},"returnParameters":{"id":19343,"nodeType":"ParameterList","parameters":[],"src":"103128:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19356,"nodeType":"FunctionDefinition","src":"103222:96:16","nodes":[],"documentation":{"id":19345,"nodeType":"StructuredDocumentation","src":"103135:82:16","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"103231:10:16","parameters":{"id":19354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19347,"mutability":"mutable","name":"callee","nameLocation":"103250:6:16","nodeType":"VariableDeclaration","scope":19356,"src":"103242:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19346,"name":"address","nodeType":"ElementaryTypeName","src":"103242:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19349,"mutability":"mutable","name":"msgValue","nameLocation":"103266:8:16","nodeType":"VariableDeclaration","scope":19356,"src":"103258:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19348,"name":"uint256","nodeType":"ElementaryTypeName","src":"103258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19351,"mutability":"mutable","name":"gas","nameLocation":"103283:3:16","nodeType":"VariableDeclaration","scope":19356,"src":"103276:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19350,"name":"uint64","nodeType":"ElementaryTypeName","src":"103276:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19353,"mutability":"mutable","name":"data","nameLocation":"103303:4:16","nodeType":"VariableDeclaration","scope":19356,"src":"103288:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19352,"name":"bytes","nodeType":"ElementaryTypeName","src":"103288:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"103241:67:16"},"returnParameters":{"id":19355,"nodeType":"ParameterList","parameters":[],"src":"103317:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19370,"nodeType":"FunctionDefinition","src":"103427:110:16","nodes":[],"documentation":{"id":19357,"nodeType":"StructuredDocumentation","src":"103324:98:16","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"103436:10:16","parameters":{"id":19368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19359,"mutability":"mutable","name":"callee","nameLocation":"103455:6:16","nodeType":"VariableDeclaration","scope":19370,"src":"103447:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19358,"name":"address","nodeType":"ElementaryTypeName","src":"103447:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19361,"mutability":"mutable","name":"msgValue","nameLocation":"103471:8:16","nodeType":"VariableDeclaration","scope":19370,"src":"103463:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19360,"name":"uint256","nodeType":"ElementaryTypeName","src":"103463:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19363,"mutability":"mutable","name":"gas","nameLocation":"103488:3:16","nodeType":"VariableDeclaration","scope":19370,"src":"103481:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19362,"name":"uint64","nodeType":"ElementaryTypeName","src":"103481:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19365,"mutability":"mutable","name":"data","nameLocation":"103508:4:16","nodeType":"VariableDeclaration","scope":19370,"src":"103493:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19364,"name":"bytes","nodeType":"ElementaryTypeName","src":"103493:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19367,"mutability":"mutable","name":"count","nameLocation":"103521:5:16","nodeType":"VariableDeclaration","scope":19370,"src":"103514:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19366,"name":"uint64","nodeType":"ElementaryTypeName","src":"103514:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"103446:81:16"},"returnParameters":{"id":19369,"nodeType":"ParameterList","parameters":[],"src":"103536:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19384,"nodeType":"FunctionDefinition","src":"103896:134:16","nodes":[],"documentation":{"id":19371,"nodeType":"StructuredDocumentation","src":"103543:348:16","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"103905:19:16","parameters":{"id":19382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19373,"mutability":"mutable","name":"checkTopic0","nameLocation":"103930:11:16","nodeType":"VariableDeclaration","scope":19384,"src":"103925:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19372,"name":"bool","nodeType":"ElementaryTypeName","src":"103925:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19375,"mutability":"mutable","name":"checkTopic1","nameLocation":"103948:11:16","nodeType":"VariableDeclaration","scope":19384,"src":"103943:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19374,"name":"bool","nodeType":"ElementaryTypeName","src":"103943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19377,"mutability":"mutable","name":"checkTopic2","nameLocation":"103966:11:16","nodeType":"VariableDeclaration","scope":19384,"src":"103961:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19376,"name":"bool","nodeType":"ElementaryTypeName","src":"103961:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19379,"mutability":"mutable","name":"checkTopic3","nameLocation":"103984:11:16","nodeType":"VariableDeclaration","scope":19384,"src":"103979:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19378,"name":"bool","nodeType":"ElementaryTypeName","src":"103979:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19381,"mutability":"mutable","name":"checkData","nameLocation":"104002:9:16","nodeType":"VariableDeclaration","scope":19384,"src":"103997:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19380,"name":"bool","nodeType":"ElementaryTypeName","src":"103997:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"103924:88:16"},"returnParameters":{"id":19383,"nodeType":"ParameterList","parameters":[],"src":"104029:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19400,"nodeType":"FunctionDefinition","src":"104133:197:16","nodes":[],"documentation":{"id":19385,"nodeType":"StructuredDocumentation","src":"104036:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"104142:19:16","parameters":{"id":19398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19387,"mutability":"mutable","name":"checkTopic0","nameLocation":"104176:11:16","nodeType":"VariableDeclaration","scope":19400,"src":"104171:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19386,"name":"bool","nodeType":"ElementaryTypeName","src":"104171:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19389,"mutability":"mutable","name":"checkTopic1","nameLocation":"104202:11:16","nodeType":"VariableDeclaration","scope":19400,"src":"104197:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19388,"name":"bool","nodeType":"ElementaryTypeName","src":"104197:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19391,"mutability":"mutable","name":"checkTopic2","nameLocation":"104228:11:16","nodeType":"VariableDeclaration","scope":19400,"src":"104223:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19390,"name":"bool","nodeType":"ElementaryTypeName","src":"104223:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19393,"mutability":"mutable","name":"checkTopic3","nameLocation":"104254:11:16","nodeType":"VariableDeclaration","scope":19400,"src":"104249:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19392,"name":"bool","nodeType":"ElementaryTypeName","src":"104249:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19395,"mutability":"mutable","name":"checkData","nameLocation":"104280:9:16","nodeType":"VariableDeclaration","scope":19400,"src":"104275:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19394,"name":"bool","nodeType":"ElementaryTypeName","src":"104275:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19397,"mutability":"mutable","name":"emitter","nameLocation":"104307:7:16","nodeType":"VariableDeclaration","scope":19400,"src":"104299:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19396,"name":"address","nodeType":"ElementaryTypeName","src":"104299:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"104161:159:16"},"returnParameters":{"id":19399,"nodeType":"ParameterList","parameters":[],"src":"104329:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19404,"nodeType":"FunctionDefinition","src":"104620:40:16","nodes":[],"documentation":{"id":19401,"nodeType":"StructuredDocumentation","src":"104336:279:16","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"104629:19:16","parameters":{"id":19402,"nodeType":"ParameterList","parameters":[],"src":"104648:2:16"},"returnParameters":{"id":19403,"nodeType":"ParameterList","parameters":[],"src":"104659:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19410,"nodeType":"FunctionDefinition","src":"104763:55:16","nodes":[],"documentation":{"id":19405,"nodeType":"StructuredDocumentation","src":"104666:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"104772:19:16","parameters":{"id":19408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19407,"mutability":"mutable","name":"emitter","nameLocation":"104800:7:16","nodeType":"VariableDeclaration","scope":19410,"src":"104792:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19406,"name":"address","nodeType":"ElementaryTypeName","src":"104792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"104791:17:16"},"returnParameters":{"id":19409,"nodeType":"ParameterList","parameters":[],"src":"104817:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19422,"nodeType":"FunctionDefinition","src":"105157:99:16","nodes":[],"documentation":{"id":19411,"nodeType":"StructuredDocumentation","src":"104824:328:16","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"105166:10:16","parameters":{"id":19420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19413,"mutability":"mutable","name":"checkTopic1","nameLocation":"105182:11:16","nodeType":"VariableDeclaration","scope":19422,"src":"105177:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19412,"name":"bool","nodeType":"ElementaryTypeName","src":"105177:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19415,"mutability":"mutable","name":"checkTopic2","nameLocation":"105200:11:16","nodeType":"VariableDeclaration","scope":19422,"src":"105195:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19414,"name":"bool","nodeType":"ElementaryTypeName","src":"105195:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19417,"mutability":"mutable","name":"checkTopic3","nameLocation":"105218:11:16","nodeType":"VariableDeclaration","scope":19422,"src":"105213:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19416,"name":"bool","nodeType":"ElementaryTypeName","src":"105213:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19419,"mutability":"mutable","name":"checkData","nameLocation":"105236:9:16","nodeType":"VariableDeclaration","scope":19422,"src":"105231:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19418,"name":"bool","nodeType":"ElementaryTypeName","src":"105231:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"105176:70:16"},"returnParameters":{"id":19421,"nodeType":"ParameterList","parameters":[],"src":"105255:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19436,"nodeType":"FunctionDefinition","src":"105359:124:16","nodes":[],"documentation":{"id":19423,"nodeType":"StructuredDocumentation","src":"105262:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"105368:10:16","parameters":{"id":19434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19425,"mutability":"mutable","name":"checkTopic1","nameLocation":"105384:11:16","nodeType":"VariableDeclaration","scope":19436,"src":"105379:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19424,"name":"bool","nodeType":"ElementaryTypeName","src":"105379:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19427,"mutability":"mutable","name":"checkTopic2","nameLocation":"105402:11:16","nodeType":"VariableDeclaration","scope":19436,"src":"105397:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19426,"name":"bool","nodeType":"ElementaryTypeName","src":"105397:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19429,"mutability":"mutable","name":"checkTopic3","nameLocation":"105420:11:16","nodeType":"VariableDeclaration","scope":19436,"src":"105415:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19428,"name":"bool","nodeType":"ElementaryTypeName","src":"105415:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19431,"mutability":"mutable","name":"checkData","nameLocation":"105438:9:16","nodeType":"VariableDeclaration","scope":19436,"src":"105433:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19430,"name":"bool","nodeType":"ElementaryTypeName","src":"105433:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19433,"mutability":"mutable","name":"emitter","nameLocation":"105457:7:16","nodeType":"VariableDeclaration","scope":19436,"src":"105449:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19432,"name":"address","nodeType":"ElementaryTypeName","src":"105449:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"105378:87:16"},"returnParameters":{"id":19435,"nodeType":"ParameterList","parameters":[],"src":"105482:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19440,"nodeType":"FunctionDefinition","src":"105753:31:16","nodes":[],"documentation":{"id":19437,"nodeType":"StructuredDocumentation","src":"105489:259:16","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"105762:10:16","parameters":{"id":19438,"nodeType":"ParameterList","parameters":[],"src":"105772:2:16"},"returnParameters":{"id":19439,"nodeType":"ParameterList","parameters":[],"src":"105783:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19446,"nodeType":"FunctionDefinition","src":"105887:46:16","nodes":[],"documentation":{"id":19441,"nodeType":"StructuredDocumentation","src":"105790:92:16","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"105896:10:16","parameters":{"id":19444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19443,"mutability":"mutable","name":"emitter","nameLocation":"105915:7:16","nodeType":"VariableDeclaration","scope":19446,"src":"105907:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19442,"name":"address","nodeType":"ElementaryTypeName","src":"105907:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"105906:17:16"},"returnParameters":{"id":19445,"nodeType":"ParameterList","parameters":[],"src":"105932:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19452,"nodeType":"FunctionDefinition","src":"106011:57:16","nodes":[],"documentation":{"id":19447,"nodeType":"StructuredDocumentation","src":"105939:67:16","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"106020:19:16","parameters":{"id":19450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19449,"mutability":"mutable","name":"revertData","nameLocation":"106047:10:16","nodeType":"VariableDeclaration","scope":19452,"src":"106040:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19448,"name":"bytes4","nodeType":"ElementaryTypeName","src":"106040:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"106039:19:16"},"returnParameters":{"id":19451,"nodeType":"ParameterList","parameters":[],"src":"106067:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19460,"nodeType":"FunctionDefinition","src":"106167:75:16","nodes":[],"documentation":{"id":19453,"nodeType":"StructuredDocumentation","src":"106074:88:16","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"106176:19:16","parameters":{"id":19458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19455,"mutability":"mutable","name":"revertData","nameLocation":"106203:10:16","nodeType":"VariableDeclaration","scope":19460,"src":"106196:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19454,"name":"bytes4","nodeType":"ElementaryTypeName","src":"106196:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19457,"mutability":"mutable","name":"reverter","nameLocation":"106223:8:16","nodeType":"VariableDeclaration","scope":19460,"src":"106215:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19456,"name":"address","nodeType":"ElementaryTypeName","src":"106215:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106195:37:16"},"returnParameters":{"id":19459,"nodeType":"ParameterList","parameters":[],"src":"106241:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19464,"nodeType":"FunctionDefinition","src":"106308:33:16","nodes":[],"documentation":{"id":19461,"nodeType":"StructuredDocumentation","src":"106248:55:16","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"106317:12:16","parameters":{"id":19462,"nodeType":"ParameterList","parameters":[],"src":"106329:2:16"},"returnParameters":{"id":19463,"nodeType":"ParameterList","parameters":[],"src":"106340:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19470,"nodeType":"FunctionDefinition","src":"106423:50:16","nodes":[],"documentation":{"id":19465,"nodeType":"StructuredDocumentation","src":"106347:71:16","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"106432:12:16","parameters":{"id":19468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19467,"mutability":"mutable","name":"revertData","nameLocation":"106452:10:16","nodeType":"VariableDeclaration","scope":19470,"src":"106445:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19466,"name":"bytes4","nodeType":"ElementaryTypeName","src":"106445:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"106444:19:16"},"returnParameters":{"id":19469,"nodeType":"ParameterList","parameters":[],"src":"106472:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19476,"nodeType":"FunctionDefinition","src":"106555:58:16","nodes":[],"documentation":{"id":19471,"nodeType":"StructuredDocumentation","src":"106479:71:16","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"106564:12:16","parameters":{"id":19474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19473,"mutability":"mutable","name":"revertData","nameLocation":"106592:10:16","nodeType":"VariableDeclaration","scope":19476,"src":"106577:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19472,"name":"bytes","nodeType":"ElementaryTypeName","src":"106577:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"106576:27:16"},"returnParameters":{"id":19475,"nodeType":"ParameterList","parameters":[],"src":"106612:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19482,"nodeType":"FunctionDefinition","src":"106699:49:16","nodes":[],"documentation":{"id":19477,"nodeType":"StructuredDocumentation","src":"106619:75:16","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"106708:12:16","parameters":{"id":19480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19479,"mutability":"mutable","name":"reverter","nameLocation":"106729:8:16","nodeType":"VariableDeclaration","scope":19482,"src":"106721:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19478,"name":"address","nodeType":"ElementaryTypeName","src":"106721:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106720:18:16"},"returnParameters":{"id":19481,"nodeType":"ParameterList","parameters":[],"src":"106747:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19490,"nodeType":"FunctionDefinition","src":"106837:68:16","nodes":[],"documentation":{"id":19483,"nodeType":"StructuredDocumentation","src":"106754:78:16","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"106846:12:16","parameters":{"id":19488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19485,"mutability":"mutable","name":"revertData","nameLocation":"106866:10:16","nodeType":"VariableDeclaration","scope":19490,"src":"106859:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19484,"name":"bytes4","nodeType":"ElementaryTypeName","src":"106859:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19487,"mutability":"mutable","name":"reverter","nameLocation":"106886:8:16","nodeType":"VariableDeclaration","scope":19490,"src":"106878:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19486,"name":"address","nodeType":"ElementaryTypeName","src":"106878:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106858:37:16"},"returnParameters":{"id":19489,"nodeType":"ParameterList","parameters":[],"src":"106904:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19498,"nodeType":"FunctionDefinition","src":"107010:76:16","nodes":[],"documentation":{"id":19491,"nodeType":"StructuredDocumentation","src":"106911:94:16","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"107019:12:16","parameters":{"id":19496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19493,"mutability":"mutable","name":"revertData","nameLocation":"107047:10:16","nodeType":"VariableDeclaration","scope":19498,"src":"107032:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19492,"name":"bytes","nodeType":"ElementaryTypeName","src":"107032:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19495,"mutability":"mutable","name":"reverter","nameLocation":"107067:8:16","nodeType":"VariableDeclaration","scope":19498,"src":"107059:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19494,"name":"address","nodeType":"ElementaryTypeName","src":"107059:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"107031:45:16"},"returnParameters":{"id":19497,"nodeType":"ParameterList","parameters":[],"src":"107085:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19506,"nodeType":"FunctionDefinition","src":"107315:59:16","nodes":[],"documentation":{"id":19499,"nodeType":"StructuredDocumentation","src":"107092:218:16","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"107324:16:16","parameters":{"id":19504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19501,"mutability":"mutable","name":"min","nameLocation":"107348:3:16","nodeType":"VariableDeclaration","scope":19506,"src":"107341:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19500,"name":"uint64","nodeType":"ElementaryTypeName","src":"107341:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19503,"mutability":"mutable","name":"max","nameLocation":"107360:3:16","nodeType":"VariableDeclaration","scope":19506,"src":"107353:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19502,"name":"uint64","nodeType":"ElementaryTypeName","src":"107353:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"107340:24:16"},"returnParameters":{"id":19505,"nodeType":"ParameterList","parameters":[],"src":"107373:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19514,"nodeType":"FunctionDefinition","src":"107616:63:16","nodes":[],"documentation":{"id":19507,"nodeType":"StructuredDocumentation","src":"107380:231:16","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"107625:20:16","parameters":{"id":19512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19509,"mutability":"mutable","name":"min","nameLocation":"107653:3:16","nodeType":"VariableDeclaration","scope":19514,"src":"107646:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19508,"name":"uint64","nodeType":"ElementaryTypeName","src":"107646:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19511,"mutability":"mutable","name":"max","nameLocation":"107665:3:16","nodeType":"VariableDeclaration","scope":19514,"src":"107658:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19510,"name":"uint64","nodeType":"ElementaryTypeName","src":"107658:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"107645:24:16"},"returnParameters":{"id":19513,"nodeType":"ParameterList","parameters":[],"src":"107678:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19520,"nodeType":"FunctionDefinition","src":"107761:38:16","nodes":[],"documentation":{"id":19515,"nodeType":"StructuredDocumentation","src":"107685:71:16","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"107770:4:16","parameters":{"id":19518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19517,"mutability":"mutable","name":"skipTest","nameLocation":"107780:8:16","nodeType":"VariableDeclaration","scope":19520,"src":"107775:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19516,"name":"bool","nodeType":"ElementaryTypeName","src":"107775:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"107774:15:16"},"returnParameters":{"id":19519,"nodeType":"ParameterList","parameters":[],"src":"107798:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19528,"nodeType":"FunctionDefinition","src":"107895:62:16","nodes":[],"documentation":{"id":19521,"nodeType":"StructuredDocumentation","src":"107805:85:16","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"107904:4:16","parameters":{"id":19526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19523,"mutability":"mutable","name":"skipTest","nameLocation":"107914:8:16","nodeType":"VariableDeclaration","scope":19528,"src":"107909:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19522,"name":"bool","nodeType":"ElementaryTypeName","src":"107909:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19525,"mutability":"mutable","name":"reason","nameLocation":"107940:6:16","nodeType":"VariableDeclaration","scope":19528,"src":"107924:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19524,"name":"string","nodeType":"ElementaryTypeName","src":"107924:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107908:39:16"},"returnParameters":{"id":19527,"nodeType":"ParameterList","parameters":[],"src":"107956:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19532,"nodeType":"FunctionDefinition","src":"108032:41:16","nodes":[],"documentation":{"id":19529,"nodeType":"StructuredDocumentation","src":"107963:64:16","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"108041:20:16","parameters":{"id":19530,"nodeType":"ParameterList","parameters":[],"src":"108061:2:16"},"returnParameters":{"id":19531,"nodeType":"ParameterList","parameters":[],"src":"108072:0:16"},"scope":19533,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":18692,"name":"VmSafe","nameLocations":["87310:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":18690,"src":"87310:6:16"},"id":18693,"nodeType":"InheritanceSpecifier","src":"87310:6:16"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":18691,"nodeType":"StructuredDocumentation","src":"87123:171:16","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19533,18690],"name":"Vm","nameLocation":"87304:2:16","scope":19534,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":16}